{"name": "test_affairs_log_sel5", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[span[text()=\"定时排产\"]]", "trace": "self = <Pages.systemPage.affairs_page.AffairsPage object at 0x0000015E2925E560>\nby_or_element = 'xpath', value = '//li[span[text()=\"定时排产\"]]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e252b75bd590f4caf3b56834b43a3106\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000015E27C01CF0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff634466f65+78965]\nE       \tGetHandleVerifier [0x0x7ff634466fc0+79056]\nE       \t(No symbol) [0x0x7ff6341f9dda]\nE       \t(No symbol) [0x0x7ff6342502ea]\nE       \t(No symbol) [0x0x7ff63425059c]\nE       \t(No symbol) [0x0x7ff6342a3f37]\nE       \t(No symbol) [0x0x7ff6342786af]\nE       \t(No symbol) [0x0x7ff6342a0dbe]\nE       \t(No symbol) [0x0x7ff634278443]\nE       \t(No symbol) [0x0x7ff634241311]\nE       \t(No symbol) [0x0x7ff6342420a3]\nE       \tGetHandleVerifier [0x0x7ff63471e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff634718993+2903715]\nE       \tGetHandleVerifier [0x0x7ff634736aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6344816fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6344896ef+220159]\nE       \tGetHandleVerifier [0x0x7ff63446faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff63446fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6344564d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff992b87374+20]\nE       \tRtlUserThreadStart [0x0x7ff99357cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_affairs.TestAffairsPage object at 0x0000015E27F731C0>\nlogin_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e252b75bd590f4caf3b56834b43a3106\")>\n\n    @allure.story(\"流程日志-事务搜索成功\")\n    def test_affairs_log_sel5(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        affairs_name = \"定时排产\"\n        num = 1000\n        affairs.click_process_log()\n        affairs.click_paging(num)\n        sleep(1)\n>       affairs.sel_log_all(affairs_name=affairs_name)\n\ntest_affairs.py:1359: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\affairs_page.py:370: in sel_log_all\n    self.click_button(f'//li[span[text()=\"{affairs_name}\"]]')\n..\\..\\Pages\\systemPage\\affairs_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.affairs_page.AffairsPage object at 0x0000015E2925E560>\nby_or_element = 'xpath', value = '//li[span[text()=\"定时排产\"]]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[span[text()=\"定时排产\"]]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_affairs_log_sel5_failure", "source": "3ae53ecb-12df-4bfd-b133-6a47b7ceb1c6-attachment.png", "type": "image/png"}, {"name": "test_affairs_log_sel5_source", "source": "7f8b2839-a15c-4451-a122-89edc03207f6-attachment.html", "type": "text/html"}, {"name": "log", "source": "d1919777-10f9-4b13-988a-0c3c0156d906-attachment.txt", "type": "text/plain"}], "start": 1755074495273, "stop": 1755074508106, "uuid": "8703dfd0-ef6e-4d85-aa4d-aaad385e0fdd", "historyId": "ba941f1fcf57a55a43c57dd99375a0df", "testCaseId": "ba941f1fcf57a55a43c57dd99375a0df", "fullName": "Tests.test_system.test_affairs.TestAffairsPage#test_affairs_log_sel5", "labels": [{"name": "story", "value": "流程日志-事务搜索成功"}, {"name": "feature", "value": "事务管理页用例"}, {"name": "tag", "value": "run(order=202)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_affairs"}, {"name": "subSuite", "value": "TestAffairsPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "35640-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_affairs"}]}