{"name": "test_imp_copy1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_system.test_imp.TestImpPage object at 0x000001F7AE4FD090>\nlogin_to_imp = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7f4f6cbe47b825b8dd6b2557da036f87\")>\n\n    @allure.story(\"点击复制方案，只输入源方案，不允许保存\")\n    # @pytest.mark.run(order=1)\n    def test_imp_copy1(self, login_to_imp):\n        driver = login_to_imp  # WebDriver 实例\n        imp = ImpPage(driver)  # 用 driver 初始化 ImpPage\n        add = AddsPages(driver)\n        name = \"1导入设置方案\"\n        copyname = '1同步导入1'\n>       imp.copy_(name=name)\n\ntest_imp.py:225: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\imp_page.py:103: in copy_\n    WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.XPATH, f'//ul/li[text()=\"{name}\"]'))).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7f4f6cbe47b825b8dd6b2557da036f87\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001F7AE494DC0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_imp_copy1_failure", "source": "54483065-90bf-4b0f-9774-999764badd3f-attachment.png", "type": "image/png"}, {"name": "test_imp_copy1_source", "source": "755bcdc6-7520-4451-aa0a-a0a051e11f19-attachment.html", "type": "text/html"}, {"name": "log", "source": "7917cd6d-3907-4405-8f29-030eb3a40de7-attachment.txt", "type": "text/plain"}], "start": 1757669913501, "stop": 1757669925492, "uuid": "ba17bcbc-5cf3-4cb4-8915-36031eaf76c5", "historyId": "a97c0e30d53dccb36ad3f71b7ef42fa0", "testCaseId": "a97c0e30d53dccb36ad3f71b7ef42fa0", "fullName": "Tests.test_system.test_imp.TestImpPage#test_imp_copy1", "labels": [{"name": "feature", "value": "导入设置页用例"}, {"name": "story", "value": "点击复制方案，只输入源方案，不允许保存"}, {"name": "tag", "value": "run(order=207)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_imp"}, {"name": "subSuite", "value": "TestImpPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "26004-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_imp"}]}