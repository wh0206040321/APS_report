{"name": "test_psi_addall", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]", "trace": "self = <Pages.systemPage.psi_page.PsiPage object at 0x0000021030D8A410>\nby_or_element = 'xpath'\nvalue = '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7557646f2953b71ec5daa7db6cf6c88e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000021030CE5510>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_psi.TestPSIPage object at 0x0000021030D8BDC0>\nlogin_to_psi = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7557646f2953b71ec5daa7db6cf6c88e\")>\n\n    @allure.story(\"添加全部成功\")\n    # @pytest.mark.run(order=1)\n    def test_psi_addall(self, login_to_psi):\n        driver = login_to_psi  # WebDriver 实例\n        psi = PsiPage(driver)  # 用 driver 初始化 PsiPage\n        name = \"添加全部\"\n        list_update = [\n            '//div[label[text()=\"标签\"]]//input',\n            '//div[label[text()=\"显示内容\"]]//input',\n            '//div[label[text()=\"初始值\"]]//input',\n            '//div[label[text()=\"文字颜色表达式\"]]//input',\n            '//div[label[text()=\"背景颜色表达式\"]]//input',\n            '//div[label[text()=\"限制0的数值\"]]//input',\n        ]\n        list_group = [\n            '//div[p[text()=\" 标签: \"]]//input',\n            '//div[p[text()=\" 组化键: \"]]//input',\n            '//div[p[text()=\" 显示空数据: \"]]//input',\n            '//div[@class=\"vxe-modal--box\"]//table[@class=\"vxe-table--body\"]//tr/td[2]//input',\n        ]\n    \n        list_ = [\n            '//div[p[text()=\"PSI名称: \"]]//input',\n            '//div[p[text()=\"最上位行收集条件: \"]]//input',\n            '//div[p[text()=\"筛选方法: \"]]//input',\n            '//div[p[text()=\"PSI名称: \"]]//input',\n        ]\n        psi.add_psi(name=name)\n        psi.click_data(num=1, name=\"表行\")\n        psi.enter_group_setting(name)\n        psi.enter_group_update(name)\n        before_v1 = psi.batch_acquisition_input(list_update)\n        psi.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[last()]//span[text()=\"确定\"]')\n        before_v2 = psi.batch_acquisition_input(list_group)\n        psi.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n        before_v3 = psi.batch_acquisition_input(list_)\n        before_input1 = psi.get_find_element_xpath('(//table[@class=\"vxe-table--body\"]//tr/td[2]//input)[1]').get_attribute(\"value\")\n    \n        psi.click_data(num=2, name=\"表列\")\n        psi.enter_group_setting(name)\n        psi.enter_group_update(name)\n        before_v21 = psi.batch_acquisition_input(list_update)\n        psi.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[last()]//span[text()=\"确定\"]')\n        before_v22 = psi.batch_acquisition_input(list_group)\n        psi.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n        before_input2 = psi.get_find_element_xpath(\n            '(//table[@class=\"vxe-table--body\"]//tr/td[2]//input)[1]').get_attribute(\"value\")\n    \n        psi.click_data(num=3, name=\"内容\")\n        psi.enter_group_update(name)\n        before_v32 = psi.batch_acquisition_input(list_update)\n>       psi.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n\ntest_psi.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\psi_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.psi_page.PsiPage object at 0x0000021030D8A410>\nby_or_element = 'xpath'\nvalue = '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_psi_addall_failure", "source": "97164bfe-d340-4f15-a770-5c400b9a0fd3-attachment.png", "type": "image/png"}, {"name": "test_psi_addall_source", "source": "8f811392-e6d1-4bea-805e-ce1cb4989a79-attachment.html", "type": "text/html"}, {"name": "log", "source": "8e8300d6-b423-4b5a-a238-bc130754afac-attachment.txt", "type": "text/plain"}], "start": 1755584486956, "stop": 1755584527102, "uuid": "2abc72b4-37cc-4487-8818-c10d511ba3f3", "historyId": "7041f4f033d22b91956a33f20f2f92b3", "testCaseId": "7041f4f033d22b91956a33f20f2f92b3", "fullName": "Tests.test_system.test_psi.TestPSIPage#test_psi_addall", "labels": [{"name": "feature", "value": "PSI设置用例"}, {"name": "story", "value": "添加全部成功"}, {"name": "tag", "value": "run(order=203)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_psi"}, {"name": "subSuite", "value": "TestPSIPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "32264-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_psi"}]}