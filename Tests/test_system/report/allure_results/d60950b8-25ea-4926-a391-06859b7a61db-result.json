{"name": "test_user_t1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7a0386f65+78965]\n\tGetHandleVerifier [0x0x7ff7a0386fc0+79056]\n\t(No symbol) [0x0x7ff7a0119dda]\n\t(No symbol) [0x0x7ff7a01702ea]\n\t(No symbol) [0x0x7ff7a017059c]\n\t(No symbol) [0x0x7ff7a01c3f37]\n\t(No symbol) [0x0x7ff7a01986af]\n\t(No symbol) [0x0x7ff7a01c0dbe]\n\t(No symbol) [0x0x7ff7a0198443]\n\t(No symbol) [0x0x7ff7a0161311]\n\t(No symbol) [0x0x7ff7a01620a3]\n\tGetHandleVerifier [0x0x7ff7a063e26d+2926461]\n\tGetHandleVerifier [0x0x7ff7a0638993+2903715]\n\tGetHandleVerifier [0x0x7ff7a0656aed+3026941]\n\tGetHandleVerifier [0x0x7ff7a03a16fe+187406]\n\tGetHandleVerifier [0x0x7ff7a03a96ef+220159]\n\tGetHandleVerifier [0x0x7ff7a038faf4+114692]\n\tGetHandleVerifier [0x0x7ff7a038fca9+115129]\n\tGetHandleVerifier [0x0x7ff7a03764d8+10728]\n\tBaseThreadInitThunk [0x0x7ffae7f27374+20]\n\tRtlUserThreadStart [0x0x7ffae8d3cc91+33]", "trace": "self = <test_system.test_userRole.TestUserRolePage object at 0x000002050BD3EB90>\nlogin_to_userrole = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bb5d8c91c6e4159d21ab4b308e97ea38\")>\n\n    @allure.story(\"设置用户锁定成功\")\n    # @pytest.mark.run(order=1)\n    def test_user_t1(self, login_to_userrole):\n        driver = login_to_userrole  # WebDriver 实例\n        user = UserRolePage(driver)  # 用 driver 初始化 UserRolePage\n        page = LoginPage(driver)\n        name = '1user2'\n        password = 'Qw123456'\n        user.select_input(name)\n        sleep(1)\n        user.click_button(f'//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"{name}\"]')\n        sleep(0.5)\n        user.click_all_button(\"编辑\")\n        user.click_button('//div[label[text()=\"是否锁定\"]]/div//span')\n        user.click_all_button(\"保存\")\n        sleep(1)\n>       message = user.get_find_message()\n\ntest_userRole.py:503: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\userRole_page.py:35: in get_find_message\n    message = WebDriverWait(self.driver, 15).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bb5d8c91c6e4159d21ab4b308e97ea38\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002050BCB4DC0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7a0386f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7a0386fc0+79056]\nE       \t(No symbol) [0x0x7ff7a0119dda]\nE       \t(No symbol) [0x0x7ff7a01702ea]\nE       \t(No symbol) [0x0x7ff7a017059c]\nE       \t(No symbol) [0x0x7ff7a01c3f37]\nE       \t(No symbol) [0x0x7ff7a01986af]\nE       \t(No symbol) [0x0x7ff7a01c0dbe]\nE       \t(No symbol) [0x0x7ff7a0198443]\nE       \t(No symbol) [0x0x7ff7a0161311]\nE       \t(No symbol) [0x0x7ff7a01620a3]\nE       \tGetHandleVerifier [0x0x7ff7a063e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7a0638993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7a0656aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7a03a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7a03a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7a038faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7a038fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7a03764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffae7f27374+20]\nE       \tRtlUserThreadStart [0x0x7ffae8d3cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_user_t1_failure", "source": "9a2d3444-8f1c-4f83-a58c-cbd0ddc030d9-attachment.png", "type": "image/png"}, {"name": "test_user_t1_source", "source": "a0a9c461-e712-47d6-8ef1-72c82c1b7b65-attachment.html", "type": "text/html"}, {"name": "log", "source": "6495c439-a3f3-4d9d-ac1d-f4394be95bbc-attachment.txt", "type": "text/plain"}], "start": 1757328532411, "stop": 1757328553747, "uuid": "e4a9d812-011d-4c23-b5cd-dddd9e613e68", "historyId": "8b510fa1823a4aabd5da42775a48d931", "testCaseId": "8b510fa1823a4aabd5da42775a48d931", "fullName": "Tests.test_system.test_userRole.TestUserRolePage#test_user_t1", "labels": [{"name": "feature", "value": "用户权限管理页用例"}, {"name": "story", "value": "设置用户锁定成功"}, {"name": "tag", "value": "run(order=206)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_userRole"}, {"name": "subSuite", "value": "TestUserRolePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "20368-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_userRole"}]}