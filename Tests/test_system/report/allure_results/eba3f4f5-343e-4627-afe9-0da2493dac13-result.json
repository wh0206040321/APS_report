{"name": "test_environment_plan_numinput3", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //label[text()=\"备注1\"]/following-sibling::div//input; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception", "trace": "self = <Pages.systemPage.environment_page.EnvironmentPage object at 0x000001F09092CEE0>\nxpath_list = ['//label[text()=\"备注1\"]/following-sibling::div//input', '//label[text()=\"备注2\"]/following-sibling::div//input', '//label[text()=\"备注3\"]/following-sibling::div//input', '//label[text()=\"备注4\"]/following-sibling::div//input']\ntext_value = ''\n\n    def batch_acquisition_input(self, xpath_list=[], text_value=\"\"):\n        \"\"\"批量获取输入框\"\"\"\n        values = []\n        for index, xpath in enumerate(xpath_list, 1):\n            try:\n>               value = self.get_find_element_xpath(xpath).get_attribute(\"value\")\n\n..\\..\\Pages\\systemPage\\environment_page.py:131: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\environment_page.py:27: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\n..\\..\\Pages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7e10f4f76815c5504b2a02aa4bee1f9e\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001F0916F9F30>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff787026f65+78965]\nE       \tGetHandleVerifier [0x0x7ff787026fc0+79056]\nE       \t(No symbol) [0x0x7ff786db9dda]\nE       \t(No symbol) [0x0x7ff786e102ea]\nE       \t(No symbol) [0x0x7ff786e1059c]\nE       \t(No symbol) [0x0x7ff786e63f37]\nE       \t(No symbol) [0x0x7ff786e386af]\nE       \t(No symbol) [0x0x7ff786e60dbe]\nE       \t(No symbol) [0x0x7ff786e38443]\nE       \t(No symbol) [0x0x7ff786e01311]\nE       \t(No symbol) [0x0x7ff786e020a3]\nE       \tGetHandleVerifier [0x0x7ff7872de26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7872d8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7872f6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7870416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7870496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff78702faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff78702fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7870164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe499c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffe4a2fcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_environment.TestEnvironmentPage object at 0x000001F091713010>\nlogin_to_environment = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e10f4f76815c5504b2a02aa4bee1f9e\")>\n\n    @allure.story(\"排程页面-文本输入框全部输入，保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_environment_plan_numinput3(self, login_to_environment):\n        driver = login_to_environment  # WebDriver 实例\n        environment = EnvironmentPage(driver)  # 用 driver 初始化 EnvironmentPage\n        environment.click_plan()\n        value = \"QAseE1@!><?+_+=-33.\"\n        xpath_list = [\n            f'//label[text()=\"备注{i}\"]/following-sibling::div//input'\n            for i in range(1, 5)\n        ]\n        environment.batch_modify_input(xpath_list, value)\n>       before_value = environment.batch_acquisition_input(xpath_list)\n\ntest_environment.py:505: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.environment_page.EnvironmentPage object at 0x000001F09092CEE0>\nxpath_list = ['//label[text()=\"备注1\"]/following-sibling::div//input', '//label[text()=\"备注2\"]/following-sibling::div//input', '//label[text()=\"备注3\"]/following-sibling::div//input', '//label[text()=\"备注4\"]/following-sibling::div//input']\ntext_value = ''\n\n    def batch_acquisition_input(self, xpath_list=[], text_value=\"\"):\n        \"\"\"批量获取输入框\"\"\"\n        values = []\n        for index, xpath in enumerate(xpath_list, 1):\n            try:\n                value = self.get_find_element_xpath(xpath).get_attribute(\"value\")\n                values.append(value)\n    \n            except TimeoutException:\n>               raise NoSuchElementException(\n                    f\"元素未找到（XPath列表第{index}个）: {xpath}\"\n                )\nE               selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //label[text()=\"备注1\"]/following-sibling::div//input; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\n\n..\\..\\Pages\\systemPage\\environment_page.py:135: NoSuchElementException"}, "attachments": [{"name": "test_environment_plan_numinput3_failure", "source": "51ff8dc5-4d3a-4b55-b85e-c3c320163c0e-attachment.png", "type": "image/png"}, {"name": "test_environment_plan_numinput3_source", "source": "1f5953fa-a51f-48c1-8c11-96bf4af811f1-attachment.html", "type": "text/html"}, {"name": "log", "source": "c67188c0-5a91-4b2e-aa2b-4d584db64e22-attachment.txt", "type": "text/plain"}], "start": 1754045679107, "stop": 1754045730462, "uuid": "3a8f5833-9bfd-40c7-bc12-fad2728233dd", "historyId": "3d8f147884a880b79408e1715c222cc0", "testCaseId": "3d8f147884a880b79408e1715c222cc0", "fullName": "Tests.test_system.test_environment.TestEnvironmentPage#test_environment_plan_numinput3", "labels": [{"name": "feature", "value": "环境设置页用例"}, {"name": "story", "value": "排程页面-文本输入框全部输入，保存成功"}, {"name": "tag", "value": "run(order=201)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_environment"}, {"name": "subSuite", "value": "TestEnvironmentPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "70524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_environment"}]}