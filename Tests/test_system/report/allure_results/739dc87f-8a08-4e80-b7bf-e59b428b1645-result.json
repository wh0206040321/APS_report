{"name": "test_affairs_template_addall", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_system.test_affairs.TestAffairsPage object at 0x0000027D1D2BB0A0>\nlogin_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"64adbd42711dde2b45a2b5e33bb58336\")>\n\n    @allure.story(\"事务模版-添加全部成功\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_template_addall(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        name = \"添加全部模版成功\"\n        type = \"接口\"\n        affairs.click_add_affairs(name=name, type=type, button=False)\n        affairs.click_button('(//table[@class=\"vxe-table--body\"])[2]//tr[1]//span')\n        affairs.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n        affairs.enter_texts('//div[label[text()=\"事务描述\"]]//input', name)\n        swich = affairs.get_find_element_xpath('//div[label[text()=\"推送\"]]//div[@role=\"switch\"]').get_attribute(\"class\")\n        if swich == \"el-switch\":\n            affairs.click_button('//div[label[text()=\"推送\"]]//div[@role=\"switch\"]')\n    \n        checked = affairs.get_find_element_xpath('//label[span[text()=\"站内\"]]/span[1]').get_attribute(\"class\")\n        if checked == 'el-checkbox__input':\n            affairs.click_button('//label[span[text()=\"站内\"]]/span[1]')\n    \n        affairs.click_button('//div[label[text()=\"推送参数设置\"]]//i[@class=\"ivu-icon ivu-icon-md-albums paramIcon\"]')\n        affairs.click_button('//div[text()=\" 用户 \"]')\n        affairs.click_button('//div[span[text()=\"用户:\"]]//i')\n        affairs.click_button('//li[span[text()=\"洪奥青\"]]')\n        affairs.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[3]//span[text()=\"确定\"]')\n        before_name = affairs.get_find_element_xpath('//div[label[text()=\"事务名称\"]]//input').get_attribute(\"value\")\n        before_sel = affairs.get_find_element_xpath('//div[label[text()=\"事务类型\"]]//input').get_attribute(\"value\")\n        before_describe = affairs.get_find_element_xpath('//div[label[text()=\"事务描述\"]]//input').get_attribute(\"value\")\n        before_parameter = affairs.get_find_element_xpath('//div[label[text()=\"配置参数\"]]//input').get_attribute(\"value\")\n        before_swich = affairs.get_find_element_xpath('//div[label[text()=\"推送\"]]//div[@role=\"switch\"]').get_attribute(\"class\")\n        before_checked = affairs.get_find_element_xpath('//label[span[text()=\"站内\"]]/span[1]').get_attribute(\"class\")\n        before_sett = affairs.get_find_element_xpath('//div[label[text()=\"推送参数设置\"]]//input').get_attribute(\"value\")\n        affairs.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        ele = driver.find_elements(By.XPATH, f'//div[@class=\"template-card__title\"]/div[text()=\"{name}\"]')\n        value = ele[0].find_element(By.XPATH, './ancestor::div[3]/div[3]/div').text\n        affairs.right_refresh()\n>       affairs.hover(name=name, edi=\"编辑\")\n\ntest_affairs.py:350: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\affairs_page.py:85: in hover\n    delete_icon = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"64adbd42711dde2b45a2b5e33bb58336\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000027D1D375D80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_affairs_template_addall_failure", "source": "77a0b4c5-34f5-4b59-a3ad-7b5f4e38b0a4-attachment.png", "type": "image/png"}, {"name": "test_affairs_template_addall_source", "source": "e645091c-5d45-4a8f-8002-257bec224b01-attachment.html", "type": "text/html"}, {"name": "log", "source": "19c7089c-b13b-4ce0-915c-b18c562e9daf-attachment.txt", "type": "text/plain"}], "start": 1754385467495, "stop": 1754385487523, "uuid": "6187483c-b1e5-443e-94c7-a73b099fa545", "historyId": "ee991b0c343e2c9f28aff267bf6ee92c", "testCaseId": "ee991b0c343e2c9f28aff267bf6ee92c", "fullName": "Tests.test_system.test_affairs.TestAffairsPage#test_affairs_template_addall", "labels": [{"name": "feature", "value": "事务管理页用例"}, {"name": "story", "value": "事务模版-添加全部成功"}, {"name": "tag", "value": "run(order=202)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_affairs"}, {"name": "subSuite", "value": "TestAffairsPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "30012-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_affairs"}]}