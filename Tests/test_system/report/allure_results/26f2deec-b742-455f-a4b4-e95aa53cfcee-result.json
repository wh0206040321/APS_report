{"name": "test_user_roledel2", "status": "broken", "statusDetails": {"message": "Exception: 点击失败：Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6f4666f65+78965]\n\tGetHandleVerifier [0x0x7ff6f4666fc0+79056]\n\t(No symbol) [0x0x7ff6f43f9dda]\n\t(No symbol) [0x0x7ff6f44017c1]\n\t(No symbol) [0x0x7ff6f440482c]\n\t(No symbol) [0x0x7ff6f44048ff]\n\t(No symbol) [0x0x7ff6f44581cb]\n\t(No symbol) [0x0x7ff6f4455c82]\n\t(No symbol) [0x0x7ff6f4452cd1]\n\t(No symbol) [0x0x7ff6f4451c44]\n\t(No symbol) [0x0x7ff6f44432a4]\n\t(No symbol) [0x0x7ff6f447866a]\n\t(No symbol) [0x0x7ff6f4442b56]\n\t(No symbol) [0x0x7ff6f4478880]\n\t(No symbol) [0x0x7ff6f44a0dbe]\n\t(No symbol) [0x0x7ff6f4478443]\n\t(No symbol) [0x0x7ff6f4441311]\n\t(No symbol) [0x0x7ff6f44420a3]\n\tGetHandleVerifier [0x0x7ff6f491e26d+2926461]\n\tGetHandleVerifier [0x0x7ff6f4918993+2903715]\n\tGetHandleVerifier [0x0x7ff6f4936aed+3026941]\n\tGetHandleVerifier [0x0x7ff6f46816fe+187406]\n\tGetHandleVerifier [0x0x7ff6f46896ef+220159]\n\tGetHandleVerifier [0x0x7ff6f466faf4+114692]\n\tGetHandleVerifier [0x0x7ff6f466fca9+115129]\n\tGetHandleVerifier [0x0x7ff6f46564d8+10728]\n\tBaseThreadInitThunk [0x0x7ffae7f27374+20]\n\tRtlUserThreadStart [0x0x7ffae8d3cc91+33]", "trace": "self = <Pages.systemPage.userRole_page.UserRolePage object at 0x000001EAE703E110>\nby_or_element = 'xpath'\nvalue = '(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"1测试角色代码2\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\n        else:\n            logging.info(\"点击元素：WebElement 对象\")\n            element = by_or_element\n    \n        try:\n>           element.click()\n\n..\\..\\Pages\\base_page.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001EAE7308A60>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...ff6f46564d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffae7f27374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffae8d3cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6f4666f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6f4666fc0+79056]\nE       \t(No symbol) [0x0x7ff6f43f9dda]\nE       \t(No symbol) [0x0x7ff6f44017c1]\nE       \t(No symbol) [0x0x7ff6f440482c]\nE       \t(No symbol) [0x0x7ff6f44048ff]\nE       \t(No symbol) [0x0x7ff6f44581cb]\nE       \t(No symbol) [0x0x7ff6f4455c82]\nE       \t(No symbol) [0x0x7ff6f4452cd1]\nE       \t(No symbol) [0x0x7ff6f4451c44]\nE       \t(No symbol) [0x0x7ff6f44432a4]\nE       \t(No symbol) [0x0x7ff6f447866a]\nE       \t(No symbol) [0x0x7ff6f4442b56]\nE       \t(No symbol) [0x0x7ff6f4478880]\nE       \t(No symbol) [0x0x7ff6f44a0dbe]\nE       \t(No symbol) [0x0x7ff6f4478443]\nE       \t(No symbol) [0x0x7ff6f4441311]\nE       \t(No symbol) [0x0x7ff6f44420a3]\nE       \tGetHandleVerifier [0x0x7ff6f491e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6f4918993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6f4936aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6f46816fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6f46896ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6f466faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6f466fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6f46564d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffae7f27374+20]\nE       \tRtlUserThreadStart [0x0x7ffae8d3cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: StaleElementReferenceException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_userRole.TestUserRolePage object at 0x000001EAE703E080>\nlogin_to_userrole = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"65e66a7fd48ac385899f4adc72cee825\")>\n\n    @allure.story(\"删除角色成功\")\n    # @pytest.mark.run(order=1)\n    def test_user_roledel2(self, login_to_userrole):\n        driver = login_to_userrole  # WebDriver 实例\n        user = UserRolePage(driver)  # 用 driver 初始化 UserRolePage\n        user.click_button('(//span[text()=\"角色管理\"])[1]')\n        name = \"1测试角色代码2\"\n        user.enter_texts('//div[div[p[text()=\"角色代码\"]]]//input', name)\n>       user.click_button(f'(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"{name}\"]')\n\ntest_userRole.py:914: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\userRole_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.userRole_page.UserRolePage object at 0x000001EAE703E110>\nby_or_element = 'xpath'\nvalue = '(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"1测试角色代码2\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\n        else:\n            logging.info(\"点击元素：WebElement 对象\")\n            element = by_or_element\n    \n        try:\n            element.click()\n        except ElementClickInterceptedException:\n            logging.warning(\"⚠️ 原生点击被拦截，尝试使用 JS 点击\")\n            self.driver.execute_script(\"arguments[0].click();\", element)\n        except Exception as e:\n            logging.warning(f\"点击失败：{e}\")\n>           raise Exception(f\"点击失败：{e}\")\nE           Exception: 点击失败：Message: stale element reference: stale element not found in the current frame\nE             (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE           Stacktrace:\nE           \tGetHandleVerifier [0x0x7ff6f4666f65+78965]\nE           \tGetHandleVerifier [0x0x7ff6f4666fc0+79056]\nE           \t(No symbol) [0x0x7ff6f43f9dda]\nE           \t(No symbol) [0x0x7ff6f44017c1]\nE           \t(No symbol) [0x0x7ff6f440482c]\nE           \t(No symbol) [0x0x7ff6f44048ff]\nE           \t(No symbol) [0x0x7ff6f44581cb]\nE           \t(No symbol) [0x0x7ff6f4455c82]\nE           \t(No symbol) [0x0x7ff6f4452cd1]\nE           \t(No symbol) [0x0x7ff6f4451c44]\nE           \t(No symbol) [0x0x7ff6f44432a4]\nE           \t(No symbol) [0x0x7ff6f447866a]\nE           \t(No symbol) [0x0x7ff6f4442b56]\nE           \t(No symbol) [0x0x7ff6f4478880]\nE           \t(No symbol) [0x0x7ff6f44a0dbe]\nE           \t(No symbol) [0x0x7ff6f4478443]\nE           \t(No symbol) [0x0x7ff6f4441311]\nE           \t(No symbol) [0x0x7ff6f44420a3]\nE           \tGetHandleVerifier [0x0x7ff6f491e26d+2926461]\nE           \tGetHandleVerifier [0x0x7ff6f4918993+2903715]\nE           \tGetHandleVerifier [0x0x7ff6f4936aed+3026941]\nE           \tGetHandleVerifier [0x0x7ff6f46816fe+187406]\nE           \tGetHandleVerifier [0x0x7ff6f46896ef+220159]\nE           \tGetHandleVerifier [0x0x7ff6f466faf4+114692]\nE           \tGetHandleVerifier [0x0x7ff6f466fca9+115129]\nE           \tGetHandleVerifier [0x0x7ff6f46564d8+10728]\nE           \tBaseThreadInitThunk [0x0x7ffae7f27374+20]\nE           \tRtlUserThreadStart [0x0x7ffae8d3cc91+33]\n\n..\\..\\Pages\\base_page.py:62: Exception"}, "attachments": [{"name": "test_user_roledel2_failure", "source": "0a4c0739-c7a4-4b99-8e7e-176949a3534a-attachment.png", "type": "image/png"}, {"name": "test_user_roledel2_source", "source": "447979f6-41cb-4b4f-9af0-b1e619a062f3-attachment.html", "type": "text/html"}, {"name": "log", "source": "9ee66e53-3a6d-4561-af69-c0040e3bb0dc-attachment.txt", "type": "text/plain"}], "start": 1757503384897, "stop": 1757503386822, "uuid": "20142563-83a2-4eae-8ec9-02718a194d43", "historyId": "3e95d395688141b76ea80471d073565b", "testCaseId": "3e95d395688141b76ea80471d073565b", "fullName": "Tests.test_system.test_userRole.TestUserRolePage#test_user_roledel2", "labels": [{"name": "story", "value": "删除角色成功"}, {"name": "feature", "value": "用户权限管理页用例"}, {"name": "tag", "value": "run(order=206)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_userRole"}, {"name": "subSuite", "value": "TestUserRolePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "5612-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_userRole"}]}