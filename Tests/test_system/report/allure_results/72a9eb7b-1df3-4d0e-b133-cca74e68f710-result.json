{"name": "test_affairs_template_addsuccess1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //input[@placeholder=\"请选择计划方案\" because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//input[@placeholder=\"请选择计划方案\"' is not a valid XPath expression.\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff705bb6f65+78965]\n\tGetHandleVerifier [0x0x7ff705bb6fc0+79056]\n\t(No symbol) [0x0x7ff705949dda]\n\t(No symbol) [0x0x7ff7059517c1]\n\t(No symbol) [0x0x7ff70595482c]\n\t(No symbol) [0x0x7ff7059548ff]\n\t(No symbol) [0x0x7ff70599fb97]\n\t(No symbol) [0x0x7ff7059a059c]\n\t(No symbol) [0x0x7ff7059f3f37]\n\t(No symbol) [0x0x7ff7059c86af]\n\t(No symbol) [0x0x7ff7059f0dbe]\n\t(No symbol) [0x0x7ff7059c8443]\n\t(No symbol) [0x0x7ff705991311]\n\t(No symbol) [0x0x7ff7059920a3]\n\tGetHandleVerifier [0x0x7ff705e6e26d+2926461]\n\tGetHandleVerifier [0x0x7ff705e68993+2903715]\n\tGetHandleVerifier [0x0x7ff705e86aed+3026941]\n\tGetHandleVerifier [0x0x7ff705bd16fe+187406]\n\tGetHandleVerifier [0x0x7ff705bd96ef+220159]\n\tGetHandleVerifier [0x0x7ff705bbfaf4+114692]\n\tGetHandleVerifier [0x0x7ff705bbfca9+115129]\n\tGetHandleVerifier [0x0x7ff705ba64d8+10728]\n\tBaseThreadInitThunk [0x0x7ff992b87374+20]\n\tRtlUserThreadStart [0x0x7ff99357cc91+33]", "trace": "self = <test_system.test_affairs.TestAffairsPage object at 0x0000019041BCBD30>\nlogin_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c5c516d69f836977d2c7dccdf932135d\")>\n\n    @allure.story(\"事务模版-新增模版成功，事务类型为服务，填写计划计算成功\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_template_addsuccess1(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        name = \"测试事务模版1\"\n        affairs.click_add_affairs(name=name, type=\"服务\", button=False)\n        affairs.click_button('//div[text()=\" 计划计算 \"]')\n        affairs.click_button('//input[@placeholder=\"请选择计划单元\"]')\n        affairs.click_button('//li[text()=\"金属（演示）\" and @class=\"ivu-select-item\"]')\n>       affairs.click_button('//input[@placeholder=\"请选择计划方案\"')\n\ntest_affairs.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\affairs_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n..\\..\\Pages\\base_page.py:45: in click\n    element = WebDriverWait(self.driver, wait_time).until(\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:137: in until\n    value = method(self._driver)\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:633: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000019041D17EE0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...ff705ba64d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff992b87374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ff99357cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //input[@placeholder=\"请选择计划方案\" because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//input[@placeholder=\"请选择计划方案\"' is not a valid XPath expression.\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff705bb6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff705bb6fc0+79056]\nE       \t(No symbol) [0x0x7ff705949dda]\nE       \t(No symbol) [0x0x7ff7059517c1]\nE       \t(No symbol) [0x0x7ff70595482c]\nE       \t(No symbol) [0x0x7ff7059548ff]\nE       \t(No symbol) [0x0x7ff70599fb97]\nE       \t(No symbol) [0x0x7ff7059a059c]\nE       \t(No symbol) [0x0x7ff7059f3f37]\nE       \t(No symbol) [0x0x7ff7059c86af]\nE       \t(No symbol) [0x0x7ff7059f0dbe]\nE       \t(No symbol) [0x0x7ff7059c8443]\nE       \t(No symbol) [0x0x7ff705991311]\nE       \t(No symbol) [0x0x7ff7059920a3]\nE       \tGetHandleVerifier [0x0x7ff705e6e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff705e68993+2903715]\nE       \tGetHandleVerifier [0x0x7ff705e86aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff705bd16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff705bd96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff705bbfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff705bbfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff705ba64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff992b87374+20]\nE       \tRtlUserThreadStart [0x0x7ff99357cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: InvalidSelectorException"}, "attachments": [{"name": "test_affairs_template_addsuccess1_failure", "source": "6b786069-0925-465d-8cd0-6fbdefaa14c2-attachment.png", "type": "image/png"}, {"name": "test_affairs_template_addsuccess1_source", "source": "37fb4fe8-e575-49fa-aca6-a44e022067e9-attachment.html", "type": "text/html"}, {"name": "log", "source": "aca68402-2e9e-4a7e-bd21-368256e4101d-attachment.txt", "type": "text/plain"}], "start": 1754304003005, "stop": 1754304006291, "uuid": "2ae6f8e8-54f4-449c-a75f-88efa65ea310", "historyId": "06e793fd589b32078e4d6d2fc119fcbe", "testCaseId": "06e793fd589b32078e4d6d2fc119fcbe", "fullName": "Tests.test_system.test_affairs.TestAffairsPage#test_affairs_template_addsuccess1", "labels": [{"name": "feature", "value": "事务管理页用例"}, {"name": "story", "value": "事务模版-新增模版成功，事务类型为服务，填写计划计算成功"}, {"name": "tag", "value": "run(order=202)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_affairs"}, {"name": "subSuite", "value": "TestAffairsPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "24760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_affairs"}]}