{"name": "test_environment_all_numsel", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff787d66f65+78965]\n\tGetHandleVerifier [0x0x7ff787d66fc0+79056]\n\t(No symbol) [0x0x7ff787af9dda]\n\t(No symbol) [0x0x7ff787b502ea]\n\t(No symbol) [0x0x7ff787b5059c]\n\t(No symbol) [0x0x7ff787ba3f37]\n\t(No symbol) [0x0x7ff787b786af]\n\t(No symbol) [0x0x7ff787ba0dbe]\n\t(No symbol) [0x0x7ff787b78443]\n\t(No symbol) [0x0x7ff787b41311]\n\t(No symbol) [0x0x7ff787b420a3]\n\tGetHandleVerifier [0x0x7ff78801e26d+2926461]\n\tGetHandleVerifier [0x0x7ff788018993+2903715]\n\tGetHandleVerifier [0x0x7ff788036aed+3026941]\n\tGetHandleVerifier [0x0x7ff787d816fe+187406]\n\tGetHandleVerifier [0x0x7ff787d896ef+220159]\n\tGetHandleVerifier [0x0x7ff787d6faf4+114692]\n\tGetHandleVerifier [0x0x7ff787d6fca9+115129]\n\tGetHandleVerifier [0x0x7ff787d564d8+10728]\n\tBaseThreadInitThunk [0x0x7ff9d9c27374+20]\n\tRtlUserThreadStart [0x0x7ff9db07cc91+33]", "trace": "self = <test_system.test_environment.TestEnvironmentPage object at 0x00000225553EBE50>\nlogin_to_environment = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3f1458178f7db5d0f1a0ffb5c496a70e\")>\n\n    @allure.story(\"全体页面-数字框只运行输入数字\")\n    # @pytest.mark.run(order=1)\n    def test_environment_all_numsel(self, login_to_environment):\n        driver = login_to_environment  # WebDriver 实例\n        environment = EnvironmentPage(driver)  # 用 driver 初始化 EnvironmentPage\n>       value = environment.enter_number_input(\"11111111111111111111\")\n\ntest_environment.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\environment_page.py:225: in enter_number_input\n    ele = self.get_find_element_xpath(xpth)\n..\\..\\Pages\\systemPage\\environment_page.py:27: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\n..\\..\\Pages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3f1458178f7db5d0f1a0ffb5c496a70e\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000225553B4DC0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff787d66f65+78965]\nE       \tGetHandleVerifier [0x0x7ff787d66fc0+79056]\nE       \t(No symbol) [0x0x7ff787af9dda]\nE       \t(No symbol) [0x0x7ff787b502ea]\nE       \t(No symbol) [0x0x7ff787b5059c]\nE       \t(No symbol) [0x0x7ff787ba3f37]\nE       \t(No symbol) [0x0x7ff787b786af]\nE       \t(No symbol) [0x0x7ff787ba0dbe]\nE       \t(No symbol) [0x0x7ff787b78443]\nE       \t(No symbol) [0x0x7ff787b41311]\nE       \t(No symbol) [0x0x7ff787b420a3]\nE       \tGetHandleVerifier [0x0x7ff78801e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff788018993+2903715]\nE       \tGetHandleVerifier [0x0x7ff788036aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff787d816fe+187406]\nE       \tGetHandleVerifier [0x0x7ff787d896ef+220159]\nE       \tGetHandleVerifier [0x0x7ff787d6faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff787d6fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff787d564d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff9d9c27374+20]\nE       \tRtlUserThreadStart [0x0x7ff9db07cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_environment_all_numsel_failure", "source": "e9181de7-853b-4ea2-a867-a83a2893fc2d-attachment.png", "type": "image/png"}, {"name": "test_environment_all_numsel_source", "source": "126501e4-658c-4c45-9644-19f1808c4c23-attachment.html", "type": "text/html"}, {"name": "log", "source": "efb83628-dd7a-459f-91b0-71d4d7b9fd84-attachment.txt", "type": "text/plain"}], "start": 1756887659331, "stop": 1756887669511, "uuid": "ce374d9e-dcae-40c7-81e4-c62378ef93b3", "historyId": "dd024dcb740496b2c833b1369ece5f72", "testCaseId": "dd024dcb740496b2c833b1369ece5f72", "fullName": "Tests.test_system.test_environment.TestEnvironmentPage#test_environment_all_numsel", "labels": [{"name": "story", "value": "全体页面-数字框只运行输入数字"}, {"name": "feature", "value": "环境设置页用例"}, {"name": "tag", "value": "run(order=201)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_environment"}, {"name": "subSuite", "value": "TestEnvironmentPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "12396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_environment"}]}