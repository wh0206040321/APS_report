{"name": "test_affairs_process_addsuccess3", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[span[text()=\"每天\"]]", "trace": "self = <Pages.systemPage.affairs_page.AffairsPage object at 0x00000252C44A33A0>\nby_or_element = 'xpath', value = '//li[span[text()=\"每天\"]]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fdd576048f6d9706102cdb8deb5972da\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000252C42E65F0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_affairs.TestAffairsPage object at 0x00000252C42DAFE0>\nlogin_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fdd576048f6d9706102cdb8deb5972da\")>\n\n    @allure.story(\"我的流程-频率为每天，执行顺序为每天执行一次，保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_process_addsuccess3(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        name = \"测试流程3\"\n        affairs.click_process()\n>       affairs.add_process(name=name, type=\"服务\", frequency=\"每天\", time=\"2\")\n\ntest_affairs.py:631: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\affairs_page.py:242: in add_process\n    self.click_button(f'//li[span[text()=\"{frequency}\"]]')\n..\\..\\Pages\\systemPage\\affairs_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.affairs_page.AffairsPage object at 0x00000252C44A33A0>\nby_or_element = 'xpath', value = '//li[span[text()=\"每天\"]]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[span[text()=\"每天\"]]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_affairs_process_addsuccess3_failure", "source": "b2541a6b-c46a-4f0e-9dd2-40fa16cebed1-attachment.png", "type": "image/png"}, {"name": "test_affairs_process_addsuccess3_source", "source": "ab7c08ee-2370-4993-ac2b-f80a6879db25-attachment.html", "type": "text/html"}, {"name": "log", "source": "db444ac5-2e57-439a-b630-3c1cfae84f07-attachment.txt", "type": "text/plain"}], "start": 1754476009021, "stop": 1754476057837, "uuid": "8412e27d-4572-469c-9e3b-31e67105e508", "historyId": "687235ada5ec0493226c898f62a794ab", "testCaseId": "687235ada5ec0493226c898f62a794ab", "fullName": "Tests.test_system.test_affairs.TestAffairsPage#test_affairs_process_addsuccess3", "labels": [{"name": "story", "value": "我的流程-频率为每天，执行顺序为每天执行一次，保存成功"}, {"name": "feature", "value": "事务管理页用例"}, {"name": "tag", "value": "run(order=202)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_affairs"}, {"name": "subSuite", "value": "TestAffairsPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "27028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_affairs"}]}