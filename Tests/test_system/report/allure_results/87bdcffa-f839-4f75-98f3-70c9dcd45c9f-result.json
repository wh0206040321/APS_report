{"name": "test_module_addfail2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"flex-wrap\"])[2]/div[1]", "trace": "self = <Pages.systemPage.expression_page.ExpressionPage object at 0x00000150CB93CC10>\nby_or_element = 'xpath', value = '(//div[@class=\"flex-wrap\"])[2]/div[1]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cf611a475e542b3ba2e465b88eb696ff\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000150CB99CC10>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff641306f65+78965]\nE       \tGetHandleVerifier [0x0x7ff641306fc0+79056]\nE       \t(No symbol) [0x0x7ff641099dda]\nE       \t(No symbol) [0x0x7ff6410f02ea]\nE       \t(No symbol) [0x0x7ff6410f059c]\nE       \t(No symbol) [0x0x7ff641143f37]\nE       \t(No symbol) [0x0x7ff6411186af]\nE       \t(No symbol) [0x0x7ff641140dbe]\nE       \t(No symbol) [0x0x7ff641118443]\nE       \t(No symbol) [0x0x7ff6410e1311]\nE       \t(No symbol) [0x0x7ff6410e20a3]\nE       \tGetHandleVerifier [0x0x7ff6415be26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6415b8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6415d6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6413216fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6413296ef+220159]\nE       \tGetHandleVerifier [0x0x7ff64130faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff64130fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6412f64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe68f47374+20]\nE       \tRtlUserThreadStart [0x0x7ffe691dcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_module.TestSModulePage object at 0x00000150CB93CC40>\nlogin_to_module = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf611a475e542b3ba2e465b88eb696ff\")>\n\n    @allure.story(\"新增模块代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_module_addfail2(self, login_to_module):\n        driver = login_to_module  # WebDriver 实例\n        module = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n        add = AddsPages(driver)\n        name = 'ABCDAA'\n        sleep(1)\n        module.click_all_button(\"新增\")\n        xpath_list = [\n            '//div[label[text()=\"模块代码\"]]//input',\n            '//div[label[text()=\"模块名称\"]]//input',\n            '//div[label[text()=\"图标\"]]//i[contains(@class,\"ivu-ico\")]',\n            '(//div[@class=\"flex-wrap\"])[2]/div[1]',\n        ]\n        add.batch_modify_input(xpath_list[:2], name)\n>       module.click_button(xpath_list[3])\n\ntest_module.py:115: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\expression_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.expression_page.ExpressionPage object at 0x00000150CB93CC10>\nby_or_element = 'xpath', value = '(//div[@class=\"flex-wrap\"])[2]/div[1]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"flex-wrap\"])[2]/div[1]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_module_addfail2_failure", "source": "16765451-b6ba-415f-b8cc-fcec819ab832-attachment.png", "type": "image/png"}, {"name": "test_module_addfail2_source", "source": "39be616b-3806-4c51-9bce-9f019d4df2c9-attachment.html", "type": "text/html"}, {"name": "log", "source": "ff50610d-1a2d-498c-84af-6535be593dc0-attachment.txt", "type": "text/plain"}], "start": 1760673466981, "stop": 1760673480021, "uuid": "2a1c6d78-ef18-4133-857c-7c5ee415a61f", "historyId": "8dd47f1b63a94573d7d2b5e5de33e416", "testCaseId": "8dd47f1b63a94573d7d2b5e5de33e416", "fullName": "Tests.test_system.test_module.TestSModulePage#test_module_addfail2", "labels": [{"name": "story", "value": "新增模块代码成功"}, {"name": "feature", "value": "模块管理页用例"}, {"name": "tag", "value": "run(order=214)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_module"}, {"name": "subSuite", "value": "TestSModulePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "29180-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_module"}]}