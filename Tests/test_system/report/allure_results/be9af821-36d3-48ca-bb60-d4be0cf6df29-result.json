{"name": "test_audit_select2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[p[text()=\"角色代码\"]]/following-sibling::div//i", "trace": "self = <Pages.systemPage.auditLog_page.AuditLogPage object at 0x000002F1F65FF8E0>\nby_or_element = 'xpath'\nvalue = '//div[p[text()=\"角色代码\"]]/following-sibling::div//i', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a3965a95ddd637a574923e71a0591e4b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002F1F6599870>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff73ad06f65+78965]\nE       \tGetHandleVerifier [0x0x7ff73ad06fc0+79056]\nE       \t(No symbol) [0x0x7ff73aa99dda]\nE       \t(No symbol) [0x0x7ff73aaf02ea]\nE       \t(No symbol) [0x0x7ff73aaf059c]\nE       \t(No symbol) [0x0x7ff73ab43f37]\nE       \t(No symbol) [0x0x7ff73ab186af]\nE       \t(No symbol) [0x0x7ff73ab40dbe]\nE       \t(No symbol) [0x0x7ff73ab18443]\nE       \t(No symbol) [0x0x7ff73aae1311]\nE       \t(No symbol) [0x0x7ff73aae20a3]\nE       \tGetHandleVerifier [0x0x7ff73afbe26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff73afb8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff73afd6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff73ad216fe+187406]\nE       \tGetHandleVerifier [0x0x7ff73ad296ef+220159]\nE       \tGetHandleVerifier [0x0x7ff73ad0faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff73ad0fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff73acf64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fffd9ac7374+20]\nE       \tRtlUserThreadStart [0x0x7fffdad1cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_auditLog.TestAuditLogPage object at 0x000002F1F65FFB50>\nlogin_to_auditlog = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a3965a95ddd637a574923e71a0591e4b\")>\n\n    @allure.story(\"过滤条件查询，一个不选，显示正常\")\n    # @pytest.mark.run(order=1)\n    def test_audit_select2(self, login_to_auditlog):\n        driver = login_to_auditlog  # WebDriver 实例\n        audit = AuditLogPage(driver)  # 用 driver 初始化 AuditLogPage\n        today = datetime.now().date()\n        # 格式化为年/月/日\n        formatted_date = today.strftime(\"%Y/%m/%d\")\n        first_day = datetime(today.year, today.month, 1).date()\n        formatted_first_day = first_day.strftime(\"%Y/%m/%d\")\n        ele = audit.get_find_element_xpath('//div[span[text()=\"操作时间:\"]]//input')\n        ele.send_keys(Keys.CONTROL, \"a\")\n        ele.send_keys(Keys.DELETE)\n        audit.enter_texts('//div[span[text()=\"操作时间:\"]]//input', f\"{formatted_first_day} - {formatted_date}\")\n        audit.click_all_button(\"查询\")\n    \n>       audit.click_button('//div[p[text()=\"角色代码\"]]/following-sibling::div//i')\n\ntest_auditLog.py:188: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\auditLog_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.auditLog_page.AuditLogPage object at 0x000002F1F65FF8E0>\nby_or_element = 'xpath'\nvalue = '//div[p[text()=\"角色代码\"]]/following-sibling::div//i', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[p[text()=\"角色代码\"]]/following-sibling::div//i\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_audit_select2_failure", "source": "5c126904-1865-4eef-baf7-2bd98d5aed9a-attachment.png", "type": "image/png"}, {"name": "test_audit_select2_source", "source": "13c44d32-1e01-455d-8743-3422013509c8-attachment.html", "type": "text/html"}, {"name": "log", "source": "d4000b21-ba0f-4340-aece-2ff7d43892f4-attachment.txt", "type": "text/plain"}], "start": 1758017571172, "stop": 1758017582481, "uuid": "8e2cce0b-d723-4a4a-86f3-57507e4e7a78", "historyId": "4c1fa37939e064125dcf72b968cde243", "testCaseId": "4c1fa37939e064125dcf72b968cde243", "fullName": "Tests.test_system.test_auditLog.TestAuditLogPage#test_audit_select2", "labels": [{"name": "story", "value": "过滤条件查询，一个不选，显示正常"}, {"name": "feature", "value": "审核日志页用例"}, {"name": "tag", "value": "run(order=209)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_auditLog"}, {"name": "subSuite", "value": "TestAuditLogPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "9108-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_auditLog"}]}