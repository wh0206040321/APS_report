{"name": "test_affairs_process_delete", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6e4aa6f65+78965]\n\tGetHandleVerifier [0x0x7ff6e4aa6fc0+79056]\n\t(No symbol) [0x0x7ff6e4839dda]\n\t(No symbol) [0x0x7ff6e48417c1]\n\t(No symbol) [0x0x7ff6e484482c]\n\t(No symbol) [0x0x7ff6e48448ff]\n\t(No symbol) [0x0x7ff6e48924ed]\n\t(No symbol) [0x0x7ff6e4883210]\n\t(No symbol) [0x0x7ff6e48b866a]\n\t(No symbol) [0x0x7ff6e4882b56]\n\t(No symbol) [0x0x7ff6e48b8880]\n\t(No symbol) [0x0x7ff6e48e0dbe]\n\t(No symbol) [0x0x7ff6e48b8443]\n\t(No symbol) [0x0x7ff6e4881311]\n\t(No symbol) [0x0x7ff6e48820a3]\n\tGetHandleVerifier [0x0x7ff6e4d5e26d+2926461]\n\tGetHandleVerifier [0x0x7ff6e4d58993+2903715]\n\tGetHandleVerifier [0x0x7ff6e4d76aed+3026941]\n\tGetHandleVerifier [0x0x7ff6e4ac16fe+187406]\n\tGetHandleVerifier [0x0x7ff6e4ac96ef+220159]\n\tGetHandleVerifier [0x0x7ff6e4aafaf4+114692]\n\tGetHandleVerifier [0x0x7ff6e4aafca9+115129]\n\tGetHandleVerifier [0x0x7ff6e4a964d8+10728]\n\tBaseThreadInitThunk [0x0x7ffee1537374+20]\n\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]", "trace": "self = <test_system.test_affairs.TestAffairsPage object at 0x00000264E84484F0>\nlogin_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8da614caeac43853a76453e5170d4c05\")>\n\n    @allure.story(\"我的流程-删除流程数据\")\n    def test_affairs_process_delete(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        name1 = \"添加全部成功\"\n        name2 = \"测试流程\"\n        affairs.click_process()\n        affairs.del_process(name1)\n>       affairs.del_process(name2)\n\ntest_affairs.py:1282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\affairs_page.py:139: in del_process\n    ele.click()\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000264E8573400>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...ff6e4a964d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffee1537374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6e4aa6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6e4aa6fc0+79056]\nE       \t(No symbol) [0x0x7ff6e4839dda]\nE       \t(No symbol) [0x0x7ff6e48417c1]\nE       \t(No symbol) [0x0x7ff6e484482c]\nE       \t(No symbol) [0x0x7ff6e48448ff]\nE       \t(No symbol) [0x0x7ff6e48924ed]\nE       \t(No symbol) [0x0x7ff6e4883210]\nE       \t(No symbol) [0x0x7ff6e48b866a]\nE       \t(No symbol) [0x0x7ff6e4882b56]\nE       \t(No symbol) [0x0x7ff6e48b8880]\nE       \t(No symbol) [0x0x7ff6e48e0dbe]\nE       \t(No symbol) [0x0x7ff6e48b8443]\nE       \t(No symbol) [0x0x7ff6e4881311]\nE       \t(No symbol) [0x0x7ff6e48820a3]\nE       \tGetHandleVerifier [0x0x7ff6e4d5e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6e4d58993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6e4d76aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6e4ac16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6e4ac96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6e4aafaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6e4aafca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6e4a964d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: StaleElementReferenceException"}, "attachments": [{"name": "test_affairs_process_delete_failure", "source": "a986ed50-f292-4f55-8a1c-bc366ecc23f5-attachment.png", "type": "image/png"}, {"name": "test_affairs_process_delete_source", "source": "62ff66eb-7c2b-40d0-ac8e-9c5983cb224d-attachment.html", "type": "text/html"}, {"name": "log", "source": "5dc80c31-882e-4c73-b7f4-9fc50d5fad55-attachment.txt", "type": "text/plain"}], "start": 1761124722001, "stop": 1761124727196, "uuid": "0ad7224d-8dad-404e-a664-131482f6641f", "historyId": "ef5ccd415ac751cd483d28d6e5e59baf", "testCaseId": "ef5ccd415ac751cd483d28d6e5e59baf", "fullName": "Tests.test_system.test_affairs.TestAffairsPage#test_affairs_process_delete", "labels": [{"name": "story", "value": "我的流程-删除流程数据"}, {"name": "feature", "value": "事务管理页用例"}, {"name": "tag", "value": "run(order=202)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_affairs"}, {"name": "subSuite", "value": "TestAffairsPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "7788-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_affairs"}]}