{"name": "test_role_clear", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7bbc26f65+78965]\n\tGetHandleVerifier [0x0x7ff7bbc26fc0+79056]\n\t(No symbol) [0x0x7ff7bb9b9dda]\n\t(No symbol) [0x0x7ff7bba102ea]\n\t(No symbol) [0x0x7ff7bba1059c]\n\t(No symbol) [0x0x7ff7bba63f37]\n\t(No symbol) [0x0x7ff7bba386af]\n\t(No symbol) [0x0x7ff7bba60dbe]\n\t(No symbol) [0x0x7ff7bba38443]\n\t(No symbol) [0x0x7ff7bba01311]\n\t(No symbol) [0x0x7ff7bba020a3]\n\tGetHandleVerifier [0x0x7ff7bbede26d+2926461]\n\tGetHandleVerifier [0x0x7ff7bbed8993+2903715]\n\tGetHandleVerifier [0x0x7ff7bbef6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7bbc416fe+187406]\n\tGetHandleVerifier [0x0x7ff7bbc496ef+220159]\n\tGetHandleVerifier [0x0x7ff7bbc2faf4+114692]\n\tGetHandleVerifier [0x0x7ff7bbc2fca9+115129]\n\tGetHandleVerifier [0x0x7ff7bbc164d8+10728]\n\tBaseThreadInitThunk [0x0x7ffae7f27374+20]\n\tRtlUserThreadStart [0x0x7ffae8d3cc91+33]", "trace": "self = <test_system.test_role.TestRolePage object at 0x000002105F87D450>\nlogin_to_role = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c91268a5c5a1ca0f735a6eb4edf98ac7\")>\n\n    @allure.story(\"清除筛选效果成功\")\n    # @pytest.mark.run(order=1)\n    def test_role_clear(self, login_to_role):\n        driver = login_to_role  # WebDriver 实例\n        role = RolePage(driver)  # 用 driver 初始化 RolePage\n        name = \"3\"\n        sleep(1)\n        role.click_button('//div[p[text()=\"角色代码\"]]/following-sibling::div//i')\n        role.hover(\"包含\")\n        sleep(1)\n        role.select_input(name)\n        sleep(1)\n>       role.hover(\"清除所有筛选条件\")\n\ntest_role.py:449: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\role_page.py:133: in hover\n    container = self.get_find_element_xpath(\n..\\..\\Pages\\systemPage\\role_page.py:29: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\n..\\..\\Pages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c91268a5c5a1ca0f735a6eb4edf98ac7\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002105F7F4DC0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7bbc26f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7bbc26fc0+79056]\nE       \t(No symbol) [0x0x7ff7bb9b9dda]\nE       \t(No symbol) [0x0x7ff7bba102ea]\nE       \t(No symbol) [0x0x7ff7bba1059c]\nE       \t(No symbol) [0x0x7ff7bba63f37]\nE       \t(No symbol) [0x0x7ff7bba386af]\nE       \t(No symbol) [0x0x7ff7bba60dbe]\nE       \t(No symbol) [0x0x7ff7bba38443]\nE       \t(No symbol) [0x0x7ff7bba01311]\nE       \t(No symbol) [0x0x7ff7bba020a3]\nE       \tGetHandleVerifier [0x0x7ff7bbede26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7bbed8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7bbef6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7bbc416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7bbc496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7bbc2faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7bbc2fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7bbc164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffae7f27374+20]\nE       \tRtlUserThreadStart [0x0x7ffae8d3cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_role_clear_failure", "source": "1151c4cd-5dbd-403a-9e4a-be962cc0218e-attachment.png", "type": "image/png"}, {"name": "test_role_clear_source", "source": "85e946f8-1fb9-4849-b3f3-48ccd2471ec1-attachment.html", "type": "text/html"}, {"name": "log", "source": "d6532d9e-dc57-46a4-9274-f6b822adc2cb-attachment.txt", "type": "text/plain"}], "start": 1757303169360, "stop": 1757303183789, "uuid": "6cf3067c-7505-4195-b3d8-69f93fe4396f", "historyId": "767fa20f85e55952dc10979e56b1fb87", "testCaseId": "767fa20f85e55952dc10979e56b1fb87", "fullName": "Tests.test_system.test_role.TestRolePage#test_role_clear", "labels": [{"name": "story", "value": "清除筛选效果成功"}, {"name": "feature", "value": "角色管理页用例"}, {"name": "tag", "value": "run(order=205)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_role"}, {"name": "subSuite", "value": "TestRolePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "18184-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_role"}]}