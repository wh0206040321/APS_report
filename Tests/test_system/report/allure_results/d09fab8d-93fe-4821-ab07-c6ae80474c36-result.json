{"name": "test_home_add_success", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7e64d6f65+78965]\n\tGetHandleVerifier [0x0x7ff7e64d6fc0+79056]\n\t(No symbol) [0x0x7ff7e6269dda]\n\t(No symbol) [0x0x7ff7e62c02ea]\n\t(No symbol) [0x0x7ff7e62c059c]\n\t(No symbol) [0x0x7ff7e6313f37]\n\t(No symbol) [0x0x7ff7e62e86af]\n\t(No symbol) [0x0x7ff7e6310dbe]\n\t(No symbol) [0x0x7ff7e62e8443]\n\t(No symbol) [0x0x7ff7e62b1311]\n\t(No symbol) [0x0x7ff7e62b20a3]\n\tGetHandleVerifier [0x0x7ff7e678e26d+2926461]\n\tGetHandleVerifier [0x0x7ff7e6788993+2903715]\n\tGetHandleVerifier [0x0x7ff7e67a6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7e64f16fe+187406]\n\tGetHandleVerifier [0x0x7ff7e64f96ef+220159]\n\tGetHandleVerifier [0x0x7ff7e64dfaf4+114692]\n\tGetHandleVerifier [0x0x7ff7e64dfca9+115129]\n\tGetHandleVerifier [0x0x7ff7e64c64d8+10728]\n\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\n\tRtlUserThreadStart [0x0x7fff513dcc91+33]", "trace": "self = <test_system.test_home.TestHomePage object at 0x000001FB278E67D0>\nlogin_to_home = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7c1ace86bc44ace98714158aed41f005\")>\n\n    @allure.story(\"新增一个组件成功\")\n    # @pytest.mark.run(order=1)\n    def test_home_add_success(self, login_to_home):\n        driver = login_to_home  # WebDriver 实例\n        home = HomePage(driver)  # 用 driver 初始化 HomePage\n        home.clear_all_button(\"确定\")\n        num = home.drag_component(name=\"饼图\")\n        home.click_save_button()\n>       message = home.get_find_message()\n\ntest_home.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\homepage_page.py:33: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7c1ace86bc44ace98714158aed41f005\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001FB2789E9E0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7e64d6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7e64d6fc0+79056]\nE       \t(No symbol) [0x0x7ff7e6269dda]\nE       \t(No symbol) [0x0x7ff7e62c02ea]\nE       \t(No symbol) [0x0x7ff7e62c059c]\nE       \t(No symbol) [0x0x7ff7e6313f37]\nE       \t(No symbol) [0x0x7ff7e62e86af]\nE       \t(No symbol) [0x0x7ff7e6310dbe]\nE       \t(No symbol) [0x0x7ff7e62e8443]\nE       \t(No symbol) [0x0x7ff7e62b1311]\nE       \t(No symbol) [0x0x7ff7e62b20a3]\nE       \tGetHandleVerifier [0x0x7ff7e678e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7e6788993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7e67a6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7e64f16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7e64f96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7e64dfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7e64dfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7e64c64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_home_add_success_failure", "source": "d36cc20f-30d4-4d45-b72e-93d85f16e4f5-attachment.png", "type": "image/png"}, {"name": "test_home_add_success_source", "source": "2daebcd3-81f8-4d0a-b1d8-aa1d23d27654-attachment.html", "type": "text/html"}, {"name": "log", "source": "30a33f35-6623-41c1-9653-e1b203e97200-attachment.txt", "type": "text/plain"}], "start": 1761039443150, "stop": 1761039458581, "uuid": "ff0b5a7f-4d65-49ff-b168-557f5f3f5809", "historyId": "fb3f01b6706408b77517e3bb8f167d09", "testCaseId": "fb3f01b6706408b77517e3bb8f167d09", "fullName": "Tests.test_system.test_home.TestHomePage#test_home_add_success", "labels": [{"name": "story", "value": "新增一个组件成功"}, {"name": "feature", "value": "主页设置页用例"}, {"name": "tag", "value": "run(order=200)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_home"}, {"name": "subSuite", "value": "TestHomePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "16548-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_home"}]}