{"name": "test_role_success2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //ul/li[text()=\"1测试计划单元小日程\"]", "trace": "self = <Pages.systemPage.role_page.RolePage object at 0x000001D94B569750>\nby_or_element = 'xpath', value = '//ul/li[text()=\"1测试计划单元小日程\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"76d5170ecb75799cb3fedd9a3e41f0d6\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001D94B561240>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff70d8e6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff70d8e6fc0+79056]\nE       \t(No symbol) [0x0x7ff70d679dda]\nE       \t(No symbol) [0x0x7ff70d6d02ea]\nE       \t(No symbol) [0x0x7ff70d6d059c]\nE       \t(No symbol) [0x0x7ff70d723f37]\nE       \t(No symbol) [0x0x7ff70d6f86af]\nE       \t(No symbol) [0x0x7ff70d720dbe]\nE       \t(No symbol) [0x0x7ff70d6f8443]\nE       \t(No symbol) [0x0x7ff70d6c1311]\nE       \t(No symbol) [0x0x7ff70d6c20a3]\nE       \tGetHandleVerifier [0x0x7ff70db9e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff70db98993+2903715]\nE       \tGetHandleVerifier [0x0x7ff70dbb6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff70d9016fe+187406]\nE       \tGetHandleVerifier [0x0x7ff70d9096ef+220159]\nE       \tGetHandleVerifier [0x0x7ff70d8efaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff70d8efca9+115129]\nE       \tGetHandleVerifier [0x0x7ff70d8d64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff9d9c27374+20]\nE       \tRtlUserThreadStart [0x0x7ff9db07cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_role.TestRolePage object at 0x000001D94B56A380>\nlogin_to_role = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"76d5170ecb75799cb3fedd9a3e41f0d6\")>\n\n    @allure.story(\"添加角色成功，关键字筛选搜索成功，只勾选一个菜单,并且增加该用户权限，可切换新建单元\")\n    # @pytest.mark.run(order=1)\n    def test_role_success2(self, login_to_role):\n        driver = login_to_role  # WebDriver 实例\n        role = RolePage(driver)  # 用 driver 初始化 PlanUnitPage\n        date_driver = DateDriver()\n        name = \"1测试角色代码2\"\n        module = \"1测试计划单元小日程\"\n        role.add_role(name, module)\n    \n        role.enter_texts('//input[@placeholder=\"请输入关键字筛选\"]', '计划基础数据')\n        role.click_button('//div[@class=\"ivu-tree\"]/ul[1]//label/span')\n        te = role.get_find_element_xpath('//div[@class=\"ivu-tree\"]/ul[1]//span[@class=\"font14\"]').text\n        role.click_all_button(\"保存\")\n        role.right_refresh()\n        role.select_input(name)\n        ele = role.finds_elements(By.XPATH, f'//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"{name}\"]')\n    \n        role.click_button('(//span[text()=\"用户权限管理\"])[1]')\n        role.enter_texts('//div[div[p[text()=\"用户代码\"]]]//input', date_driver.username)\n        sleep(1)\n        role.click_button(f'(//table[@class=\"vxe-table--body\"]//span[text()=\"{date_driver.username}\"])[1]')\n        role.click_all_button(\"编辑\")\n    \n        role.select_input(name)\n        role.click_button('(//table[@class=\"vxe-table--body\"]//tr[1]/td[2]/div/span)[2]')\n        role.click_all_button(\"保存\")\n        message = role.get_find_message()\n    \n        driver.refresh()\n        role.click_button(f'//div[contains(text(),\"{date_driver.planning}\")]')\n    \n>       role.click_button(f'//ul/li[text()=\"{module}\"]')\n\ntest_role.py:215: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\role_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.role_page.RolePage object at 0x000001D94B569750>\nby_or_element = 'xpath', value = '//ul/li[text()=\"1测试计划单元小日程\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //ul/li[text()=\"1测试计划单元小日程\"]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_role_success2_failure", "source": "35ff0bee-f8ac-4c31-ab50-7792bc7f40c1-attachment.png", "type": "image/png"}, {"name": "test_role_success2_source", "source": "e600cea6-4a2f-4979-a5a5-621d46920573-attachment.html", "type": "text/html"}, {"name": "log", "source": "d3b66f1d-fe07-4e31-930a-bccb92ef9894-attachment.txt", "type": "text/plain"}], "start": 1756895091623, "stop": 1756895114337, "uuid": "52a1fa23-51aa-4a47-a6c0-f1724b0ffb43", "historyId": "7bbbef56cc58797054d5a681a1d87cb3", "testCaseId": "7bbbef56cc58797054d5a681a1d87cb3", "fullName": "Tests.test_system.test_role.TestRolePage#test_role_success2", "labels": [{"name": "story", "value": "添加角色成功，关键字筛选搜索成功，只勾选一个菜单,并且增加该用户权限，可切换新建单元"}, {"name": "feature", "value": "角色管理页用例"}, {"name": "tag", "value": "run(order=205)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_role"}, {"name": "subSuite", "value": "TestRolePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "1300-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_role"}]}