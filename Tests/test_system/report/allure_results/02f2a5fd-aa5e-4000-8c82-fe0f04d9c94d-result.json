{"name": "test_menu_selectsuccess2", "status": "failed", "statusDetails": {"message": "AssertionError: assert (2 > 3)\n +  where 2 = len(['5', '4'])", "trace": "self = <test_system.test_menu.TestSMenuPage object at 0x000001B338333A60>\nlogin_to_menu = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"036e45831dfbad44e2be796cd074262e\")>\n\n    @allure.story(\"查询组件名称包含计划并且排序>3\")\n    # @pytest.mark.run(order=1)\n    def test_menu_selectsuccess2(self, login_to_menu):\n        driver = login_to_menu  # WebDriver 实例\n        menu = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n    \n        name = \"计划\"\n        num = 3\n        # 点击查询\n        menu.click_all_button(\"查询\")\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料名称\n        menu.click_button('//div[text()=\"组件名称\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        menu.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        menu.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        menu.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        menu.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        menu.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n    \n        # 点击（\n        menu.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        menu.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        actions.double_click(double_click).perform()\n        # 定义and元素的XPath\n        and_xpath = '//div[text()=\"and\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击and元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, and_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            and_found = False\n    \n            while attempt < max_attempts and not and_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找and元素\n                    and_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, and_xpath))\n                    )\n                    and_element.click()\n                    and_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not and_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'and'元素\")\n    \n        # 点击（\n        menu.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        menu.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击物料优先度\n        menu.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        menu.click_button('//div[text()=\"排序\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        menu.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        menu.click_button('//div[text()=\">\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        menu.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            num,\n        )\n        # 点击（\n        menu.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        menu.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        menu.click_button(\n            '(//div[@class=\"demo-drawer-footer\"])[2]/button[2]'\n        )\n        sleep(2)\n        eles1 = menu.loop_judgment('(//table[@class=\"vxe-table--body\"])[2]//tr/td[5]')\n        eles2 = menu.loop_judgment('(//table[@class=\"vxe-table--body\"])[2]//tr/td[3]')\n>       assert len(eles1) > 3 and len(eles2) > 3\nE       AssertionError: assert (2 > 3)\nE        +  where 2 = len(['5', '4'])\n\ntest_menu.py:534: AssertionError"}, "attachments": [{"name": "test_menu_selectsuccess2_failure", "source": "cf11a88e-4b7e-43bb-b823-0aed4cf9f2ec-attachment.png", "type": "image/png"}, {"name": "test_menu_selectsuccess2_source", "source": "e1b8621d-e56c-4088-9416-b1c2ae6c4bc7-attachment.html", "type": "text/html"}, {"name": "log", "source": "d23c4f0d-d4a1-40a4-80d4-1b3b2ca12150-attachment.txt", "type": "text/plain"}], "start": 1760508672471, "stop": 1760508694001, "uuid": "a042a7f1-f8cf-42b7-9384-dcabf3a095ff", "historyId": "e421cdbb7e6619f4668476e128f576b7", "testCaseId": "e421cdbb7e6619f4668476e128f576b7", "fullName": "Tests.test_system.test_menu.TestSMenuPage#test_menu_selectsuccess2", "labels": [{"name": "story", "value": "查询组件名称包含计划并且排序>3"}, {"name": "feature", "value": "菜单组件页用例"}, {"name": "tag", "value": "run(order=213)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_menu"}, {"name": "subSuite", "value": "TestSMenuPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "31772-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_menu"}]}