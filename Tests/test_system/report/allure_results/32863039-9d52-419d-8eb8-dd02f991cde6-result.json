{"name": "test_menu_addrepeat2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[@class=\"flex-alignItems-center background-ffffff h-36px w-b-100 m-l-12 toolbar-container\"]//p[text()=\"保存\"]", "trace": "self = <Pages.systemPage.expression_page.ExpressionPage object at 0x00000187650A84F0>\nby_or_element = 'xpath'\nvalue = '//div[@class=\"flex-alignItems-center background-ffffff h-36px w-b-100 m-l-12 toolbar-container\"]//p[text()=\"保存\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3063c336d183ad00387186e8621e37cf\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001876500B130>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6abd36f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6abd36fc0+79056]\nE       \t(No symbol) [0x0x7ff6abac9dda]\nE       \t(No symbol) [0x0x7ff6abb202ea]\nE       \t(No symbol) [0x0x7ff6abb2059c]\nE       \t(No symbol) [0x0x7ff6abb73f37]\nE       \t(No symbol) [0x0x7ff6abb486af]\nE       \t(No symbol) [0x0x7ff6abb70dbe]\nE       \t(No symbol) [0x0x7ff6abb48443]\nE       \t(No symbol) [0x0x7ff6abb11311]\nE       \t(No symbol) [0x0x7ff6abb120a3]\nE       \tGetHandleVerifier [0x0x7ff6abfee26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6abfe8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6ac006aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6abd516fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6abd596ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6abd3faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6abd3fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6abd264d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe68f47374+20]\nE       \tRtlUserThreadStart [0x0x7ffe691dcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_menu.TestSMenuPage object at 0x00000187650ABBE0>\nlogin_to_menu = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3063c336d183ad00387186e8621e37cf\")>\n\n    @allure.story(\"修改组件代码重复不允许添加\")\n    # @pytest.mark.run(order=1)\n    def test_menu_addrepeat2(self, login_to_menu):\n        driver = login_to_menu  # WebDriver 实例\n        menu = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n        sleep(2)\n        before_name = 'ACDAA'\n        after_name = 'SchedulingManagement'\n        menu.select_input_menu(before_name)\n        menu.click_button('//table[@class=\"vxe-table--body\"]//tr[1]/td[2]')\n        menu.click_all_button(\"编辑\")\n        menu.enter_texts('//div[@id=\"0lollcex-w9k3\"]//input', after_name)\n>       menu.click_all_button(\"保存\")\n\ntest_menu.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\expression_page.py:81: in click_all_button\n    self.click_button(f'//div[@class=\"flex-alignItems-center background-ffffff h-36px w-b-100 m-l-12 toolbar-container\"]//p[text()=\"{name}\"]')\n..\\..\\Pages\\systemPage\\expression_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.expression_page.ExpressionPage object at 0x00000187650A84F0>\nby_or_element = 'xpath'\nvalue = '//div[@class=\"flex-alignItems-center background-ffffff h-36px w-b-100 m-l-12 toolbar-container\"]//p[text()=\"保存\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[@class=\"flex-alignItems-center background-ffffff h-36px w-b-100 m-l-12 toolbar-container\"]//p[text()=\"保存\"]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_menu_addrepeat2_failure", "source": "bde580a3-f40c-4d95-b874-5dee7b11443f-attachment.png", "type": "image/png"}, {"name": "test_menu_addrepeat2_source", "source": "3db5820a-facc-42d5-9d23-7113dd0d3ed8-attachment.html", "type": "text/html"}, {"name": "log", "source": "a4b86d11-29e5-47da-b841-feedff65f48b-attachment.txt", "type": "text/plain"}], "start": 1760440639394, "stop": 1760440653775, "uuid": "4b4ca103-0654-4259-904d-9e99ec5d9681", "historyId": "f96bcd16664f41a9da5d1b6f3f383592", "testCaseId": "f96bcd16664f41a9da5d1b6f3f383592", "fullName": "Tests.test_system.test_menu.TestSMenuPage#test_menu_addrepeat2", "labels": [{"name": "story", "value": "修改组件代码重复不允许添加"}, {"name": "feature", "value": "菜单组件页用例"}, {"name": "tag", "value": "run(order=213)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_menu"}, {"name": "subSuite", "value": "TestSMenuPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "29316-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_menu"}]}