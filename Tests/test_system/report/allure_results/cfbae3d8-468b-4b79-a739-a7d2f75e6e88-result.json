{"name": "test_apps_textverify", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6e4aa6f65+78965]\n\tGetHandleVerifier [0x0x7ff6e4aa6fc0+79056]\n\t(No symbol) [0x0x7ff6e4839dda]\n\t(No symbol) [0x0x7ff6e48902ea]\n\t(No symbol) [0x0x7ff6e489059c]\n\t(No symbol) [0x0x7ff6e48e3f37]\n\t(No symbol) [0x0x7ff6e48b86af]\n\t(No symbol) [0x0x7ff6e48e0dbe]\n\t(No symbol) [0x0x7ff6e48b8443]\n\t(No symbol) [0x0x7ff6e4881311]\n\t(No symbol) [0x0x7ff6e48820a3]\n\tGetHandleVerifier [0x0x7ff6e4d5e26d+2926461]\n\tGetHandleVerifier [0x0x7ff6e4d58993+2903715]\n\tGetHandleVerifier [0x0x7ff6e4d76aed+3026941]\n\tGetHandleVerifier [0x0x7ff6e4ac16fe+187406]\n\tGetHandleVerifier [0x0x7ff6e4ac96ef+220159]\n\tGetHandleVerifier [0x0x7ff6e4aafaf4+114692]\n\tGetHandleVerifier [0x0x7ff6e4aafca9+115129]\n\tGetHandleVerifier [0x0x7ff6e4a964d8+10728]\n\tBaseThreadInitThunk [0x0x7ffee1537374+20]\n\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]", "trace": "self = <test_system.test_apps.TestSAppsPage object at 0x0000024858DD3BB0>\nlogin_to_apps = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d6e6b884140bce68b777d2b9153c09ff\")>\n\n    @allure.story(\"校验数字文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_apps_textverify(self, login_to_apps):\n        num = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        driver = login_to_apps  # WebDriver 实例\n        apps = AppsPage(driver)  # 用 driver 初始化 ExpressionPage\n        name = \"appstest1\"\n        apps.wait_for_loading_to_disappear()\n        apps.select_input(name)\n        apps.click_button(f'//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"{name}\"]')\n        apps.click_all_button(\"编辑\")\n        xpath = '//div[@class=\"d-flex\"]/div[label[text()=\"排序\"]]//input'\n        ele = apps.get_find_element_xpath(xpath)\n        ele.send_keys(Keys.CONTROL, \"a\")\n        ele.send_keys(Keys.DELETE)\n        apps.enter_texts('//div[@class=\"d-flex\"]/div[label[text()=\"排序\"]]//input', num)\n        apps.click_save_button()\n>       message = apps.get_find_message()\n\ntest_apps.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\apps_page.py:35: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d6e6b884140bce68b777d2b9153c09ff\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000024858D0CDC0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6e4aa6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6e4aa6fc0+79056]\nE       \t(No symbol) [0x0x7ff6e4839dda]\nE       \t(No symbol) [0x0x7ff6e48902ea]\nE       \t(No symbol) [0x0x7ff6e489059c]\nE       \t(No symbol) [0x0x7ff6e48e3f37]\nE       \t(No symbol) [0x0x7ff6e48b86af]\nE       \t(No symbol) [0x0x7ff6e48e0dbe]\nE       \t(No symbol) [0x0x7ff6e48b8443]\nE       \t(No symbol) [0x0x7ff6e4881311]\nE       \t(No symbol) [0x0x7ff6e48820a3]\nE       \tGetHandleVerifier [0x0x7ff6e4d5e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6e4d58993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6e4d76aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6e4ac16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6e4ac96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6e4aafaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6e4aafca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6e4a964d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_apps_textverify_failure", "source": "c81362a7-4cb3-4c43-97a5-00aac66ca2f9-attachment.png", "type": "image/png"}, {"name": "test_apps_textverify_source", "source": "0086e327-67f5-43a7-9dfc-c5b4afbf35c8-attachment.html", "type": "text/html"}, {"name": "log", "source": "9378bab7-646a-4a04-8be2-054b8e80ca60-attachment.txt", "type": "text/plain"}], "start": 1761217387722, "stop": 1761217405338, "uuid": "178d0edd-8433-4c20-af15-67fd6f32793b", "historyId": "3de62d3f82a347102382573c8b12bef4", "testCaseId": "3de62d3f82a347102382573c8b12bef4", "fullName": "Tests.test_system.test_apps.TestSAppsPage#test_apps_textverify", "labels": [{"name": "story", "value": "校验数字文本框成功"}, {"name": "feature", "value": "应用管理页用例"}, {"name": "tag", "value": "run(order=215)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_apps"}, {"name": "subSuite", "value": "TestSAppsPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "9036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_apps"}]}