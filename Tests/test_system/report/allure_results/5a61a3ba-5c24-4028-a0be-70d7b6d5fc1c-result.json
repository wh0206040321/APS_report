{"name": "test_synchronize_all_psi", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //span[text()=\" PSI设置 \"]", "trace": "self = <Pages.systemPage.synchronize_page.SynchronizePage object at 0x000001CCE70C3A30>\nby_or_element = 'xpath', value = '//span[text()=\" PSI设置 \"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4c6c9651ca8a4933b82c9d64d4e1a9d5\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001CCE70C69E0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff696576f65+78965]\nE       \tGetHandleVerifier [0x0x7ff696576fc0+79056]\nE       \t(No symbol) [0x0x7ff696309dda]\nE       \t(No symbol) [0x0x7ff6963602ea]\nE       \t(No symbol) [0x0x7ff69636059c]\nE       \t(No symbol) [0x0x7ff6963b3f37]\nE       \t(No symbol) [0x0x7ff6963886af]\nE       \t(No symbol) [0x0x7ff6963b0dbe]\nE       \t(No symbol) [0x0x7ff696388443]\nE       \t(No symbol) [0x0x7ff696351311]\nE       \t(No symbol) [0x0x7ff6963520a3]\nE       \tGetHandleVerifier [0x0x7ff69682e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff696828993+2903715]\nE       \tGetHandleVerifier [0x0x7ff696846aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6965916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6965996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff69657faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff69657fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6965664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35147374+20]\nE       \tRtlUserThreadStart [0x0x7ffd35bdcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_synchronize.TestSynchronizePage object at 0x000001CCE70C10C0>\nlogin_to_synchronize = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c6c9651ca8a4933b82c9d64d4e1a9d5\")>\n\n    @allure.story(\"同步单个psi成功\")\n    # @pytest.mark.run(order=1)\n    def test_synchronize_all_psi(self, login_to_synchronize):\n        driver = login_to_synchronize  # WebDriver 实例\n        synchronize = SynchronizePage(driver)  # 用 driver 初始化 SynchronizePage\n        psi = \"1测试psi1\"\n        plan = \"AA\"\n>       synchronize.click_checkbox_value(psi, plan, \"1\")\n\ntest_synchronize.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\synchronize_page.py:105: in click_checkbox_value\n    self.click_button('//span[text()=\" PSI设置 \"]')\n..\\..\\Pages\\systemPage\\synchronize_page.py:25: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.synchronize_page.SynchronizePage object at 0x000001CCE70C3A30>\nby_or_element = 'xpath', value = '//span[text()=\" PSI设置 \"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //span[text()=\" PSI设置 \"]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_synchronize_all_psi_failure", "source": "3049941e-118e-4039-af05-75b5aec6278a-attachment.png", "type": "image/png"}, {"name": "test_synchronize_all_psi_source", "source": "96c077d3-1857-48f0-adfb-0464fee04ed0-attachment.html", "type": "text/html"}, {"name": "log", "source": "3f113789-e089-4625-8574-3057ae3aeb71-attachment.txt", "type": "text/plain"}], "start": 1755772810531, "stop": 1755772821339, "uuid": "2759bca7-8dcc-4078-aceb-b6bb673c54f4", "historyId": "ebe8a19409b7567962a215ab90cd6a3c", "testCaseId": "ebe8a19409b7567962a215ab90cd6a3c", "fullName": "Tests.test_system.test_synchronize.TestSynchronizePage#test_synchronize_all_psi", "labels": [{"name": "feature", "value": "配置同步页用例"}, {"name": "story", "value": "同步单个psi成功"}, {"name": "tag", "value": "run(order=204)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_synchronize"}, {"name": "subSuite", "value": "TestSynchronizePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "26224-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_synchronize"}]}