{"name": "test_synchronize_all_import2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[div[text()=\"将同步数据到目的计划单元, 是否继续?\"]]/following-sibling::div//span[text()=\"确定\"]", "trace": "self = <Pages.systemPage.synchronize_page.SynchronizePage object at 0x000001B555405810>\nby_or_element = 'xpath'\nvalue = '//div[div[text()=\"将同步数据到目的计划单元, 是否继续?\"]]/following-sibling::div//span[text()=\"确定\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5d01a9b9e3ae47cd84c20c3d608ecc27\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001B5552849D0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7a3746f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7a3746fc0+79056]\nE       \t(No symbol) [0x0x7ff7a34d9dda]\nE       \t(No symbol) [0x0x7ff7a35302ea]\nE       \t(No symbol) [0x0x7ff7a353059c]\nE       \t(No symbol) [0x0x7ff7a3583f37]\nE       \t(No symbol) [0x0x7ff7a35586af]\nE       \t(No symbol) [0x0x7ff7a3580dbe]\nE       \t(No symbol) [0x0x7ff7a3558443]\nE       \t(No symbol) [0x0x7ff7a3521311]\nE       \t(No symbol) [0x0x7ff7a35220a3]\nE       \tGetHandleVerifier [0x0x7ff7a39fe26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7a39f8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7a3a16aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7a37616fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7a37696ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7a374faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7a374fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7a37364d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff954047374+20]\nE       \tRtlUserThreadStart [0x0x7ff9541fcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_synchronize.TestSynchronizePage object at 0x000001B555405300>\nlogin_to_synchronize = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5d01a9b9e3ae47cd84c20c3d608ecc27\")>\n\n    @allure.story(\"同步1个数据导入到多个计划单元成功\")\n    # @pytest.mark.run(order=1)\n    def test_synchronize_all_import2(self, login_to_synchronize):\n        driver = login_to_synchronize  # WebDriver 实例\n        synchronize = SynchronizePage(driver)  # 用 driver 初始化 SynchronizePage\n        import_name = [\n            \"同步导入3\",\n        ]\n        plan_names = [\n            \"1测试计划单元标准\",\n            \"1测试A\",\n        ]\n        synchronize.click_checkbox_value(import_name, plan_names, \"4\")\n        synchronize.click_synchronize_button()\n>       synchronize.click_synchronize_pop(True)\n\ntest_synchronize.py:459: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\synchronize_page.py:217: in click_synchronize_pop\n    self.click_button('//div[div[text()=\"将同步数据到目的计划单元, 是否继续?\"]]/following-sibling::div//span[text()=\"确定\"]')\n..\\..\\Pages\\systemPage\\synchronize_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.synchronize_page.SynchronizePage object at 0x000001B555405810>\nby_or_element = 'xpath'\nvalue = '//div[div[text()=\"将同步数据到目的计划单元, 是否继续?\"]]/following-sibling::div//span[text()=\"确定\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[div[text()=\"将同步数据到目的计划单元, 是否继续?\"]]/following-sibling::div//span[text()=\"确定\"]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_synchronize_all_import2_failure", "source": "17082e30-0692-41e2-8b96-978980c57d60-attachment.png", "type": "image/png"}, {"name": "test_synchronize_all_import2_source", "source": "57361a5d-7f9d-452c-9d6a-632437dd940a-attachment.html", "type": "text/html"}, {"name": "log", "source": "bb8deb0d-4e27-43d0-a5b9-2fb30b77c1fe-attachment.txt", "type": "text/plain"}], "start": 1757990731799, "stop": 1757990755625, "uuid": "7170d5ed-4c0f-49cf-9f01-01b2604dfb8e", "historyId": "07bb02cd68920c84d1a806d8bb3ba89e", "testCaseId": "07bb02cd68920c84d1a806d8bb3ba89e", "fullName": "Tests.test_system.test_synchronize.TestSynchronizePage#test_synchronize_all_import2", "labels": [{"name": "feature", "value": "配置同步页用例"}, {"name": "story", "value": "同步1个数据导入到多个计划单元成功"}, {"name": "tag", "value": "run(order=208)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_synchronize"}, {"name": "subSuite", "value": "TestSynchronizePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "2656-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_synchronize"}]}