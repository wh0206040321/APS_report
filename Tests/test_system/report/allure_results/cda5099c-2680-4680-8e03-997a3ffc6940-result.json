{"name": "test_unit_selectsuccess2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[text()=\"模版名称\" and contains(@optid,\"opt_\")]", "trace": "self = <Pages.systemPage.planUnit_page.PlanUnitPage object at 0x000001961EDB3640>\nby_or_element = 'xpath'\nvalue = '//div[text()=\"模版名称\" and contains(@optid,\"opt_\")]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ff567cb9b143d258f6c0903facd42171\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001961ED33400>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff729846f65+78965]\nE       \tGetHandleVerifier [0x0x7ff729846fc0+79056]\nE       \t(No symbol) [0x0x7ff7295d9dda]\nE       \t(No symbol) [0x0x7ff7296302ea]\nE       \t(No symbol) [0x0x7ff72963059c]\nE       \t(No symbol) [0x0x7ff729683f37]\nE       \t(No symbol) [0x0x7ff7296586af]\nE       \t(No symbol) [0x0x7ff729680dbe]\nE       \t(No symbol) [0x0x7ff729658443]\nE       \t(No symbol) [0x0x7ff729621311]\nE       \t(No symbol) [0x0x7ff7296220a3]\nE       \tGetHandleVerifier [0x0x7ff729afe26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff729af8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff729b16aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7298616fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7298696ef+220159]\nE       \tGetHandleVerifier [0x0x7ff72984faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff72984fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7298364d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff835d07374+20]\nE       \tRtlUserThreadStart [0x0x7ff836dfcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_planUnit.TestPlanUnitPage object at 0x000001961EDB2F20>\nlogin_to_planUnit = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ff567cb9b143d258f6c0903facd42171\")>\n\n    @allure.story(\"查询物料名称包含单元并且模版名称为小日程\")\n    # @pytest.mark.run(order=1)\n    def test_unit_selectsuccess2(self, login_to_planUnit):\n        driver = login_to_planUnit  # WebDriver 实例\n        unit = PlanUnitPage(driver)  # 用 driver 初始化 PlanUnitPage\n    \n        name = \"单元\"\n        num = '小日程'\n        # 点击查询\n        unit.click_sel_button()\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料名称\n        unit.click_button('//div[text()=\"计划单元名称\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        unit.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        unit.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        unit.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        unit.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        unit.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n    \n        # 点击（\n        unit.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        unit.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        actions.double_click(double_click).perform()\n        # 定义and元素的XPath\n        and_xpath = '//div[text()=\"and\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击and元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, and_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            and_found = False\n    \n            while attempt < max_attempts and not and_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找and元素\n                    and_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, and_xpath))\n                    )\n                    and_element.click()\n                    and_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not and_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'and'元素\")\n    \n        # 点击（\n        unit.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        unit.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击物料优先度\n        unit.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n>       unit.click_button('//div[text()=\"模版名称\" and contains(@optid,\"opt_\")]')\n\ntest_planUnit.py:494: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\planUnit_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.planUnit_page.PlanUnitPage object at 0x000001961EDB3640>\nby_or_element = 'xpath'\nvalue = '//div[text()=\"模版名称\" and contains(@optid,\"opt_\")]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[text()=\"模版名称\" and contains(@optid,\"opt_\")]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_unit_selectsuccess2_failure", "source": "0bb1cc3b-ec6f-4ce9-ae52-a3fe0b832227-attachment.png", "type": "image/png"}, {"name": "test_unit_selectsuccess2_source", "source": "de143e64-c706-4b79-8586-0125f7cbcd53-attachment.html", "type": "text/html"}, {"name": "log", "source": "4e145649-14ea-44aa-90f7-9d04773d5ad7-attachment.txt", "type": "text/plain"}], "start": 1756801114702, "stop": 1756801138492, "uuid": "e3322c2d-51fe-40e4-be37-b2b9c4c7e49a", "historyId": "2de9ed7f5fe79f44e136e6128906dc7c", "testCaseId": "2de9ed7f5fe79f44e136e6128906dc7c", "fullName": "Tests.test_system.test_planUnit.TestPlanUnitPage#test_unit_selectsuccess2", "labels": [{"name": "feature", "value": "计划单元页用例"}, {"name": "story", "value": "查询物料名称包含单元并且模版名称为小日程"}, {"name": "tag", "value": "run(order=204)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_planUnit"}, {"name": "subSuite", "value": "TestPlanUnitPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "25668-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_planUnit"}]}