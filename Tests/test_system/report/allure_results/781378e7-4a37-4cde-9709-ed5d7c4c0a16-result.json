{"name": "test_psi_updaterepeat", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff66a0c6f65+78965]\n\tGetHandleVerifier [0x0x7ff66a0c6fc0+79056]\n\t(No symbol) [0x0x7ff669e59dda]\n\t(No symbol) [0x0x7ff669eb02ea]\n\t(No symbol) [0x0x7ff669eb059c]\n\t(No symbol) [0x0x7ff669f03f37]\n\t(No symbol) [0x0x7ff669ed86af]\n\t(No symbol) [0x0x7ff669f00dbe]\n\t(No symbol) [0x0x7ff669ed8443]\n\t(No symbol) [0x0x7ff669ea1311]\n\t(No symbol) [0x0x7ff669ea20a3]\n\tGetHandleVerifier [0x0x7ff66a37e26d+2926461]\n\tGetHandleVerifier [0x0x7ff66a378993+2903715]\n\tGetHandleVerifier [0x0x7ff66a396aed+3026941]\n\tGetHandleVerifier [0x0x7ff66a0e16fe+187406]\n\tGetHandleVerifier [0x0x7ff66a0e96ef+220159]\n\tGetHandleVerifier [0x0x7ff66a0cfaf4+114692]\n\tGetHandleVerifier [0x0x7ff66a0cfca9+115129]\n\tGetHandleVerifier [0x0x7ff66a0b64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffff5547374+20]\n\tRtlUserThreadStart [0x0x7ffff5f9cc91+33]", "trace": "self = <test_system.test_psi.TestPSIPage object at 0x0000019911913A00>\nlogin_to_psi = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"738b7a6416df4f52371b91a0ad8d9dab\")>\n\n    @allure.story(\"修改psi名称重复\")\n    # @pytest.mark.run(order=1)\n    def test_psi_updaterepeat(self, login_to_psi):\n        driver = login_to_psi  # WebDriver 实例\n        psi = PsiPage(driver)  # 用 driver 初始化 PsiPage\n        name = \"添加全部\"\n        name1 = \"1测试psi1\"\n        psi.click_button(f'//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"{name}\"]')\n        psi.click_button_psi(\"编辑\")\n        psi.enter_text(By.XPATH, '//div[p[text()=\"PSI名称: \"]]//input', name1)\n        psi.click_button_psi(\"保存\")\n>       message = psi.get_find_message()\n\ntest_psi.py:283: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\psi_page.py:112: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"738b7a6416df4f52371b91a0ad8d9dab\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001991186AF80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff66a0c6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff66a0c6fc0+79056]\nE       \t(No symbol) [0x0x7ff669e59dda]\nE       \t(No symbol) [0x0x7ff669eb02ea]\nE       \t(No symbol) [0x0x7ff669eb059c]\nE       \t(No symbol) [0x0x7ff669f03f37]\nE       \t(No symbol) [0x0x7ff669ed86af]\nE       \t(No symbol) [0x0x7ff669f00dbe]\nE       \t(No symbol) [0x0x7ff669ed8443]\nE       \t(No symbol) [0x0x7ff669ea1311]\nE       \t(No symbol) [0x0x7ff669ea20a3]\nE       \tGetHandleVerifier [0x0x7ff66a37e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff66a378993+2903715]\nE       \tGetHandleVerifier [0x0x7ff66a396aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff66a0e16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff66a0e96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff66a0cfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff66a0cfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff66a0b64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffff5547374+20]\nE       \tRtlUserThreadStart [0x0x7ffff5f9cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_psi_updaterepeat_failure", "source": "f51f3670-183d-4639-b187-1d96f7f62447-attachment.png", "type": "image/png"}, {"name": "test_psi_updaterepeat_source", "source": "02f20e3b-8aad-4661-866e-643382370400-attachment.html", "type": "text/html"}, {"name": "log", "source": "82f2fdc3-4c71-41d6-a21d-3c6b580356ef-attachment.txt", "type": "text/plain"}], "start": 1755596115841, "stop": 1755596154499, "uuid": "e47dccc2-9d57-408f-b280-199ce49bf19f", "historyId": "1132b8b89f49d18cf0f8e353be9f45a2", "testCaseId": "1132b8b89f49d18cf0f8e353be9f45a2", "fullName": "Tests.test_system.test_psi.TestPSIPage#test_psi_updaterepeat", "labels": [{"name": "story", "value": "修改psi名称重复"}, {"name": "feature", "value": "PSI设置用例"}, {"name": "tag", "value": "run(order=203)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_psi"}, {"name": "subSuite", "value": "TestPSIPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "22936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_psi"}]}