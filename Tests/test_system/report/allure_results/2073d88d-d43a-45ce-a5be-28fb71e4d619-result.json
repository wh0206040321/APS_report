{"name": "test_expression_addrepeat1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6e4aa6f65+78965]\n\tGetHandleVerifier [0x0x7ff6e4aa6fc0+79056]\n\t(No symbol) [0x0x7ff6e4839dda]\n\t(No symbol) [0x0x7ff6e48902ea]\n\t(No symbol) [0x0x7ff6e489059c]\n\t(No symbol) [0x0x7ff6e48e3f37]\n\t(No symbol) [0x0x7ff6e48b86af]\n\t(No symbol) [0x0x7ff6e48e0dbe]\n\t(No symbol) [0x0x7ff6e48b8443]\n\t(No symbol) [0x0x7ff6e4881311]\n\t(No symbol) [0x0x7ff6e48820a3]\n\tGetHandleVerifier [0x0x7ff6e4d5e26d+2926461]\n\tGetHandleVerifier [0x0x7ff6e4d58993+2903715]\n\tGetHandleVerifier [0x0x7ff6e4d76aed+3026941]\n\tGetHandleVerifier [0x0x7ff6e4ac16fe+187406]\n\tGetHandleVerifier [0x0x7ff6e4ac96ef+220159]\n\tGetHandleVerifier [0x0x7ff6e4aafaf4+114692]\n\tGetHandleVerifier [0x0x7ff6e4aafca9+115129]\n\tGetHandleVerifier [0x0x7ff6e4a964d8+10728]\n\tBaseThreadInitThunk [0x0x7ffee1537374+20]\n\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]", "trace": "self = <test_system.test_expression.TestSExpressionPage object at 0x00000190A89FC460>\nlogin_to_expression = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9be0d858a380e7f325be4089d28744a4\")>\n\n    @allure.story(\"添加表达式管理重复不允许添加\")\n    # @pytest.mark.run(order=1)\n    def test_expression_addrepeat1(self, login_to_expression):\n        driver = login_to_expression  # WebDriver 实例\n        expression = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n        sleep(1)\n        name = '1测试表达式管理1'\n        expression.click_all_button(\"新增\")\n        expression.enter_texts('//div[p[text()=\"名称: \"]]//input', name)\n        expression.click_button('//div[p[text()=\"分类: \"]]//input[@type=\"text\"]')\n        expression.click_button('//li[text()=\"图棒显示颜色\"]')\n        expression.enter_texts('//div[p[text()=\"表达式: \"]]//textarea', name)\n        expression.click_all_button(\"保存\")\n>       message = expression.get_error_message()\n\ntest_expression.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\expression_page.py:44: in get_error_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9be0d858a380e7f325be4089d28744a4\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000190A898CEE0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6e4aa6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6e4aa6fc0+79056]\nE       \t(No symbol) [0x0x7ff6e4839dda]\nE       \t(No symbol) [0x0x7ff6e48902ea]\nE       \t(No symbol) [0x0x7ff6e489059c]\nE       \t(No symbol) [0x0x7ff6e48e3f37]\nE       \t(No symbol) [0x0x7ff6e48b86af]\nE       \t(No symbol) [0x0x7ff6e48e0dbe]\nE       \t(No symbol) [0x0x7ff6e48b8443]\nE       \t(No symbol) [0x0x7ff6e4881311]\nE       \t(No symbol) [0x0x7ff6e48820a3]\nE       \tGetHandleVerifier [0x0x7ff6e4d5e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6e4d58993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6e4d76aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6e4ac16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6e4ac96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6e4aafaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6e4aafca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6e4a964d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_expression_addrepeat1_failure", "source": "05ab98b3-d775-4bfe-9d37-9817c6bb842d-attachment.png", "type": "image/png"}, {"name": "test_expression_addrepeat1_source", "source": "a317009f-6045-40dc-8df2-b909a8eddf81-attachment.html", "type": "text/html"}, {"name": "log", "source": "a931a7ac-006d-4bf9-9b29-323bfe548435-attachment.txt", "type": "text/plain"}], "start": 1761210764479, "stop": 1761210777003, "uuid": "b745fdb1-3ff9-496b-94ef-b278b2f5e091", "historyId": "c9a074eeeb3d3b7eb6250fe67c4d6869", "testCaseId": "c9a074eeeb3d3b7eb6250fe67c4d6869", "fullName": "Tests.test_system.test_expression.TestSExpressionPage#test_expression_addrepeat1", "labels": [{"name": "feature", "value": "表达式管理页用例"}, {"name": "story", "value": "添加表达式管理重复不允许添加"}, {"name": "tag", "value": "run(order=212)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_expression"}, {"name": "subSuite", "value": "TestSExpressionPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "25836-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_expression"}]}