{"name": "test_environment_restore_default_settings", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff634466f65+78965]\n\tGetHandleVerifier [0x0x7ff634466fc0+79056]\n\t(No symbol) [0x0x7ff6341f9dda]\n\t(No symbol) [0x0x7ff6342502ea]\n\t(No symbol) [0x0x7ff63425059c]\n\t(No symbol) [0x0x7ff6342a3f37]\n\t(No symbol) [0x0x7ff6342786af]\n\t(No symbol) [0x0x7ff6342a0dbe]\n\t(No symbol) [0x0x7ff634278443]\n\t(No symbol) [0x0x7ff634241311]\n\t(No symbol) [0x0x7ff6342420a3]\n\tGetHandleVerifier [0x0x7ff63471e26d+2926461]\n\tGetHandleVerifier [0x0x7ff634718993+2903715]\n\tGetHandleVerifier [0x0x7ff634736aed+3026941]\n\tGetHandleVerifier [0x0x7ff6344816fe+187406]\n\tGetHandleVerifier [0x0x7ff6344896ef+220159]\n\tGetHandleVerifier [0x0x7ff63446faf4+114692]\n\tGetHandleVerifier [0x0x7ff63446fca9+115129]\n\tGetHandleVerifier [0x0x7ff6344564d8+10728]\n\tBaseThreadInitThunk [0x0x7ff992b87374+20]\n\tRtlUserThreadStart [0x0x7ff99357cc91+33]", "trace": "self = <test_system.test_environment.TestEnvironmentPage object at 0x0000021AD405A6E0>\nlogin_to_environment = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ca19d3a1a30ccbd77b65b6ba482860e6\")>\n\n    @allure.story(\"恢复默认设置\")\n    # @pytest.mark.run(order=1)\n    def test_environment_restore_default_settings(self, login_to_environment):\n        driver = login_to_environment  # WebDriver 实例\n        environment = EnvironmentPage(driver)  # 用 driver 初始化 EnvironmentPage\n        environment.enter_number_input(10)\n        check1 = environment.get_find_element_xpath('//div[label[text()=\"变更使用时间:\"]]/div//span').get_attribute(\"class\")\n        if check1 == \"ivu-checkbox ivu-checkbox-checked\":\n            environment.click_button('//div[label[text()=\"变更使用时间:\"]]/div//span')\n        select_list = [\n            {\"select\": '//div[label[text()=\"用鼠标移动工作方法:\"]]/div//i', \"value\": '//li[text()=\"无限能力\"]'},\n        ]\n        environment.batch_modify_select_input(select_list)\n    \n        environment.click_cycle()\n        xpath_value_map = {\n            '//div[label[text()=\"分派开始时间:\"]]//input': \"0\",\n            '//div[label[text()=\"分派结束时间:\"]]//input': \"90\",\n            '//div[label[text()=\"生产指令结束时间:\"]]//input': \"0\",\n            '//div[label[text()=\"显示开始时间:\"]]//input': \"-3\",\n            '//div[label[text()=\"显示结束时间:\"]]//input': \"100\",\n        }\n        environment.batch_modify_inputs(xpath_value_map)\n    \n        environment.click_plan()\n        xpath_value_map1 = {\n            '//div[label[text()=\"制造效率:\"]]//input': \"1\",\n            '//div[label[text()=\"分派侯补数的上限:\"]]//input': \"1000\",\n            '//div[label[text()=\"自动补充制造订单序列号:\"]]//input': \"1\",\n        }\n        environment.batch_modify_inputs(xpath_value_map1)\n    \n        check2 = environment.get_find_element_xpath('//div[label[text()=\"启用资源锁定:\"]]/div//input').get_attribute(\"class\")\n        if check2 == \"ivu-checkbox ivu-checkbox-checked\":\n            environment.click_button('//div[label[text()=\"变更使用时间:\"]]/div//span')\n    \n        sleep(2)\n        environment.click_save_button()\n>       assert environment.get_find_message() == \"保存成功\"\n\ntest_environment.py:627: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\environment_page.py:49: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ca19d3a1a30ccbd77b65b6ba482860e6\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000021AD4214DC0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff634466f65+78965]\nE       \tGetHandleVerifier [0x0x7ff634466fc0+79056]\nE       \t(No symbol) [0x0x7ff6341f9dda]\nE       \t(No symbol) [0x0x7ff6342502ea]\nE       \t(No symbol) [0x0x7ff63425059c]\nE       \t(No symbol) [0x0x7ff6342a3f37]\nE       \t(No symbol) [0x0x7ff6342786af]\nE       \t(No symbol) [0x0x7ff6342a0dbe]\nE       \t(No symbol) [0x0x7ff634278443]\nE       \t(No symbol) [0x0x7ff634241311]\nE       \t(No symbol) [0x0x7ff6342420a3]\nE       \tGetHandleVerifier [0x0x7ff63471e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff634718993+2903715]\nE       \tGetHandleVerifier [0x0x7ff634736aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6344816fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6344896ef+220159]\nE       \tGetHandleVerifier [0x0x7ff63446faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff63446fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6344564d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff992b87374+20]\nE       \tRtlUserThreadStart [0x0x7ff99357cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_environment_restore_default_settings_failure", "source": "60d8a06b-5b71-4836-8d23-61f53009872d-attachment.png", "type": "image/png"}, {"name": "test_environment_restore_default_settings_source", "source": "fa60ce08-8995-417e-9948-cfcd6076e60f-attachment.html", "type": "text/html"}, {"name": "log", "source": "4b76fa77-139c-4f7c-bb0e-1ed97e4b9877-attachment.txt", "type": "text/plain"}], "start": 1754986124717, "stop": 1754986157717, "uuid": "a8a094d0-5e08-4bd4-a888-ed977f3c7c6c", "historyId": "0a56c918f18ed8e305fc99384fd1c666", "testCaseId": "0a56c918f18ed8e305fc99384fd1c666", "fullName": "Tests.test_system.test_environment.TestEnvironmentPage#test_environment_restore_default_settings", "labels": [{"name": "story", "value": "恢复默认设置"}, {"name": "feature", "value": "环境设置页用例"}, {"name": "tag", "value": "run(order=201)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_environment"}, {"name": "subSuite", "value": "TestEnvironmentPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "16596-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_environment"}]}