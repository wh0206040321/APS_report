{"name": "test_user_lock1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = 解除当前锁定", "trace": "self = <Pages.systemPage.userRole_page.UserRolePage object at 0x000001FBECED4A90>\nby_or_element = 'xpath', value = '解除当前锁定', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8830b9f6408260472317eddaaeb8ec22\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001FBECEC9C60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff63f326f65+78965]\nE       \tGetHandleVerifier [0x0x7ff63f326fc0+79056]\nE       \t(No symbol) [0x0x7ff63f0b9dda]\nE       \t(No symbol) [0x0x7ff63f1102ea]\nE       \t(No symbol) [0x0x7ff63f11059c]\nE       \t(No symbol) [0x0x7ff63f163f37]\nE       \t(No symbol) [0x0x7ff63f1386af]\nE       \t(No symbol) [0x0x7ff63f160dbe]\nE       \t(No symbol) [0x0x7ff63f138443]\nE       \t(No symbol) [0x0x7ff63f101311]\nE       \t(No symbol) [0x0x7ff63f1020a3]\nE       \tGetHandleVerifier [0x0x7ff63f5de26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff63f5d8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff63f5f6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff63f3416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff63f3496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff63f32faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff63f32fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff63f3164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffae7f27374+20]\nE       \tRtlUserThreadStart [0x0x7ffae8d3cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_userRole.TestUserRolePage object at 0x000001FBECED5060>\nlogin_to_userrole = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8830b9f6408260472317eddaaeb8ec22\")>\n\n    @allure.story(\"当前用户没有被锁定，点击解除当前锁定，显示用户未锁定\")\n    # @pytest.mark.run(order=1)\n    def test_user_lock1(self, login_to_userrole):\n        driver = login_to_userrole  # WebDriver 实例\n        user = UserRolePage(driver)  # 用 driver 初始化 UserRolePage\n        name = '1user2'\n        user.select_input(name)\n        sleep(1)\n        user.click_button(f'//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"{name}\"]')\n        sleep(1)\n        user.click_all_button(\"编辑\")\n        sy = user.get_find_element_xpath('//div[label[text()=\"是否锁定\"]]/div//span').get_attribute(\"class\")\n        if sy == 'ivu-checkbox ivu-checkbox-checked':\n            user.click_button('//div[label[text()=\"是否锁定\"]]/div//span')\n        sleep(1)\n        user.click_all_button(\"保存\")\n        message = user.get_find_message()\n        user.right_refresh()\n        user.select_input(name)\n        sleep(1)\n        table_sy = user.get_find_element_xpath(f'//table[@class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"{name}\"]]/td[6]//span[1]').get_attribute(\"class\")\n        if table_sy == 'vxe-checkbox--icon vxe-icon-checkbox-unchecked':\n>           user.click_button('解除当前锁定')\n\ntest_userRole.py:652: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\userRole_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.userRole_page.UserRolePage object at 0x000001FBECED4A90>\nby_or_element = 'xpath', value = '解除当前锁定', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = 解除当前锁定\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_user_lock1_failure", "source": "50e58535-9d02-4da9-8fe3-9f909677195f-attachment.png", "type": "image/png"}, {"name": "test_user_lock1_source", "source": "c6ae9bd7-5b16-422f-9c4c-c74abbe316bb-attachment.html", "type": "text/html"}, {"name": "log", "source": "53593d81-eda2-4287-80c3-0446ce725d77-attachment.txt", "type": "text/plain"}], "start": 1757414400297, "stop": 1757414430631, "uuid": "74b62ab1-568a-4724-b62a-f654828d426a", "historyId": "692527eed8b3dd332f2b03ae5dc90be1", "testCaseId": "692527eed8b3dd332f2b03ae5dc90be1", "fullName": "Tests.test_system.test_userRole.TestUserRolePage#test_user_lock1", "labels": [{"name": "feature", "value": "用户权限管理页用例"}, {"name": "story", "value": "当前用户没有被锁定，点击解除当前锁定，显示用户未锁定"}, {"name": "tag", "value": "run(order=206)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_userRole"}, {"name": "subSuite", "value": "TestUserRolePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "28244-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_userRole"}]}