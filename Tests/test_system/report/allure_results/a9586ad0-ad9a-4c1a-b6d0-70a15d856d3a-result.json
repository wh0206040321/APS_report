{"name": "test_unit_upload", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[@class=\"el-message-box__btns\"]/button[2]", "trace": "self = <Pages.systemPage.systemSettings_page.SystemSettingsPage object at 0x000002B643731990>\nby_or_element = 'xpath'\nvalue = '//div[@class=\"el-message-box__btns\"]/button[2]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4232628e3d412074448a509c4c8b6eb4\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002B6436BD2D0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff787246f65+78965]\nE       \tGetHandleVerifier [0x0x7ff787246fc0+79056]\nE       \t(No symbol) [0x0x7ff786fd9dda]\nE       \t(No symbol) [0x0x7ff7870302ea]\nE       \t(No symbol) [0x0x7ff78703059c]\nE       \t(No symbol) [0x0x7ff787083f37]\nE       \t(No symbol) [0x0x7ff7870586af]\nE       \t(No symbol) [0x0x7ff787080dbe]\nE       \t(No symbol) [0x0x7ff787058443]\nE       \t(No symbol) [0x0x7ff787021311]\nE       \t(No symbol) [0x0x7ff7870220a3]\nE       \tGetHandleVerifier [0x0x7ff7874fe26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7874f8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff787516aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7872616fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7872696ef+220159]\nE       \tGetHandleVerifier [0x0x7ff78724faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff78724fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7872364d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcefb37374+20]\nE       \tRtlUserThreadStart [0x0x7ffcf06bcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_systemSettings.TestSystemSettingsPage object at 0x000002B643732560>\nlogin_to_systemSettings = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4232628e3d412074448a509c4c8b6eb4\")>\n\n    @allure.story(\"上传成功\")\n    # @pytest.mark.run(order=1)\n    def test_unit_upload(self, login_to_systemSettings):\n        driver = login_to_systemSettings  # WebDriver 实例\n        settings = SystemSettingsPage(driver)  # 用 driver 初始化 SystemSettingsPage\n        settings.click_button('(//i[@class=\"col-3399ff ivu-icon ivu-icon-ios-cloud-upload\"])[1]')\n        # 清理 .crdownload 文件，避免上传未完成的文件\n        download_path = os.path.abspath(\"downloads\")\n        for f in os.listdir(download_path):\n            if f.endswith(\".crdownload\"):\n                os.remove(os.path.join(download_path, f))\n    \n        sleep(3)\n        # 1. 准备上传文件路径\n        upload_file = os.path.abspath(f\"downloads/WPS图片.png\")  # 确保文件存在\n        assert os.path.exists(upload_file), \"上传文件不存在\"\n    \n        # 2. 定位上传控件并执行上传\n        settings.upload_file(upload_file, 1)\n>       settings.click_button('//div[@class=\"el-message-box__btns\"]/button[2]')\n\ntest_systemSettings.py:137: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\systemSettings_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.systemSettings_page.SystemSettingsPage object at 0x000002B643731990>\nby_or_element = 'xpath'\nvalue = '//div[@class=\"el-message-box__btns\"]/button[2]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[@class=\"el-message-box__btns\"]/button[2]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_unit_upload_failure", "source": "32021b06-29b5-4744-bf2c-15f67d02cbe3-attachment.png", "type": "image/png"}, {"name": "test_unit_upload_source", "source": "73609b54-a6bf-4970-a492-63eeb5dab4fe-attachment.html", "type": "text/html"}, {"name": "log", "source": "659216f4-a258-46db-9c80-9969fdc2f2d1-attachment.txt", "type": "text/plain"}], "start": 1758853175145, "stop": 1758853188936, "uuid": "5b656f22-0420-4385-9927-af9e1899188c", "historyId": "36a8ad1ed4a8aa4affe100cb7388fdf4", "testCaseId": "36a8ad1ed4a8aa4affe100cb7388fdf4", "fullName": "Tests.test_system.test_systemSettings.TestSystemSettingsPage#test_unit_upload", "labels": [{"name": "story", "value": "上传成功"}, {"name": "feature", "value": "系统标识设置页用例"}, {"name": "tag", "value": "run(order=211)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_systemSettings"}, {"name": "subSuite", "value": "TestSystemSettingsPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "26804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_systemSettings"}]}