{"name": "test_apps_addsuccess2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6a0ac6f65+78965]\n\tGetHandleVerifier [0x0x7ff6a0ac6fc0+79056]\n\t(No symbol) [0x0x7ff6a0859dda]\n\t(No symbol) [0x0x7ff6a08b02ea]\n\t(No symbol) [0x0x7ff6a08b059c]\n\t(No symbol) [0x0x7ff6a0903f37]\n\t(No symbol) [0x0x7ff6a08d86af]\n\t(No symbol) [0x0x7ff6a0900dbe]\n\t(No symbol) [0x0x7ff6a08d8443]\n\t(No symbol) [0x0x7ff6a08a1311]\n\t(No symbol) [0x0x7ff6a08a20a3]\n\tGetHandleVerifier [0x0x7ff6a0d7e26d+2926461]\n\tGetHandleVerifier [0x0x7ff6a0d78993+2903715]\n\tGetHandleVerifier [0x0x7ff6a0d96aed+3026941]\n\tGetHandleVerifier [0x0x7ff6a0ae16fe+187406]\n\tGetHandleVerifier [0x0x7ff6a0ae96ef+220159]\n\tGetHandleVerifier [0x0x7ff6a0acfaf4+114692]\n\tGetHandleVerifier [0x0x7ff6a0acfca9+115129]\n\tGetHandleVerifier [0x0x7ff6a0ab64d8+10728]\n\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\n\tRtlUserThreadStart [0x0x7fff513dcc91+33]", "trace": "self = <test_system.test_apps.TestSAppsPage object at 0x000002698CA13130>\nlogin_to_apps = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"82add6d0ac580e21eda0829c8cfb9c3c\")>\n\n    @allure.story(\"新增空白应用成功\")\n    # @pytest.mark.run(order=1)\n    def test_apps_addsuccess2(self, login_to_apps):\n        driver = login_to_apps  # WebDriver 实例\n        apps = AppsPage(driver)  # 用 driver 初始化 ExpressionPage\n        add = AddsPages(driver)\n        name = \"testapp1\"\n        apps.click_all_button(\"新增\")\n        sleep(1)\n        apps.click_save_button()\n        xpath_list = [\n            '//div[@class=\"d-flex\"]/div[label[text()=\"应用代码\"]]//input',\n            '//div[@class=\"d-flex\"]/div[label[text()=\"应用名称\"]]//input',\n            '//div[@class=\"d-flex\"]/div[label[text()=\"模块名称\"]]//input[@type=\"text\"]',\n            '//div[@class=\"d-flex\"]/div[label[text()=\"图标\"]]//i[contains(@class,\"ivu-icon\")]',\n            '//div[@class=\"d-flex\"]/div[label[text()=\"排序\"]]//input',\n        ]\n        add.batch_modify_input(xpath_list[:2], name)\n        apps.click_button(xpath_list[2])\n        apps.click_button('//li[text()=\"计划基础数据\"]')\n    \n        apps.click_button(xpath_list[3])\n        apps.click_button('//div[@class=\"flex-wrap\"]/div[1]')\n    \n        apps.enter_texts(xpath_list[4], \"1\")\n        apps.click_save_button()\n        message = apps.get_find_message()\n>       apps.select_input(name)\n\ntest_apps.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\apps_page.py:86: in select_input\n    ele = self.get_find_element_xpath(xpath)\n..\\..\\Pages\\systemPage\\apps_page.py:29: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\n..\\..\\Pages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"82add6d0ac580e21eda0829c8cfb9c3c\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002698C9BDD80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6a0ac6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6a0ac6fc0+79056]\nE       \t(No symbol) [0x0x7ff6a0859dda]\nE       \t(No symbol) [0x0x7ff6a08b02ea]\nE       \t(No symbol) [0x0x7ff6a08b059c]\nE       \t(No symbol) [0x0x7ff6a0903f37]\nE       \t(No symbol) [0x0x7ff6a08d86af]\nE       \t(No symbol) [0x0x7ff6a0900dbe]\nE       \t(No symbol) [0x0x7ff6a08d8443]\nE       \t(No symbol) [0x0x7ff6a08a1311]\nE       \t(No symbol) [0x0x7ff6a08a20a3]\nE       \tGetHandleVerifier [0x0x7ff6a0d7e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6a0d78993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6a0d96aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6a0ae16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6a0ae96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6a0acfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6a0acfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6a0ab64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_apps_addsuccess2_failure", "source": "c7abfeb1-0625-450d-960a-5c86a6f59a82-attachment.png", "type": "image/png"}, {"name": "test_apps_addsuccess2_source", "source": "463302d8-022c-4b9a-8756-95aea4509218-attachment.html", "type": "text/html"}, {"name": "log", "source": "73b52c58-cbaa-43d2-a6e3-5021cd6d4c65-attachment.txt", "type": "text/plain"}], "start": 1760958368486, "stop": 1760958383723, "uuid": "b4167b23-7f2d-44e0-8913-e462ebb2c65f", "historyId": "acb8f9c7bed795592224426b6d773300", "testCaseId": "acb8f9c7bed795592224426b6d773300", "fullName": "Tests.test_system.test_apps.TestSAppsPage#test_apps_addsuccess2", "labels": [{"name": "feature", "value": "应用管理页用例"}, {"name": "story", "value": "新增空白应用成功"}, {"name": "tag", "value": "run(order=215)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_apps"}, {"name": "subSuite", "value": "TestSAppsPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "3468-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_apps"}]}