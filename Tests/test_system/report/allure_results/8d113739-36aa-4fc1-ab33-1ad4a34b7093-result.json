{"name": "test_planUnit_updaterepeat", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//label[text()=\"模板名称\"])[1]/parent::div//div[@class=\"ivu-select-selection\"]", "trace": "self = <Pages.itemsPage.adds_page.AddsPages object at 0x0000023F63EB1570>\nby_or_element = 'xpath'\nvalue = '(//label[text()=\"模板名称\"])[1]/parent::div//div[@class=\"ivu-select-selection\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bffaa42e3a09ea32e1ad4fec8a4d9035\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000023F63E05D80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7fa926f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7fa926fc0+79056]\nE       \t(No symbol) [0x0x7ff7fa6b9dda]\nE       \t(No symbol) [0x0x7ff7fa7102ea]\nE       \t(No symbol) [0x0x7ff7fa71059c]\nE       \t(No symbol) [0x0x7ff7fa763f37]\nE       \t(No symbol) [0x0x7ff7fa7386af]\nE       \t(No symbol) [0x0x7ff7fa760dbe]\nE       \t(No symbol) [0x0x7ff7fa738443]\nE       \t(No symbol) [0x0x7ff7fa701311]\nE       \t(No symbol) [0x0x7ff7fa7020a3]\nE       \tGetHandleVerifier [0x0x7ff7fabde26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fabd8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fabf6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7fa9416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7fa9496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7fa92faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7fa92fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7fa9164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff835d07374+20]\nE       \tRtlUserThreadStart [0x0x7ff836dfcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_planUnit.TestPlanUnitPage object at 0x0000023F63EB08E0>\nlogin_to_planUnit = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bffaa42e3a09ea32e1ad4fec8a4d9035\")>\n\n    @allure.story(\"修改重复命名，不允许修改\")\n    # @pytest.mark.run(order=1)\n    def test_planUnit_updaterepeat(self, login_to_planUnit):\n        driver = login_to_planUnit  # WebDriver 实例\n        unit = PlanUnitPage(driver)  # 用 driver 初始化 PlanUnitPage\n        add = AddsPages(driver)\n        name = \"1测试计划单元小日程\"\n        module = \"标准\"\n        unit.click_all_button(\"编辑\")\n        list_ = [\n            '(//label[text()=\"计划单元\"])[1]/parent::div//input',\n            '(//label[text()=\"计划单元名称\"])[1]/parent::div//input',\n        ]\n        add.batch_modify_input(list_, name)\n    \n        list_sel = [\n            {\"select\": '(//label[text()=\"模板名称\"])[1]/parent::div//div[@class=\"ivu-select-selection\"]',\n             \"value\": f'//li[text()=\"{module}\"]'},\n        ]\n>       add.batch_modify_select_input(list_sel)\n\ntest_planUnit.py:242: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\itemsPage\\adds_page.py:70: in batch_modify_select_input\n    self.click_button(d['select'])\n..\\..\\Pages\\itemsPage\\adds_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.adds_page.AddsPages object at 0x0000023F63EB1570>\nby_or_element = 'xpath'\nvalue = '(//label[text()=\"模板名称\"])[1]/parent::div//div[@class=\"ivu-select-selection\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//label[text()=\"模板名称\"])[1]/parent::div//div[@class=\"ivu-select-selection\"]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_planUnit_updaterepeat_failure", "source": "60386638-4835-4af7-87aa-9e7ae4b57af0-attachment.png", "type": "image/png"}, {"name": "test_planUnit_updaterepeat_source", "source": "3dad4ecb-ebab-41ea-9626-03ff7b380c2a-attachment.html", "type": "text/html"}, {"name": "log", "source": "45f0846d-3b45-4861-a943-a3c030c763ed-attachment.txt", "type": "text/plain"}], "start": 1756798832896, "stop": 1756798864102, "uuid": "7404dff2-e51f-4aed-9c5a-89cfd3d2be3b", "historyId": "23c1b2cb996026bc5827ea68b20b0e64", "testCaseId": "23c1b2cb996026bc5827ea68b20b0e64", "fullName": "Tests.test_system.test_planUnit.TestPlanUnitPage#test_planUnit_updaterepeat", "labels": [{"name": "feature", "value": "计划单元页用例"}, {"name": "story", "value": "修改重复命名，不允许修改"}, {"name": "tag", "value": "run(order=204)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_planUnit"}, {"name": "subSuite", "value": "TestPlanUnitPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "23416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_planUnit"}]}