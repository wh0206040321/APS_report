{"name": "test_unit_download1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[@class=\"el-message-box__btns\"]/button[2]", "trace": "self = <Pages.systemPage.planUnit_page.PlanUnitPage object at 0x0000018C0437B5E0>\nby_or_element = 'xpath'\nvalue = '//div[@class=\"el-message-box__btns\"]/button[2]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cd3285363fe3d6c50355f8d2ef6b7195\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000018C0445D3F0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6d59d6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6d59d6fc0+79056]\nE       \t(No symbol) [0x0x7ff6d5769dda]\nE       \t(No symbol) [0x0x7ff6d57c02ea]\nE       \t(No symbol) [0x0x7ff6d57c059c]\nE       \t(No symbol) [0x0x7ff6d5813f37]\nE       \t(No symbol) [0x0x7ff6d57e86af]\nE       \t(No symbol) [0x0x7ff6d5810dbe]\nE       \t(No symbol) [0x0x7ff6d57e8443]\nE       \t(No symbol) [0x0x7ff6d57b1311]\nE       \t(No symbol) [0x0x7ff6d57b20a3]\nE       \tGetHandleVerifier [0x0x7ff6d5c8e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6d5c88993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6d5ca6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6d59f16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6d59f96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6d59dfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6d59dfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6d59c64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff835d07374+20]\nE       \tRtlUserThreadStart [0x0x7ff836dfcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_planUnit.TestPlanUnitPage object at 0x0000018C0437B250>\nlogin_to_planUnit = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cd3285363fe3d6c50355f8d2ef6b7195\")>\n\n    @allure.story(\"下载成功\")\n    # @pytest.mark.run(order=1)\n    def test_unit_download1(self, login_to_planUnit):\n        driver = login_to_planUnit  # WebDriver 实例\n        unit = PlanUnitPage(driver)  # 用 driver 初始化 PlanUnitPage\n        name = \"1测试A\"\n        unit.select_input(name)\n        unit.click_button(f'//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"{name}\"]')\n        # 1. 准备上传文件路径\n        upload_file = os.path.abspath(f\"downloads/{name}.km\")  # 确保文件存在\n        assert os.path.exists(upload_file), \"上传文件不存在\"\n    \n        # 2. 定位上传控件并执行上传\n        unit.upload_file(upload_file)\n>       unit.click_button('//div[@class=\"el-message-box__btns\"]/button[2]')\n\ntest_planUnit.py:741: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\planUnit_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.planUnit_page.PlanUnitPage object at 0x0000018C0437B5E0>\nby_or_element = 'xpath'\nvalue = '//div[@class=\"el-message-box__btns\"]/button[2]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[@class=\"el-message-box__btns\"]/button[2]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_unit_download1_failure", "source": "dfb8c10c-b006-40d1-9a48-5309a81488d5-attachment.png", "type": "image/png"}, {"name": "test_unit_download1_source", "source": "9b720a86-14d4-46de-9f54-641525521c28-attachment.html", "type": "text/html"}, {"name": "log", "source": "63a3dffb-f23b-4640-a75d-642a8145240e-attachment.txt", "type": "text/plain"}], "start": 1756811418794, "stop": 1756811430406, "uuid": "3d34b769-45a1-4d88-bd95-5badbbefdf69", "historyId": "855b46fcf189e3f16e943e351f9b206e", "testCaseId": "855b46fcf189e3f16e943e351f9b206e", "fullName": "Tests.test_system.test_planUnit.TestPlanUnitPage#test_unit_download1", "labels": [{"name": "feature", "value": "计划单元页用例"}, {"name": "story", "value": "下载成功"}, {"name": "tag", "value": "run(order=204)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_planUnit"}, {"name": "subSuite", "value": "TestPlanUnitPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "29076-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_planUnit"}]}