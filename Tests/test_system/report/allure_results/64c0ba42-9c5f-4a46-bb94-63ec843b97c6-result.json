{"name": "test_role_success", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"刷新\"]", "trace": "self = <Pages.systemPage.role_page.RolePage object at 0x00000206598606D0>\nby_or_element = 'xpath', value = '//li[text()=\"刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"942a4598d3341baff9e970ccbfca27da\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000206597D4E50>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_role.TestRolePage object at 0x000002065980B940>\nlogin_to_role = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"942a4598d3341baff9e970ccbfca27da\")>\n\n    @allure.story(\"添加角色成功\")\n    # @pytest.mark.run(order=1)\n    def test_role_success(self, login_to_role):\n        driver = login_to_role  # WebDriver 实例\n        role = RolePage(driver)  # 用 driver 初始化 PlanUnitPage\n        name = \"1测试角色代码1\"\n        module = \"1测试A\"\n        role.add_plan_unit(name, module)\n        role.click_all_button(\"保存\")\n>       role.right_refresh()\n\ntest_role.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\role_page.py:57: in right_refresh\n    self.click_button('//li[text()=\"刷新\"]')\n..\\..\\Pages\\systemPage\\role_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.role_page.RolePage object at 0x00000206598606D0>\nby_or_element = 'xpath', value = '//li[text()=\"刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"刷新\"]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_role_success_failure", "source": "ce6e2bbf-e8c4-40e6-b245-616bf1b0b1fb-attachment.png", "type": "image/png"}, {"name": "test_role_success_source", "source": "751bb550-765b-453e-9335-1ee1509d3f36-attachment.html", "type": "text/html"}, {"name": "log", "source": "c74eb560-4109-4033-9314-c8f06534f1b8-attachment.txt", "type": "text/plain"}], "start": 1756889975969, "stop": 1756889989875, "uuid": "49230446-2a7c-46c7-821a-b7015cd15de8", "historyId": "1fecd3db9d42f2800c83829126d8efa0", "testCaseId": "1fecd3db9d42f2800c83829126d8efa0", "fullName": "Tests.test_system.test_role.TestRolePage#test_role_success", "labels": [{"name": "story", "value": "添加角色成功"}, {"name": "feature", "value": "角色管理页用例"}, {"name": "tag", "value": "run(order=205)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_role"}, {"name": "subSuite", "value": "TestRolePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "2260-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_role"}]}