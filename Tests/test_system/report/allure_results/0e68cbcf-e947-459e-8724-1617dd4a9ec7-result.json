{"name": "test_unit_download", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff726176f65+78965]\n\tGetHandleVerifier [0x0x7ff726176fc0+79056]\n\t(No symbol) [0x0x7ff725f09dda]\n\t(No symbol) [0x0x7ff725f602ea]\n\t(No symbol) [0x0x7ff725f6059c]\n\t(No symbol) [0x0x7ff725fb3f37]\n\t(No symbol) [0x0x7ff725f886af]\n\t(No symbol) [0x0x7ff725fb0dbe]\n\t(No symbol) [0x0x7ff725f88443]\n\t(No symbol) [0x0x7ff725f51311]\n\t(No symbol) [0x0x7ff725f520a3]\n\tGetHandleVerifier [0x0x7ff72642e26d+2926461]\n\tGetHandleVerifier [0x0x7ff726428993+2903715]\n\tGetHandleVerifier [0x0x7ff726446aed+3026941]\n\tGetHandleVerifier [0x0x7ff7261916fe+187406]\n\tGetHandleVerifier [0x0x7ff7261996ef+220159]\n\tGetHandleVerifier [0x0x7ff72617faf4+114692]\n\tGetHandleVerifier [0x0x7ff72617fca9+115129]\n\tGetHandleVerifier [0x0x7ff7261664d8+10728]\n\tBaseThreadInitThunk [0x0x7ff9d9c27374+20]\n\tRtlUserThreadStart [0x0x7ff9db07cc91+33]", "trace": "@pytest.fixture  # (scope=\"class\")这个参数表示整个测试类共用同一个浏览器，默认一个用例执行一次\n    def login_to_planUnit():\n        \"\"\"初始化并返回 driver\"\"\"\n        download_path = os.path.abspath(\"downloads\")\n        os.makedirs(download_path, exist_ok=True)\n        options = Options()\n        options.add_argument(\"--allow-running-insecure-content\")\n        options.add_experimental_option(\"prefs\", {\n            \"download.prompt_for_download\": False,\n            \"download.default_directory\": download_path,\n            \"safebrowsing.enabled\": False\n        })\n        date_driver = DateDriver()\n        driver = create_driver(date_driver.driver_path, options)\n        driver.implicitly_wait(3)\n    \n        # 初始化登录页面\n        page = LoginPage(driver)  # 初始化登录页面\n        url = date_driver.url\n        print(f\"[INFO] 正在导航到 URL: {url}\")\n        # 尝试访问 URL，捕获连接错误\n        for attempt in range(2):\n            try:\n                page.navigate_to(url)\n                break\n            except WebDriverException as e:\n                capture_screenshot(driver, f\"login_fail_{attempt + 1}\")\n                logging.warning(f\"第 {attempt + 1} 次连接失败: {e}\")\n                driver.refresh()\n                sleep(date_driver.URL_RETRY_WAIT)\n        else:\n            logging.error(\"连接失败多次，测试中止\")\n            safe_quit(driver)\n            raise RuntimeError(\"无法连接到登录页面\")\n    \n>       page.login(date_driver.username, date_driver.password, date_driver.planning)\n\ntest_planUnit.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\itemsPage\\login_page.py:32: in login\n    self.enter_username(username)\n..\\..\\Pages\\itemsPage\\login_page.py:16: in enter_username\n    self.enter_text(By.XPATH, '//input[@placeholder=\"请输入账户\"]', username)\n..\\..\\Pages\\base_page.py:66: in enter_text\n    element = WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e8a164ccecd6dfecfb7e06656748f3f9\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002134571C670>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff726176f65+78965]\nE       \tGetHandleVerifier [0x0x7ff726176fc0+79056]\nE       \t(No symbol) [0x0x7ff725f09dda]\nE       \t(No symbol) [0x0x7ff725f602ea]\nE       \t(No symbol) [0x0x7ff725f6059c]\nE       \t(No symbol) [0x0x7ff725fb3f37]\nE       \t(No symbol) [0x0x7ff725f886af]\nE       \t(No symbol) [0x0x7ff725fb0dbe]\nE       \t(No symbol) [0x0x7ff725f88443]\nE       \t(No symbol) [0x0x7ff725f51311]\nE       \t(No symbol) [0x0x7ff725f520a3]\nE       \tGetHandleVerifier [0x0x7ff72642e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff726428993+2903715]\nE       \tGetHandleVerifier [0x0x7ff726446aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7261916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7261996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff72617faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff72617fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7261664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff9d9c27374+20]\nE       \tRtlUserThreadStart [0x0x7ff9db07cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "start": 1757073410870, "stop": 1757073410870, "uuid": "98d3bad4-3301-4ca8-bae0-6bae49ed64ea", "historyId": "193059d416d23c7f644d0cb59d7d3e64", "testCaseId": "193059d416d23c7f644d0cb59d7d3e64", "fullName": "Tests.test_system.test_planUnit.TestPlanUnitPage#test_unit_download", "labels": [{"name": "feature", "value": "计划单元页用例"}, {"name": "story", "value": "下载成功"}, {"name": "tag", "value": "run(order=204)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_planUnit"}, {"name": "subSuite", "value": "TestPlanUnitPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "25192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_planUnit"}]}