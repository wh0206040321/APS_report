{"name": "test_imp_copy4", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff75a1e6f65+78965]\n\tGetHandleVerifier [0x0x7ff75a1e6fc0+79056]\n\t(No symbol) [0x0x7ff759f79dda]\n\t(No symbol) [0x0x7ff759fd02ea]\n\t(No symbol) [0x0x7ff759fd059c]\n\t(No symbol) [0x0x7ff75a023f37]\n\t(No symbol) [0x0x7ff759ff86af]\n\t(No symbol) [0x0x7ff75a020dbe]\n\t(No symbol) [0x0x7ff759ff8443]\n\t(No symbol) [0x0x7ff759fc1311]\n\t(No symbol) [0x0x7ff759fc20a3]\n\tGetHandleVerifier [0x0x7ff75a49e26d+2926461]\n\tGetHandleVerifier [0x0x7ff75a498993+2903715]\n\tGetHandleVerifier [0x0x7ff75a4b6aed+3026941]\n\tGetHandleVerifier [0x0x7ff75a2016fe+187406]\n\tGetHandleVerifier [0x0x7ff75a2096ef+220159]\n\tGetHandleVerifier [0x0x7ff75a1efaf4+114692]\n\tGetHandleVerifier [0x0x7ff75a1efca9+115129]\n\tGetHandleVerifier [0x0x7ff75a1d64d8+10728]\n\tBaseThreadInitThunk [0x0x7ff8bb9b7374+20]\n\tRtlUserThreadStart [0x0x7ff8bbbdcc91+33]", "trace": "self = <test_system.test_imp.TestImpPage object at 0x0000021F9703C310>\nlogin_to_imp = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"98e4d013691f2aa5b3ed277c9d41bd70\")>\n\n    @allure.story(\"输入重复名称，不允许保存\")\n    # @pytest.mark.run(order=1)\n    def test_imp_copy4(self, login_to_imp):\n        driver = login_to_imp  # WebDriver 实例\n        imp = ImpPage(driver)  # 用 driver 初始化 ImpPage\n        name = \"1导入设置方案\"\n        copyname = '1同步导入1'\n        imp.copy_(name=name, copy_name=name)\n>       message = imp.get_find_message()\n\ntest_imp.py:255: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\imp_page.py:34: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"98e4d013691f2aa5b3ed277c9d41bd70\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000021F96F14DC0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff75a1e6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff75a1e6fc0+79056]\nE       \t(No symbol) [0x0x7ff759f79dda]\nE       \t(No symbol) [0x0x7ff759fd02ea]\nE       \t(No symbol) [0x0x7ff759fd059c]\nE       \t(No symbol) [0x0x7ff75a023f37]\nE       \t(No symbol) [0x0x7ff759ff86af]\nE       \t(No symbol) [0x0x7ff75a020dbe]\nE       \t(No symbol) [0x0x7ff759ff8443]\nE       \t(No symbol) [0x0x7ff759fc1311]\nE       \t(No symbol) [0x0x7ff759fc20a3]\nE       \tGetHandleVerifier [0x0x7ff75a49e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff75a498993+2903715]\nE       \tGetHandleVerifier [0x0x7ff75a4b6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff75a2016fe+187406]\nE       \tGetHandleVerifier [0x0x7ff75a2096ef+220159]\nE       \tGetHandleVerifier [0x0x7ff75a1efaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff75a1efca9+115129]\nE       \tGetHandleVerifier [0x0x7ff75a1d64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff8bb9b7374+20]\nE       \tRtlUserThreadStart [0x0x7ff8bbbdcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_imp_copy4_failure", "source": "833e158f-8971-44c0-8939-77ab777ca323-attachment.png", "type": "image/png"}, {"name": "test_imp_copy4_source", "source": "c313365b-9160-4e5a-973e-a8620cf550a3-attachment.html", "type": "text/html"}, {"name": "log", "source": "5ac1db9a-f20b-4026-ab8c-f6551754f676-attachment.txt", "type": "text/plain"}], "start": 1757670198271, "stop": 1757670210893, "uuid": "eeb9410c-faed-4502-92ec-592d6d0290cc", "historyId": "2a5b7b84ec07b7c284e775e5899446fb", "testCaseId": "2a5b7b84ec07b7c284e775e5899446fb", "fullName": "Tests.test_system.test_imp.TestImpPage#test_imp_copy4", "labels": [{"name": "story", "value": "输入重复名称，不允许保存"}, {"name": "feature", "value": "导入设置页用例"}, {"name": "tag", "value": "run(order=207)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_imp"}, {"name": "subSuite", "value": "TestImpPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "25480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_imp"}]}