{"name": "test_plan_del", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff660766f65+78965]\n\tGetHandleVerifier [0x0x7ff660766fc0+79056]\n\t(No symbol) [0x0x7ff6604f9dda]\n\t(No symbol) [0x0x7ff6605502ea]\n\t(No symbol) [0x0x7ff66055059c]\n\t(No symbol) [0x0x7ff6605a3f37]\n\t(No symbol) [0x0x7ff6605786af]\n\t(No symbol) [0x0x7ff6605a0dbe]\n\t(No symbol) [0x0x7ff660578443]\n\t(No symbol) [0x0x7ff660541311]\n\t(No symbol) [0x0x7ff6605420a3]\n\tGetHandleVerifier [0x0x7ff660a1e26d+2926461]\n\tGetHandleVerifier [0x0x7ff660a18993+2903715]\n\tGetHandleVerifier [0x0x7ff660a36aed+3026941]\n\tGetHandleVerifier [0x0x7ff6607816fe+187406]\n\tGetHandleVerifier [0x0x7ff6607896ef+220159]\n\tGetHandleVerifier [0x0x7ff66076faf4+114692]\n\tGetHandleVerifier [0x0x7ff66076fca9+115129]\n\tGetHandleVerifier [0x0x7ff6607564d8+10728]\n\tBaseThreadInitThunk [0x0x7ff8bb9b7374+20]\n\tRtlUserThreadStart [0x0x7ff8bbbdcc91+33]", "trace": "self = <test_system.test_userRole.TestUserRolePage object at 0x000001F20C79B370>\nlogin_to_userrole = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6d6f9c75e6743d1de6495750c6ee05c7\")>\n\n    @allure.story(\"删除计划单元，删除布局成功\")\n    # @pytest.mark.run(order=1)\n    def test_plan_del(self, login_to_userrole):\n        driver = login_to_userrole  # WebDriver 实例\n        plan = PlanUnitPage(driver)  # 用 driver 初始化 UserRolePage\n        plan.click_button('(//span[text()=\"计划单元\"])[1]')\n        layout = \"测试布局A\"\n    \n        value = ['1测试计划单元CTB', '1测试计划单元小日程',\n                 '111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111']\n        plan.del_all(value)\n        data = [\n            driver.find_elements(By.XPATH, f'//tr[./td[2][.//span[text()=\"{v}\"]]]/td[2]')\n            for v in value[:3]\n        ]\n>       plan.del_layout(layout)\n\ntest_userRole.py:975: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\planUnit_page.py:137: in del_layout\n    target_div = self.get_find_element_xpath(\n..\\..\\Pages\\systemPage\\planUnit_page.py:29: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\n..\\..\\Pages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6d6f9c75e6743d1de6495750c6ee05c7\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001F20C7DB1C0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff660766f65+78965]\nE       \tGetHandleVerifier [0x0x7ff660766fc0+79056]\nE       \t(No symbol) [0x0x7ff6604f9dda]\nE       \t(No symbol) [0x0x7ff6605502ea]\nE       \t(No symbol) [0x0x7ff66055059c]\nE       \t(No symbol) [0x0x7ff6605a3f37]\nE       \t(No symbol) [0x0x7ff6605786af]\nE       \t(No symbol) [0x0x7ff6605a0dbe]\nE       \t(No symbol) [0x0x7ff660578443]\nE       \t(No symbol) [0x0x7ff660541311]\nE       \t(No symbol) [0x0x7ff6605420a3]\nE       \tGetHandleVerifier [0x0x7ff660a1e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff660a18993+2903715]\nE       \tGetHandleVerifier [0x0x7ff660a36aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6607816fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6607896ef+220159]\nE       \tGetHandleVerifier [0x0x7ff66076faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff66076fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6607564d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff8bb9b7374+20]\nE       \tRtlUserThreadStart [0x0x7ff8bbbdcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_plan_del_failure", "source": "4fdc3550-36e7-461c-9a68-b9c4ce5d2813-attachment.png", "type": "image/png"}, {"name": "test_plan_del_source", "source": "03728ca4-e507-41e5-8c42-fca0a6808dd7-attachment.html", "type": "text/html"}, {"name": "log", "source": "740605b5-db26-4adb-850f-7c8d095697e9-attachment.txt", "type": "text/plain"}], "start": 1757587588801, "stop": 1757587638992, "uuid": "a5eb2886-b0f0-4dff-ab28-c2caed3c08fc", "historyId": "d507f44f2cfafcb1edd5883678c8477d", "testCaseId": "d507f44f2cfafcb1edd5883678c8477d", "fullName": "Tests.test_system.test_userRole.TestUserRolePage#test_plan_del", "labels": [{"name": "feature", "value": "用户权限管理页用例"}, {"name": "story", "value": "删除计划单元，删除布局成功"}, {"name": "tag", "value": "run(order=206)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_userRole"}, {"name": "subSuite", "value": "TestUserRolePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "26448-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_userRole"}]}