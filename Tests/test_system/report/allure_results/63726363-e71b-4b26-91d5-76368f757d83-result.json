{"name": "test_environment_all_checkbox2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"刷新\"]", "trace": "self = <Pages.systemPage.environment_page.EnvironmentPage object at 0x0000028E4FAA6A40>\nby_or_element = 'xpath', value = '//li[text()=\"刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e55ec18ef03ac22574dfaee9743ea7a4\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000028E4FA363B0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff729e66f65+78965]\nE       \tGetHandleVerifier [0x0x7ff729e66fc0+79056]\nE       \t(No symbol) [0x0x7ff729bf9dda]\nE       \t(No symbol) [0x0x7ff729c502ea]\nE       \t(No symbol) [0x0x7ff729c5059c]\nE       \t(No symbol) [0x0x7ff729ca3f37]\nE       \t(No symbol) [0x0x7ff729c786af]\nE       \t(No symbol) [0x0x7ff729ca0dbe]\nE       \t(No symbol) [0x0x7ff729c78443]\nE       \t(No symbol) [0x0x7ff729c41311]\nE       \t(No symbol) [0x0x7ff729c420a3]\nE       \tGetHandleVerifier [0x0x7ff72a11e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff72a118993+2903715]\nE       \tGetHandleVerifier [0x0x7ff72a136aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff729e816fe+187406]\nE       \tGetHandleVerifier [0x0x7ff729e896ef+220159]\nE       \tGetHandleVerifier [0x0x7ff729e6faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff729e6fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff729e564d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe68f47374+20]\nE       \tRtlUserThreadStart [0x0x7ffe691dcc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_environment.TestEnvironmentPage object at 0x0000028E4FAA4550>\nlogin_to_environment = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e55ec18ef03ac22574dfaee9743ea7a4\")>\n\n    @allure.story(\"全体页面-所有复选框都勾选，并且保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_environment_all_checkbox2(self, login_to_environment):\n        driver = login_to_environment  # WebDriver 实例\n        environment = EnvironmentPage(driver)  # 用 driver 初始化 EnvironmentPage\n        xpth_list = [\n            '//div[label[text()=\"品目资源时序:\"]]/div//input',\n            '//div[label[text()=\"物料同步检查:\"]]/div//input',\n            '//div[label[text()=\"资源同步检查:\"]]/div//input',\n            '//div[label[text()=\"订单同步检查:\"]]/div//input',\n            '//div[label[text()=\"变更使用时间:\"]]/div//input',\n            '//div[label[text()=\"内部函数基于日期和日境界时刻进行计算:\"]]/div//input',\n            '//div[label[text()=\"工作表移动后全固定:\"]]/div//input',\n        ]\n        environment.update_checkbox(xpth_list, new_value=True)\n        before_value = environment.get_checkbox_value(xpth_list)\n        environment.click_save_button()\n        message = environment.get_find_message()\n>       environment.right_refresh()\n\ntest_environment.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\environment_page.py:62: in right_refresh\n    self.click_button('//li[text()=\"刷新\"]')\n..\\..\\Pages\\systemPage\\environment_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.environment_page.EnvironmentPage object at 0x0000028E4FAA6A40>\nby_or_element = 'xpath', value = '//li[text()=\"刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"刷新\"]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_environment_all_checkbox2_failure", "source": "937ac173-edfa-4edf-bdaf-7626e6f0c909-attachment.png", "type": "image/png"}, {"name": "test_environment_all_checkbox2_source", "source": "fc8691da-d01b-4a68-b801-1cf015ef20b2-attachment.html", "type": "text/html"}, {"name": "log", "source": "3fc0ed75-23c8-4520-a082-42ed73882a6c-attachment.txt", "type": "text/plain"}], "start": 1760345209621, "stop": 1760345224908, "uuid": "0c4820c1-7966-4804-ab5a-5e9f2c497d2c", "historyId": "ef81fe9c384e2cbc7fd9151cfcb5f595", "testCaseId": "ef81fe9c384e2cbc7fd9151cfcb5f595", "fullName": "Tests.test_system.test_environment.TestEnvironmentPage#test_environment_all_checkbox2", "labels": [{"name": "story", "value": "全体页面-所有复选框都勾选，并且保存成功"}, {"name": "feature", "value": "环境设置页用例"}, {"name": "tag", "value": "run(order=201)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_environment"}, {"name": "subSuite", "value": "TestEnvironmentPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "1728-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_environment"}]}