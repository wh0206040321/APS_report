{"name": "test_language_addsuccess1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6e4aa6f65+78965]\n\tGetHandleVerifier [0x0x7ff6e4aa6fc0+79056]\n\t(No symbol) [0x0x7ff6e4839dda]\n\t(No symbol) [0x0x7ff6e48902ea]\n\t(No symbol) [0x0x7ff6e489059c]\n\t(No symbol) [0x0x7ff6e48e3f37]\n\t(No symbol) [0x0x7ff6e48b86af]\n\t(No symbol) [0x0x7ff6e48e0dbe]\n\t(No symbol) [0x0x7ff6e48b8443]\n\t(No symbol) [0x0x7ff6e4881311]\n\t(No symbol) [0x0x7ff6e48820a3]\n\tGetHandleVerifier [0x0x7ff6e4d5e26d+2926461]\n\tGetHandleVerifier [0x0x7ff6e4d58993+2903715]\n\tGetHandleVerifier [0x0x7ff6e4d76aed+3026941]\n\tGetHandleVerifier [0x0x7ff6e4ac16fe+187406]\n\tGetHandleVerifier [0x0x7ff6e4ac96ef+220159]\n\tGetHandleVerifier [0x0x7ff6e4aafaf4+114692]\n\tGetHandleVerifier [0x0x7ff6e4aafca9+115129]\n\tGetHandleVerifier [0x0x7ff6e4a964d8+10728]\n\tBaseThreadInitThunk [0x0x7ffee1537374+20]\n\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]", "trace": "self = <test_system.test_language.TestSLanguagePage object at 0x0000018DE295E2C0>\nlogin_to_language = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"db1e8b0f59aedd741acd488ccaf7cf35\")>\n\n    @allure.story(\"添加测试数据多语言成功\")\n    # @pytest.mark.run(order=1)\n    def test_language_addsuccess1(self, login_to_language):\n        driver = login_to_language  # WebDriver 实例\n        language = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n        add = AddsPages(driver)\n        name = 'Akey1'\n        language.click_all_button(\"新增\")\n        xpath_list = [\n            '//div[@id=\"ngv2ptwf-g6i7\"]//input',\n            '//div[@id=\"407yfa73-d3cx\"]//input',\n            '//div[@id=\"vr0fnkfs-s95j\"]//input',\n            '//div[@id=\"fhxti76o-86e4\"]//input',\n        ]\n        add.batch_modify_input(xpath_list[:4], name)\n        language.click_confirm()\n>       message = language.get_find_message()\n\ntest_language.py:209: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\expression_page.py:35: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"db1e8b0f59aedd741acd488ccaf7cf35\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000018DE273D2D0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6e4aa6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6e4aa6fc0+79056]\nE       \t(No symbol) [0x0x7ff6e4839dda]\nE       \t(No symbol) [0x0x7ff6e48902ea]\nE       \t(No symbol) [0x0x7ff6e489059c]\nE       \t(No symbol) [0x0x7ff6e48e3f37]\nE       \t(No symbol) [0x0x7ff6e48b86af]\nE       \t(No symbol) [0x0x7ff6e48e0dbe]\nE       \t(No symbol) [0x0x7ff6e48b8443]\nE       \t(No symbol) [0x0x7ff6e4881311]\nE       \t(No symbol) [0x0x7ff6e48820a3]\nE       \tGetHandleVerifier [0x0x7ff6e4d5e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6e4d58993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6e4d76aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6e4ac16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6e4ac96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6e4aafaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6e4aafca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6e4a964d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_language_addsuccess1_failure", "source": "0116a934-e164-47e5-af1c-1b2d39dcf1f1-attachment.png", "type": "image/png"}, {"name": "test_language_addsuccess1_source", "source": "2b57f4ff-d2d6-4505-ad91-34f72bb99112-attachment.html", "type": "text/html"}, {"name": "log", "source": "8efaf52f-cdb4-4763-bd6c-120d8ac675dc-attachment.txt", "type": "text/plain"}], "start": 1761297204661, "stop": 1761297219657, "uuid": "a9817f8e-221b-45ee-bb5f-fd2532951d0c", "historyId": "51f9079eb81cc31c8983e2ce41bc53dc", "testCaseId": "51f9079eb81cc31c8983e2ce41bc53dc", "fullName": "Tests.test_system.test_language.TestSLanguagePage#test_language_addsuccess1", "labels": [{"name": "feature", "value": "多语言资源页用例"}, {"name": "story", "value": "添加测试数据多语言成功"}, {"name": "tag", "value": "run(order=216)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_language"}, {"name": "subSuite", "value": "TestSLanguagePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "10560-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_language"}]}