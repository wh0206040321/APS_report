{"name": "test_psi_addfail1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //span[text()=\"增加\"]", "trace": "self = <Pages.systemPage.psi_page.PsiPage object at 0x000001878EF46500>\nby_or_element = 'xpath', value = '//span[text()=\"增加\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cbadd521eabf21062dd222cbfa5ec3e3\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001878EF2EC20>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff699f36f65+78965]\nE       \tGetHandleVerifier [0x0x7ff699f36fc0+79056]\nE       \t(No symbol) [0x0x7ff699cc9dda]\nE       \t(No symbol) [0x0x7ff699d202ea]\nE       \t(No symbol) [0x0x7ff699d2059c]\nE       \t(No symbol) [0x0x7ff699d73f37]\nE       \t(No symbol) [0x0x7ff699d486af]\nE       \t(No symbol) [0x0x7ff699d70dbe]\nE       \t(No symbol) [0x0x7ff699d48443]\nE       \t(No symbol) [0x0x7ff699d11311]\nE       \t(No symbol) [0x0x7ff699d120a3]\nE       \tGetHandleVerifier [0x0x7ff69a1ee26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff69a1e8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff69a206aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff699f516fe+187406]\nE       \tGetHandleVerifier [0x0x7ff699f596ef+220159]\nE       \tGetHandleVerifier [0x0x7ff699f3faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff699f3fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff699f264d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffff5547374+20]\nE       \tRtlUserThreadStart [0x0x7ffff5f9cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_psi.TestPSIPage object at 0x000001878EE73760>\nlogin_to_psi = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cbadd521eabf21062dd222cbfa5ec3e3\")>\n\n    @allure.story(\"不输入值，点击增加不允许添加\")\n    # @pytest.mark.run(order=1)\n    def test_psi_addfail1(self, login_to_psi):\n        driver = login_to_psi  # WebDriver 实例\n        psi = PsiPage(driver)  # 用 driver 初始化 PsiPage\n>       psi.click_button_psi(\"增加\")\n\ntest_psi.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\systemPage\\psi_page.py:27: in click_button_psi\n    self.click_button(f'//span[text()=\"{name}\"]')\n..\\..\\Pages\\systemPage\\psi_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.psi_page.PsiPage object at 0x000001878EF46500>\nby_or_element = 'xpath', value = '//span[text()=\"增加\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //span[text()=\"增加\"]\n\n..\\..\\Pages\\base_page.py:50: TimeoutException"}, "attachments": [{"name": "test_psi_addfail1_failure", "source": "0189d4c9-2be2-45fa-b17b-4eb395b63e28-attachment.png", "type": "image/png"}, {"name": "test_psi_addfail1_source", "source": "88e27135-9e2e-4149-a88b-924b2562d245-attachment.html", "type": "text/html"}, {"name": "log", "source": "edd3f7be-13dc-4009-afc4-b13a9d1cd5a3-attachment.txt", "type": "text/plain"}], "start": 1755507600703, "stop": 1755507610828, "uuid": "d0165bfd-63cc-4d65-831d-a9ec678ad8c4", "historyId": "78220388becf7cb7901826fa85487ed4", "testCaseId": "78220388becf7cb7901826fa85487ed4", "fullName": "Tests.test_system.test_psi.TestPSIPage#test_psi_addfail1", "labels": [{"name": "feature", "value": "PSI设置用例"}, {"name": "story", "value": "不输入值，点击增加不允许添加"}, {"name": "tag", "value": "run(order=203)"}, {"name": "parentSuite", "value": "Tests.test_system"}, {"name": "suite", "value": "test_psi"}, {"name": "subSuite", "value": "TestPSIPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "24764-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_system.test_psi"}]}