{"name": "test_personal_openengine1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff64d726f65+78965]\n\tGetHandleVerifier [0x0x7ff64d726fc0+79056]\n\t(No symbol) [0x0x7ff64d4b9dda]\n\t(No symbol) [0x0x7ff64d5102ea]\n\t(No symbol) [0x0x7ff64d51059c]\n\t(No symbol) [0x0x7ff64d563f37]\n\t(No symbol) [0x0x7ff64d5386af]\n\t(No symbol) [0x0x7ff64d560dbe]\n\t(No symbol) [0x0x7ff64d538443]\n\t(No symbol) [0x0x7ff64d501311]\n\t(No symbol) [0x0x7ff64d5020a3]\n\tGetHandleVerifier [0x0x7ff64d9de26d+2926461]\n\tGetHandleVerifier [0x0x7ff64d9d8993+2903715]\n\tGetHandleVerifier [0x0x7ff64d9f6aed+3026941]\n\tGetHandleVerifier [0x0x7ff64d7416fe+187406]\n\tGetHandleVerifier [0x0x7ff64d7496ef+220159]\n\tGetHandleVerifier [0x0x7ff64d72faf4+114692]\n\tGetHandleVerifier [0x0x7ff64d72fca9+115129]\n\tGetHandleVerifier [0x0x7ff64d7164d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\n\tRtlUserThreadStart [0x0x7ffcb055cc91+33]", "trace": "self = <test_item.test_personal.TestPersonalPage object at 0x000002AB0C5794B0>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0d002ad955178b3a9ba7b338032f533\")>\n\n    @allure.story(\"打开引擎为web服务\")\n    # @pytest.mark.run(order=1)\n    def test_personal_openengine1(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        wait = WebDriverWait(driver, 360)\n    \n        # 打开设置界面\n        personal.click_button('//div[@class=\"flex-alignItems-center\"]')\n        personal.click_button('//div[text()=\" 个人设置 \"]')\n    \n        personal.click_button('//p[text()=\" 本地引擎打开方式: \"]/following-sibling::div//i')\n        personal.click_button('//li[text()=\"web服务\"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n    \n        personal.go_engine_page(name='web')\n        sleep(2)\n        ele = driver.find_elements(By.XPATH, '//span[text()=\" 引擎启动方式:本地 \"]')\n        personal.click_button('//button[@class=\"m-l-10 ivu-btn ivu-btn-primary\"]')\n        # 等待“完成”的文本出现\n>       success_element = wait.until(\n            EC.presence_of_element_located(\n                (By.XPATH, '(//div[@class=\"d-flex\"])[3]/p[text()=\" 完成 \"]')\n            )\n        )\n\ntest_personal.py:387: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e0d002ad955178b3a9ba7b338032f533\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002AB0C4CF2E0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff64d726f65+78965]\nE       \tGetHandleVerifier [0x0x7ff64d726fc0+79056]\nE       \t(No symbol) [0x0x7ff64d4b9dda]\nE       \t(No symbol) [0x0x7ff64d5102ea]\nE       \t(No symbol) [0x0x7ff64d51059c]\nE       \t(No symbol) [0x0x7ff64d563f37]\nE       \t(No symbol) [0x0x7ff64d5386af]\nE       \t(No symbol) [0x0x7ff64d560dbe]\nE       \t(No symbol) [0x0x7ff64d538443]\nE       \t(No symbol) [0x0x7ff64d501311]\nE       \t(No symbol) [0x0x7ff64d5020a3]\nE       \tGetHandleVerifier [0x0x7ff64d9de26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff64d9d8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff64d9f6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff64d7416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff64d7496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff64d72faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff64d72fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff64d7164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffcb055cc91+33]\n\nD:\\Program Files\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "test_personal_openengine1_failure", "source": "104c2fe1-3284-4abd-be35-82a6668133f0-attachment.png", "type": "image/png"}, {"name": "test_personal_openengine1_source", "source": "39bb79c8-1856-4340-9995-8f6e32b3034d-attachment.html", "type": "text/html"}, {"name": "log", "source": "78e5185d-ee03-4acf-9221-c937b8e03348-attachment.txt", "type": "text/plain"}], "start": 1752566597122, "stop": 1752566666996, "uuid": "30944f40-ec95-46de-969d-b62cabb490a7", "historyId": "758be9d2dcf6a5f37343b72c0683484b", "testCaseId": "758be9d2dcf6a5f37343b72c0683484b", "fullName": "Tests.test_item.test_personal.TestPersonalPage#test_personal_openengine1", "labels": [{"name": "feature", "value": "个人设置测试用例"}, {"name": "story", "value": "打开引擎为web服务"}, {"name": "tag", "value": "run(order=27)"}, {"name": "parentSuite", "value": "Tests.test_item"}, {"name": "suite", "value": "test_personal"}, {"name": "subSuite", "value": "TestPersonalPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "20688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_item.test_personal"}]}