{"name": "test_coverage_selectcodesuccess", "status": "failed", "statusDetails": {"message": "AssertionError: assert '11' == 'A'\n  \n  \u001b[0m\u001b[91m- A\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  \u001b[92m+ 11\u001b[39;49;00m\u001b[90m\u001b[39;49;00m", "trace": "self = <test_item.test_coverage.TestCoveragePage object at 0x0000027583E78370>\nlogin_to_coverage = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a899f97838a53a82a125d1a14e3db2d9\")>\n\n    @allure.story(\"查询资源成功\")\n    # @pytest.mark.run(order=1)\n    def test_coverage_selectcodesuccess(self, login_to_coverage):\n        driver = login_to_coverage  # WebDriver 实例\n        coverage = Coverage(driver)  # 用 driver 初始化 Coverage\n    \n        resource = coverage.get_find_element_xpath('(//div[@id=\"canvasGird0\"]//table[@class=\"vxe-table--body\"])[1]//tr[2]/td[2]').text\n    \n        # 点击查询\n        coverage.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击覆盖日历代码\n        coverage.click_button('//div[text()=\"资源代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        coverage.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        coverage.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        coverage.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            resource,\n        )\n        sleep(3)\n    \n        # 点击确认\n        coverage.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(2)\n        # 定位第一行\n        coveragecode = coverage.get_find_element_xpath(\n            '(//div[@id=\"canvasGird0\"]//table[@class=\"vxe-table--body\"])[1]//tr[1]/td[2]'\n        ).text\n>       assert coveragecode == resource\nE       AssertionError: assert '11' == 'A'\nE         \nE         \u001b[0m\u001b[91m- A\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         \u001b[92m+ 11\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n\ntest_coverage.py:715: AssertionError"}, "attachments": [{"name": "test_coverage_selectcodesuccess_failure", "source": "ca395189-8d7b-4ceb-9fda-47f8b754e27c-attachment.png", "type": "image/png"}, {"name": "test_coverage_selectcodesuccess_source", "source": "df23ea2f-b3e2-4d13-a80c-c66e0e30b6b2-attachment.html", "type": "text/html"}, {"name": "log", "source": "e7a0c5b1-556c-4788-96bd-c7f423a5ba94-attachment.txt", "type": "text/plain"}], "start": 1752629341061, "stop": 1752629432801, "uuid": "7d761587-cddb-4feb-9eea-342bc5a5b7a2", "historyId": "af007993c3a36ffc42d42b233bbb0b89", "testCaseId": "af007993c3a36ffc42d42b233bbb0b89", "fullName": "Tests.test_item.test_coverage.TestCoveragePage#test_coverage_selectcodesuccess", "labels": [{"name": "story", "value": "查询资源成功"}, {"name": "feature", "value": "覆盖日历表测试用例"}, {"name": "tag", "value": "run(order=10)"}, {"name": "parentSuite", "value": "Tests.test_item"}, {"name": "suite", "value": "test_coverage"}, {"name": "subSuite", "value": "TestCoveragePage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "31724-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_item.test_coverage"}]}