{"name": "test_sched_addrepeatsuccess", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff71c126f65+78965]\n\tGetHandleVerifier [0x0x7ff71c126fc0+79056]\n\t(No symbol) [0x0x7ff71beb9dda]\n\t(No symbol) [0x0x7ff71bf102ea]\n\t(No symbol) [0x0x7ff71bf1059c]\n\t(No symbol) [0x0x7ff71bf63f37]\n\t(No symbol) [0x0x7ff71bf386af]\n\t(No symbol) [0x0x7ff71bf60dbe]\n\t(No symbol) [0x0x7ff71bf38443]\n\t(No symbol) [0x0x7ff71bf01311]\n\t(No symbol) [0x0x7ff71bf020a3]\n\tGetHandleVerifier [0x0x7ff71c3de26d+2926461]\n\tGetHandleVerifier [0x0x7ff71c3d8993+2903715]\n\tGetHandleVerifier [0x0x7ff71c3f6aed+3026941]\n\tGetHandleVerifier [0x0x7ff71c1416fe+187406]\n\tGetHandleVerifier [0x0x7ff71c1496ef+220159]\n\tGetHandleVerifier [0x0x7ff71c12faf4+114692]\n\tGetHandleVerifier [0x0x7ff71c12fca9+115129]\n\tGetHandleVerifier [0x0x7ff71c1164d8+10728]\n\tBaseThreadInitThunk [0x0x7ffd35f37374+20]\n\tRtlUserThreadStart [0x0x7ffd36ddcc91+33]", "trace": "self = <test_qtProgrammeMan.TestSchedPage object at 0x0000017D81052A10>\nlogin_to_sched = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b72876d98e48746aed712a6d235557dd\")>\n\n    @allure.story(\"添加复制方案成功\")\n    # @pytest.mark.run(order=1)\n    def test_sched_addrepeatsuccess(self, login_to_sched):\n        driver = login_to_sched  # WebDriver 实例\n        sched = SchedPage(driver)  # 用 driver 初始化 SchedPage\n    \n        sched.click_add_schedbutton()  # 点击添加方案\n        name = \"22\"\n        sched.enter_texts(\n            '//label[text()=\"名称\"]/following-sibling::div//input', f\"{name}\"\n        )\n    \n        sched.click_button(\n            '//label[text()=\"选择复制的方案\"]/following-sibling::div/div'\n        )  # 点击下拉框\n        sched.click_button('//li[text()=\"测试方案\"]')\n        sched.click_ok_schedbutton()  # 点击确定\n        sched.click_save_button()  # 点击保存\n        sleep(1)\n    \n        element = driver.find_element(\n            By.XPATH, f'//span[text()=\"{name}\"]/parent::span/preceding-sibling::span'\n        )\n        driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n    \n        # 判断下拉框为打开还是关闭\n        sleep(1)\n>       sel = sched.get_find_element_xpath(\n            f'//span[text()=\"{name}\"]/preceding-sibling::span'\n        )\n\ntest_qtProgrammeMan.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\sched_page.py:73: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\n..\\..\\Pages\\base_page.py:24: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b72876d98e48746aed712a6d235557dd\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000017D80B7EE60>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff71c126f65+78965]\nE       \tGetHandleVerifier [0x0x7ff71c126fc0+79056]\nE       \t(No symbol) [0x0x7ff71beb9dda]\nE       \t(No symbol) [0x0x7ff71bf102ea]\nE       \t(No symbol) [0x0x7ff71bf1059c]\nE       \t(No symbol) [0x0x7ff71bf63f37]\nE       \t(No symbol) [0x0x7ff71bf386af]\nE       \t(No symbol) [0x0x7ff71bf60dbe]\nE       \t(No symbol) [0x0x7ff71bf38443]\nE       \t(No symbol) [0x0x7ff71bf01311]\nE       \t(No symbol) [0x0x7ff71bf020a3]\nE       \tGetHandleVerifier [0x0x7ff71c3de26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff71c3d8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff71c3f6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff71c1416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff71c1496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71c12faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71c12fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff71c1164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35f37374+20]\nE       \tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "test_find_element_timeout", "source": "d307b3b3-49f0-4198-ac00-1b839503fcf5-attachment.png", "type": "image/png"}, {"name": "log", "source": "d323aa25-88ea-48a5-b34a-a926e6137d0f-attachment.txt", "type": "text/plain"}], "start": 1753338807999, "stop": 1753338822553, "uuid": "2c737991-2b56-46fd-8974-d89968811285", "historyId": "c556387f23dd737c0eeb24390b99eeb8", "testCaseId": "c556387f23dd737c0eeb24390b99eeb8", "fullName": "Tests.test_material.test_qtProgrammeMan.TestSchedPage#test_sched_addrepeatsuccess", "labels": [{"name": "story", "value": "添加复制方案成功"}, {"name": "feature", "value": "物控方案管理表测试用例"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_qtProgrammeMan"}, {"name": "subSuite", "value": "TestSchedPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "30548-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_qtProgrammeMan"}]}