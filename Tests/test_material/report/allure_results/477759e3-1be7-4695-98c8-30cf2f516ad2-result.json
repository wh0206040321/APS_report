{"name": "test_item_selectcodesuccess", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('aaa' == '1测试A'\n  \n  \u001b[0m\u001b[91m- 1测试A\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  \u001b[92m+ aaa\u001b[39;49;00m\u001b[90m\u001b[39;49;00m)", "trace": "self = <test_warehouseLocation.TestItemPage object at 0x0000024A1639E230>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"25d4706f0f7acc9b1aaedfe7ea23b58d\")>\n\n    @allure.story(\"查询工厂代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectcodesuccess(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击工厂代码\n        item.click_button('//div[text()=\"工厂代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"1测试A\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        # 定位第一行是否为产品A\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        itemcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert itemcode == \"1测试A\" and len(itemcode2) == 0\nE       AssertionError: assert ('aaa' == '1测试A'\nE         \nE         \u001b[0m\u001b[91m- 1测试A\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         \u001b[92m+ aaa\u001b[39;49;00m\u001b[90m\u001b[39;49;00m)\n\ntest_warehouseLocation.py:421: AssertionError"}, "attachments": [{"name": "test_item_selectcodesuccess_failure", "source": "6f5925a4-a6a2-4642-8e52-12726164e843-attachment.png", "type": "image/png"}, {"name": "test_item_selectcodesuccess_source", "source": "88ecc6ee-8e06-40d3-887b-089b4d5d93ca-attachment.html", "type": "text/html"}, {"name": "log", "source": "819a7f5f-8750-40b5-88c5-8d92f1bda614-attachment.txt", "type": "text/plain"}], "start": 1753155480491, "stop": 1753155489928, "uuid": "c796cffe-cd6c-4d2b-9237-ba105f69980f", "historyId": "ed41759b7135a8f010246cdbe6473c2b", "testCaseId": "ed41759b7135a8f010246cdbe6473c2b", "fullName": "Tests.test_material.test_warehouseLocation.TestItemPage#test_item_selectcodesuccess", "labels": [{"name": "feature", "value": "仓库库位测试用例"}, {"name": "story", "value": "查询工厂代码成功"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_warehouseLocation"}, {"name": "subSuite", "value": "TestItemPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "2076-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_warehouseLocation"}]}