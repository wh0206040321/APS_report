{"name": "test_item_editnamesuccess", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //tr[./td[2][.//span[text()=\"111\"]]]/td[2]", "trace": "self = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000026D43362860>\nby_or_element = 'xpath', value = '//tr[./td[2][.//span[text()=\"111\"]]]/td[2]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a41c9a34132d94cf57c9bb849cc0d65f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000026D43169FC0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff765d16f65+78965]\nE       \tGetHandleVerifier [0x0x7ff765d16fc0+79056]\nE       \t(No symbol) [0x0x7ff765aa9dda]\nE       \t(No symbol) [0x0x7ff765b002ea]\nE       \t(No symbol) [0x0x7ff765b0059c]\nE       \t(No symbol) [0x0x7ff765b53f37]\nE       \t(No symbol) [0x0x7ff765b286af]\nE       \t(No symbol) [0x0x7ff765b50dbe]\nE       \t(No symbol) [0x0x7ff765b28443]\nE       \t(No symbol) [0x0x7ff765af1311]\nE       \t(No symbol) [0x0x7ff765af20a3]\nE       \tGetHandleVerifier [0x0x7ff765fce26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff765fc8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff765fe6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff765d316fe+187406]\nE       \tGetHandleVerifier [0x0x7ff765d396ef+220159]\nE       \tGetHandleVerifier [0x0x7ff765d1faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff765d1fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff765d064d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35f37374+20]\nE       \tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_materialVendors.TestItemPage object at 0x0000026D4318E290>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a41c9a34132d94cf57c9bb849cc0d65f\")>\n\n    @allure.story(\"编辑全部选项成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_editnamesuccess(self, login_to_item):\n    \n        # 输入框要修改的值\n        text_str = \"111\"\n        # 日期要修改的值\n        date_str = \"2025/07/17 00:00:00\"\n        # 输入框的xpath\n        input_xpath_list = [\n            \"//div[@id='wxryw4ea-71oi']//input\",\n            \"//div[@id='z99bga8f-59um']//input\",\n            \"//div[@id='b3dmq4at-505f']//input\",\n            \"//div[@id='lpuajgnl-w4bn']//input\",\n            \"//div[@id='tfcztwig-bpyz']//input\",\n            \"//div[@id='pwjnm6g5-r3wi']//input\",\n            \"//div[@id='g05o5ikv-h98g']//input\",\n            \"//div[@id='r05l4zyh-0mkg']//input\",\n            \"//div[@id='vht0i4qg-tohl']//input\",\n            \"//div[@id='q7vbvbvr-m50y']//input\",\n            \"//div[@id='9nja3beq-3vul']//input\",\n            \"//div[@id='qnla7m1x-jp14']//input\",\n            \"//div[@id='98nsjrto-f7v5']//input\",\n            \"//div[@id='muzdhwzt-zk46']//input\",\n            \"//div[@id='h511lvst-ymil']//input\",\n            \"//div[@id='mnr6qddb-byo9']//input\",\n            \"//div[@id='o5t54uds-wpe1']//input\",\n            \"//div[@id='nlaxbubj-sgw3']//input\",\n        ]\n        # 日期的xpath\n        date_xpath_list = [\n            \"//div[@id='mcdabmzy-zwt7']//input\",\n            \"//div[@id='9ypxww95-ui8k']//input\",\n            \"//div[@id='3ilkuaeu-5qs1']//input\",\n            \"//div[@id='a46z78ba-g1le']//input\",\n            \"//div[@id='jwpjthep-ld2y']//input\"\n        ]\n    \n        # 选中工厂代码\n        self.item.click_button('//tr[./td[2][.//span[text()=\"1测试A\"]]]/td[2]')\n        # 点击修改按钮\n        self.item.click_edi_button()\n        sleep(1)\n    \n        # 批量修改输入框\n        self.item.batch_modify_input(input_xpath_list, text_str)\n        # 批量修改日期\n        self.item.batch_modify_input(date_xpath_list, date_str)\n    \n        sleep(1)\n        # 点击确定\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n        # 选中供应商代码\n>       self.item.click_button('//tr[./td[2][.//span[text()=\"111\"]]]/td[2]')\n\ntest_materialVendors.py:322: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\materialPage\\warehouseLocation_page.py:39: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000026D43362860>\nby_or_element = 'xpath', value = '//tr[./td[2][.//span[text()=\"111\"]]]/td[2]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //tr[./td[2][.//span[text()=\"111\"]]]/td[2]\n\n..\\..\\Pages\\base_page.py:48: TimeoutException"}, "attachments": [{"name": "test_click_timeout", "source": "46638e41-5abe-4c50-9d4e-2bf1148f9eb7-attachment.png", "type": "image/png"}, {"name": "log", "source": "40826572-f428-4609-bb0e-489baccdc38e-attachment.txt", "type": "text/plain"}], "start": 1752819956234, "stop": 1752819972319, "uuid": "6c555ba3-aea8-432d-a704-89954633dca0", "historyId": "01ddefeb04f2832dd44d3f67c7e94fba", "testCaseId": "01ddefeb04f2832dd44d3f67c7e94fba", "fullName": "Tests.test_material.test_materialVendors.TestItemPage#test_item_editnamesuccess", "labels": [{"name": "story", "value": "编辑全部选项成功"}, {"name": "feature", "value": "供应商信息测试用例"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_materialVendors"}, {"name": "subSuite", "value": "TestItemPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "24444-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_materialVendors"}]}