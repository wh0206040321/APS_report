{"name": "test_warehouselocation_addfail", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//span[text()=\"用户与物料员\"])[1]", "trace": "self = <Pages.login_page.LoginPage object at 0x000001A31A09CD30>\nby_or_element = 'xpath', value = '(//span[text()=\"用户与物料员\"])[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8a4b7240d6545212315644b7226b174f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001A31AE0BC70>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7946f6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7946f6fc0+79056]\nE       \t(No symbol) [0x0x7ff794489dda]\nE       \t(No symbol) [0x0x7ff7944e02ea]\nE       \t(No symbol) [0x0x7ff7944e059c]\nE       \t(No symbol) [0x0x7ff794533f37]\nE       \t(No symbol) [0x0x7ff7945086af]\nE       \t(No symbol) [0x0x7ff794530dbe]\nE       \t(No symbol) [0x0x7ff794508443]\nE       \t(No symbol) [0x0x7ff7944d1311]\nE       \t(No symbol) [0x0x7ff7944d20a3]\nE       \tGetHandleVerifier [0x0x7ff7949ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7949a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7949c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7947116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7947196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7946ffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7946ffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7946e64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35f37374+20]\nE       \tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture  # (scope=\"class\")这个参数表示整个测试类共用同一个浏览器，默认一个用例执行一次\n    def login_to_item():\n        \"\"\"初始化并返回 driver\"\"\"\n        driver_path = DateDriver().driver_path\n        driver = create_driver(driver_path)\n        driver.implicitly_wait(3)\n    \n        # 初始化登录页面\n        page = LoginPage(driver)  # 初始化登录页面\n        page.navigate_to(DateDriver().url)  # 导航到登录页面\n        page.login(DateDriver().username, DateDriver().password, DateDriver().planning)\n        page.click_button('(//span[text()=\"物控管理\"])[1]')  # 点击计划管理\n        page.click_button('(//span[text()=\"物控基础数据\"])[1]')  # 点击计划基础数据\n>       page.click_button('(//span[text()=\"用户与物料员\"])[1]')  # 点击物品\n\ntest_materialDelUserMap.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\login_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.login_page.LoginPage object at 0x000001A31A09CD30>\nby_or_element = 'xpath', value = '(//span[text()=\"用户与物料员\"])[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//span[text()=\"用户与物料员\"])[1]\n\n..\\..\\Pages\\base_page.py:48: TimeoutException"}, "attachments": [{"name": "log", "source": "7d9794af-c8fc-4c86-8471-2ea46afb0500-attachment.txt", "type": "text/plain"}], "start": 1752826710294, "stop": 1752826710294, "uuid": "95bb6439-b228-4406-92a6-f5e8fc2a2853", "historyId": "fe1632ac99971397dc6834973a6e29f3", "testCaseId": "fe1632ac99971397dc6834973a6e29f3", "fullName": "Tests.test_material.test_materialDelUserMap.TestItemPage#test_warehouselocation_addfail", "labels": [{"name": "story", "value": "添加用户信息 不填写物料员点击确认 不允许提交"}, {"name": "feature", "value": "用户与物料员测试用例"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_materialDelUserMap"}, {"name": "subSuite", "value": "TestItemPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "8732-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_materialDelUserMap"}]}