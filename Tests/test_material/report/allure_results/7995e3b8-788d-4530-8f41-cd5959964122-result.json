{"name": "test_sched_addrepeatsuccess", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()=\"22\"]/preceding-sibling::span\"}\n  (Session info: chrome=138.0.7204.102); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff71c126f65+78965]\n\tGetHandleVerifier [0x0x7ff71c126fc0+79056]\n\t(No symbol) [0x0x7ff71beb9dda]\n\t(No symbol) [0x0x7ff71bf102ea]\n\t(No symbol) [0x0x7ff71bf1059c]\n\t(No symbol) [0x0x7ff71bf63f37]\n\t(No symbol) [0x0x7ff71bf386af]\n\t(No symbol) [0x0x7ff71bf60dbe]\n\t(No symbol) [0x0x7ff71bf38443]\n\t(No symbol) [0x0x7ff71bf01311]\n\t(No symbol) [0x0x7ff71bf020a3]\n\tGetHandleVerifier [0x0x7ff71c3de26d+2926461]\n\tGetHandleVerifier [0x0x7ff71c3d8993+2903715]\n\tGetHandleVerifier [0x0x7ff71c3f6aed+3026941]\n\tGetHandleVerifier [0x0x7ff71c1416fe+187406]\n\tGetHandleVerifier [0x0x7ff71c1496ef+220159]\n\tGetHandleVerifier [0x0x7ff71c12faf4+114692]\n\tGetHandleVerifier [0x0x7ff71c12fca9+115129]\n\tGetHandleVerifier [0x0x7ff71c1164d8+10728]\n\tBaseThreadInitThunk [0x0x7ffd35f37374+20]\n\tRtlUserThreadStart [0x0x7ffd36ddcc91+33]", "trace": "self = <test_qtProgrammeMan.TestSchedPage object at 0x00000246F7D99750>\nlogin_to_sched = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2088db01d4239333db5f244f6ee9ced7\")>\n\n    @allure.story(\"添加复制方案成功\")\n    # @pytest.mark.run(order=1)\n    def test_sched_addrepeatsuccess(self, login_to_sched):\n        driver = login_to_sched  # WebDriver 实例\n        sched = SchedPage(driver)  # 用 driver 初始化 SchedPage\n    \n        sched.click_add_schedbutton()  # 点击添加方案\n        name = \"22\"\n        sched.enter_texts(\n            '//label[text()=\"名称\"]/following-sibling::div//input', f\"{name}\"\n        )\n    \n        sched.click_button(\n            '//label[text()=\"选择复制的方案\"]/following-sibling::div/div'\n        )  # 点击下拉框\n        sched.click_button('//li[text()=\"测试方案\"]')\n        sched.click_ok_schedbutton()  # 点击确定\n        sched.click_save_button()  # 点击保存\n        sleep(1)\n    \n>       element = driver.find_element(\n            By.XPATH, f'//span[text()=\"{name}\"]/preceding-sibling::span'\n        )\n\ntest_qtProgrammeMan.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000246F7D9A560>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff71c1164d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffd35f37374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()=\"22\"]/preceding-sibling::span\"}\nE         (Session info: chrome=138.0.7204.102); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff71c126f65+78965]\nE       \tGetHandleVerifier [0x0x7ff71c126fc0+79056]\nE       \t(No symbol) [0x0x7ff71beb9dda]\nE       \t(No symbol) [0x0x7ff71bf102ea]\nE       \t(No symbol) [0x0x7ff71bf1059c]\nE       \t(No symbol) [0x0x7ff71bf63f37]\nE       \t(No symbol) [0x0x7ff71bf386af]\nE       \t(No symbol) [0x0x7ff71bf60dbe]\nE       \t(No symbol) [0x0x7ff71bf38443]\nE       \t(No symbol) [0x0x7ff71bf01311]\nE       \t(No symbol) [0x0x7ff71bf020a3]\nE       \tGetHandleVerifier [0x0x7ff71c3de26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff71c3d8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff71c3f6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff71c1416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff71c1496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71c12faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71c12fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff71c1164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35f37374+20]\nE       \tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "attachments": [{"name": "test_sched_addrepeatsuccess_failure", "source": "6df6763a-982d-409c-846d-9476d8f50d8f-attachment.png", "type": "image/png"}, {"name": "test_sched_addrepeatsuccess_source", "source": "5060d3db-a8ed-4cd6-94f9-eb796715ffdc-attachment.html", "type": "text/html"}, {"name": "log", "source": "e145470d-1d45-4f8e-911f-7e3e3bd3a380-attachment.txt", "type": "text/plain"}], "start": 1753338472115, "stop": 1753338478690, "uuid": "b7f99e43-2d1e-4773-916a-d3553533b82c", "historyId": "c556387f23dd737c0eeb24390b99eeb8", "testCaseId": "c556387f23dd737c0eeb24390b99eeb8", "fullName": "Tests.test_material.test_qtProgrammeMan.TestSchedPage#test_sched_addrepeatsuccess", "labels": [{"name": "story", "value": "添加复制方案成功"}, {"name": "feature", "value": "物控方案管理表测试用例"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_qtProgrammeMan"}, {"name": "subSuite", "value": "TestSchedPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "28996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_qtProgrammeMan"}]}