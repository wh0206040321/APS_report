{"name": "test_item_addsuccess", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //tr[./td[2][.//span[text()=\"1测试A\"]]]/td[2]", "trace": "self = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001B8A4A42920>\nby_or_element = 'xpath', value = '//tr[./td[2][.//span[text()=\"1测试A\"]]]/td[2]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"20c4200f0954600d8f4f90e6f4fb0cbd\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001B8A47CA8C0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff74c436f65+78965]\nE       \tGetHandleVerifier [0x0x7ff74c436fc0+79056]\nE       \t(No symbol) [0x0x7ff74c1c9dda]\nE       \t(No symbol) [0x0x7ff74c2202ea]\nE       \t(No symbol) [0x0x7ff74c22059c]\nE       \t(No symbol) [0x0x7ff74c273f37]\nE       \t(No symbol) [0x0x7ff74c2486af]\nE       \t(No symbol) [0x0x7ff74c270dbe]\nE       \t(No symbol) [0x0x7ff74c248443]\nE       \t(No symbol) [0x0x7ff74c211311]\nE       \t(No symbol) [0x0x7ff74c2120a3]\nE       \tGetHandleVerifier [0x0x7ff74c6ee26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff74c6e8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff74c706aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff74c4516fe+187406]\nE       \tGetHandleVerifier [0x0x7ff74c4596ef+220159]\nE       \tGetHandleVerifier [0x0x7ff74c43faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff74c43fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff74c4264d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35f37374+20]\nE       \tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_materialSupplys.TestItemPage object at 0x000001B8A49064D0>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"20c4200f0954600d8f4f90e6f4fb0cbd\")>\n\n    @allure.story(\"添加数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_addsuccess(self, login_to_item):\n    \n        self.item.click_add_button()  # 检查点击添加\n        # 输入框要修改的值\n        text_str = \"111\"\n        date_str = \"2025/07/23 00:00:00\"\n        # 新增输入框的xpath\n        input_xpath_list = [\n            \"//div[@id='rta286cd-4col']//input\",\n            \"//div[@id='66fs3ka3-ul4k']//input\",\n            \"//div[@id='xvo43ah2-gj6p']//input\",\n            \"//div[@id='qh1vnphz-0cqy']//input\",\n            \"//div[@id='9tbuqose-wzrv']//input\",\n            \"//div[@id='ddn5nlv3-myjg']//input\"\n        ]\n        # 编辑输入框的xpath（判断是否新增成功用的）\n        input_xpath_list2 = [\n            \"//div[@id='bj6kxqe3-e8d6']//input\",\n            \"//div[@id='66fs3ka3-ul4k']//input\",\n            \"//div[@id='xvo43ah2-gj6p']//input\",\n            \"//div[@id='qh1vnphz-0cqy']//input\",\n            \"//div[@id='9tbuqose-wzrv']//input\",\n            \"//div[@id='ddn5nlv3-myjg']//input\"\n        ]\n    \n        # 新增日期选择框的xpath\n        date_xpath_list = [\"//div[@id='gq66qiep-c94c']//input\"]\n        # 编辑新增日期选择框的xpath\n        date_xpath_list2 = [\"//div[@id='9tbuqose-wzrv']//input\"]\n    \n        sleep(1)\n        # 选中工厂代码\n>       self.item.click_button('//tr[./td[2][.//span[text()=\"1测试A\"]]]/td[2]')\n\ntest_materialSupplys.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\materialPage\\warehouseLocation_page.py:60: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001B8A4A42920>\nby_or_element = 'xpath', value = '//tr[./td[2][.//span[text()=\"1测试A\"]]]/td[2]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //tr[./td[2][.//span[text()=\"1测试A\"]]]/td[2]\n\n..\\..\\Pages\\base_page.py:48: TimeoutException"}, "attachments": [{"name": "test_click_timeout", "source": "5e439a0d-1b2e-46fa-9da9-5c4dfa97b43f-attachment.png", "type": "image/png"}, {"name": "log", "source": "8d8910a7-a048-4dbe-a34d-3509e741a9cf-attachment.txt", "type": "text/plain"}], "start": 1753259239272, "stop": 1753259251935, "uuid": "776bb346-6ef4-4009-bf4f-8d74429465ff", "historyId": "d1ad374491e86af464c30fe1ec383eda", "testCaseId": "d1ad374491e86af464c30fe1ec383eda", "fullName": "Tests.test_material.test_materialSupplys.TestItemPage#test_item_addsuccess", "labels": [{"name": "feature", "value": "物料交付答复测试用例"}, {"name": "story", "value": "添加数据成功"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_materialSupplys"}, {"name": "subSuite", "value": "TestItemPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "20148-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_materialSupplys"}]}