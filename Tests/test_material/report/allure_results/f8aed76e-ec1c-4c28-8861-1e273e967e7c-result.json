{"name": "test_item_editrepeat", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff65c016f65+78965]\n\tGetHandleVerifier [0x0x7ff65c016fc0+79056]\n\t(No symbol) [0x0x7ff65bda9dda]\n\t(No symbol) [0x0x7ff65be002ea]\n\t(No symbol) [0x0x7ff65be0059c]\n\t(No symbol) [0x0x7ff65be53f37]\n\t(No symbol) [0x0x7ff65be286af]\n\t(No symbol) [0x0x7ff65be50dbe]\n\t(No symbol) [0x0x7ff65be28443]\n\t(No symbol) [0x0x7ff65bdf1311]\n\t(No symbol) [0x0x7ff65bdf20a3]\n\tGetHandleVerifier [0x0x7ff65c2ce26d+2926461]\n\tGetHandleVerifier [0x0x7ff65c2c8993+2903715]\n\tGetHandleVerifier [0x0x7ff65c2e6aed+3026941]\n\tGetHandleVerifier [0x0x7ff65c0316fe+187406]\n\tGetHandleVerifier [0x0x7ff65c0396ef+220159]\n\tGetHandleVerifier [0x0x7ff65c01faf4+114692]\n\tGetHandleVerifier [0x0x7ff65c01fca9+115129]\n\tGetHandleVerifier [0x0x7ff65c0064d8+10728]\n\tBaseThreadInitThunk [0x0x7ffd35f37374+20]\n\tRtlUserThreadStart [0x0x7ffd36ddcc91+33]", "trace": "self = <test_materialInventory.TestItemPage object at 0x0000020C55F80DF0>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ca7dab0c07200ea4492b46b1aacf787a\")>\n\n    @allure.story(\"修改物料员代码重复\")\n    # @pytest.mark.run(order=1)\n    def test_item_editrepeat(self, login_to_item):\n    \n        # 选中1测试A工厂代码\n        self.item.click_button('//tr[./td[2][.//span[text()=\"1测试A\"]]]/td[2]')\n        # 点击修改按钮\n        self.item.click_edi_button()\n        # 物料代码等输入111\n        input_xpath_list = [\n            \"//div[@id='p1wga124-jvvf']//input\",\n            \"//div[@id='ok1vodsa-fqqw']//input\",\n            \"//div[@id='on74wn62-nh6q']//input\",\n            \"//div[@id='9htv60fa-r898']//input\",\n        ]\n        text_str = \"111\"\n        self.item.batch_modify_input(input_xpath_list, text_str)\n        # 点击确定\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n        # 获取重复弹窗文字\n>       error_popup = self.item.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n\ntest_materialInventory.py:251: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\materialPage\\warehouseLocation_page.py:150: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\n..\\..\\Pages\\base_page.py:24: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ca7dab0c07200ea4492b46b1aacf787a\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000020C55F2A290>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff65c016f65+78965]\nE       \tGetHandleVerifier [0x0x7ff65c016fc0+79056]\nE       \t(No symbol) [0x0x7ff65bda9dda]\nE       \t(No symbol) [0x0x7ff65be002ea]\nE       \t(No symbol) [0x0x7ff65be0059c]\nE       \t(No symbol) [0x0x7ff65be53f37]\nE       \t(No symbol) [0x0x7ff65be286af]\nE       \t(No symbol) [0x0x7ff65be50dbe]\nE       \t(No symbol) [0x0x7ff65be28443]\nE       \t(No symbol) [0x0x7ff65bdf1311]\nE       \t(No symbol) [0x0x7ff65bdf20a3]\nE       \tGetHandleVerifier [0x0x7ff65c2ce26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff65c2c8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff65c2e6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff65c0316fe+187406]\nE       \tGetHandleVerifier [0x0x7ff65c0396ef+220159]\nE       \tGetHandleVerifier [0x0x7ff65c01faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff65c01fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff65c0064d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35f37374+20]\nE       \tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "test_find_element_timeout", "source": "915898c0-68bc-45cb-ad0e-518448758c2d-attachment.png", "type": "image/png"}, {"name": "log", "source": "ece33254-5ab7-4999-887d-8a4c0c3458c6-attachment.txt", "type": "text/plain"}], "start": 1753172739993, "stop": 1753172754052, "uuid": "ef6e6f2d-281e-4afe-98d0-440eb81b7049", "historyId": "7b1fd76365eeca1a4c28a45efbf64886", "testCaseId": "7b1fd76365eeca1a4c28a45efbf64886", "fullName": "Tests.test_material.test_materialInventory.TestItemPage#test_item_editrepeat", "labels": [{"name": "story", "value": "修改物料员代码重复"}, {"name": "feature", "value": "在途库存测试用例"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_materialInventory"}, {"name": "subSuite", "value": "TestItemPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "23220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_materialInventory"}]}