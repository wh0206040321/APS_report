{"name": "test_item_add_success", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //tr[./td[2][.//span[text()=\"111\"]]]/td[2]", "trace": "self = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000017A3B9F37C0>\nby_or_element = 'xpath', value = '//tr[./td[2][.//span[text()=\"111\"]]]/td[2]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a82996fad022e72edc54236c6e30dd91\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000017A3B95F2E0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff60a636f65+78965]\nE       \tGetHandleVerifier [0x0x7ff60a636fc0+79056]\nE       \t(No symbol) [0x0x7ff60a3c9dda]\nE       \t(No symbol) [0x0x7ff60a4202ea]\nE       \t(No symbol) [0x0x7ff60a42059c]\nE       \t(No symbol) [0x0x7ff60a473f37]\nE       \t(No symbol) [0x0x7ff60a4486af]\nE       \t(No symbol) [0x0x7ff60a470dbe]\nE       \t(No symbol) [0x0x7ff60a448443]\nE       \t(No symbol) [0x0x7ff60a411311]\nE       \t(No symbol) [0x0x7ff60a4120a3]\nE       \tGetHandleVerifier [0x0x7ff60a8ee26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff60a8e8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff60a906aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff60a6516fe+187406]\nE       \tGetHandleVerifier [0x0x7ff60a6596ef+220159]\nE       \tGetHandleVerifier [0x0x7ff60a63faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff60a63fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff60a6264d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35f37374+20]\nE       \tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_warehouseLocation.TestItemPage object at 0x0000017A3B962770>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a82996fad022e72edc54236c6e30dd91\")>\n\n    @allure.story(\"新增全部数据测试\")\n    # @pytest.mark.run(order=1)\n    def test_item_add_success(self, login_to_item):\n        # 输入框要修改的值\n        text_str = \"111\"\n        # 日期要修改的值\n        date_str = \"2025/07/17 00:00:00\"\n        # 输入框的xpath\n        input_xpath_list = [\n            \"//div[@id='p34nag46-7evf']//input\",\n            \"//div[@id='ywz9q11i-sp3b']//input\",\n            \"//div[@id='x1k7t87i-tvc3']//input\",\n            \"//div[@id='u2tgl5h9-otp1']//input\",\n            \"//div[@id='hpjqsv1m-5607']//input\",\n            \"//div[@id='o7c9sdve-vat3']//input\",\n            \"//div[@id='9kwcbp3b-z9da']//input\",\n            \"//div[@id='ioo2843u-6pt1']//input\",\n            \"//div[@id='kzika1fs-vslf']//input\",\n            \"//div[@id='vyacskuk-jdgm']//input\",\n            \"//div[@id='36wkcynw-olw8']//input\",\n            \"//div[@id='7u7zprt5-x3u7']//input\",\n            \"//div[@id='r7g6swm9-olis']//input\",\n            \"//div[@id='ez0xsy8r-wtcm']//input\",\n            \"//div[@id='dolz7gel-9n5q']//input\",\n            \"//div[@id='p5msl36t-vfaz']//input\",\n            \"//div[@id='c78gauwj-5nq8']//input\"\n        ]\n        # 日期的xpath\n        date_xpath_list = [\n            \"//div[@id='2zi9znnj-d0ph']//input\",\n            \"//div[@id='h53h14kg-0kls']//input\",\n            \"//div[@id='onz7o1pq-qqkn']//input\",\n            \"//div[@id='s8kxww7w-dyoj']//input\",\n            \"//div[@id='kn5u70w2-42xf']//input\"\n        ]\n    \n        self.item.click_add_button()  # 点击添加\n        sleep(1)\n    \n        # 修改是否可用 否\n        self.item.click_button(\"//div[@id='i24ntrok-sf6n']\")\n        self.item.click_button('//li[text()=\"否\"]')\n    \n        # 批量修改输入框\n        self.item.batch_modify_input(input_xpath_list, text_str)\n        # 批量修改日期\n        self.item.batch_modify_input(date_xpath_list, date_str)\n    \n        sleep(1)\n        # 点击确定\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n        # 选中工厂代码\n>       self.item.click_button('//tr[./td[2][.//span[text()=\"111\"]]]/td[2]')\n\ntest_warehouseLocation.py:991: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\materialPage\\warehouseLocation_page.py:39: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000017A3B9F37C0>\nby_or_element = 'xpath', value = '//tr[./td[2][.//span[text()=\"111\"]]]/td[2]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //tr[./td[2][.//span[text()=\"111\"]]]/td[2]\n\n..\\..\\Pages\\base_page.py:48: TimeoutException"}, "attachments": [{"name": "test_click_timeout", "source": "c0f6ea72-3621-4c64-b92c-5bf3ed70a10b-attachment.png", "type": "image/png"}, {"name": "log", "source": "61fae6c0-6731-4b13-942a-b3a12ad5cb53-attachment.txt", "type": "text/plain"}], "start": 1752750290712, "stop": 1752750309104, "uuid": "89dc37b1-4c2f-433e-8a7e-2f8a32a7bbcc", "historyId": "05a35563b47ade3bb855dc74d47782a6", "testCaseId": "05a35563b47ade3bb855dc74d47782a6", "fullName": "Tests.test_material.test_warehouseLocation.TestItemPage#test_item_add_success", "labels": [{"name": "feature", "value": "仓库库位测试用例"}, {"name": "story", "value": "新增全部数据测试"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_warehouseLocation"}, {"name": "subSuite", "value": "TestItemPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "16252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_warehouseLocation"}]}