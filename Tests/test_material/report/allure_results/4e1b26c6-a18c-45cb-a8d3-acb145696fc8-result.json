{"name": "test_item_addfail", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff63bfb6f65+78965]\n\tGetHandleVerifier [0x0x7ff63bfb6fc0+79056]\n\t(No symbol) [0x0x7ff63bd49dda]\n\t(No symbol) [0x0x7ff63bda02ea]\n\t(No symbol) [0x0x7ff63bda059c]\n\t(No symbol) [0x0x7ff63bdf3f37]\n\t(No symbol) [0x0x7ff63bdc86af]\n\t(No symbol) [0x0x7ff63bdf0dbe]\n\t(No symbol) [0x0x7ff63bdc8443]\n\t(No symbol) [0x0x7ff63bd91311]\n\t(No symbol) [0x0x7ff63bd920a3]\n\tGetHandleVerifier [0x0x7ff63c26e26d+2926461]\n\tGetHandleVerifier [0x0x7ff63c268993+2903715]\n\tGetHandleVerifier [0x0x7ff63c286aed+3026941]\n\tGetHandleVerifier [0x0x7ff63bfd16fe+187406]\n\tGetHandleVerifier [0x0x7ff63bfd96ef+220159]\n\tGetHandleVerifier [0x0x7ff63bfbfaf4+114692]\n\tGetHandleVerifier [0x0x7ff63bfbfca9+115129]\n\tGetHandleVerifier [0x0x7ff63bfa64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffd35f37374+20]\n\tRtlUserThreadStart [0x0x7ffd36ddcc91+33]", "trace": "self = <test_warehouseLocation.TestItemPage object at 0x0000016BFE6A2E90>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e7b087f123bb601c3484318d063c87c3\")>\n\n    @allure.story(\"添加工厂代码 不填写数据点击确认 不允许提交\")\n    # @pytest.mark.run(order=1)\n    def test_item_addfail(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n        item.click_add_button()\n        # 物料代码xpath\n>       input_box = item.get_find_element_xpath(\n            '(//label[text()=\"工厂代码\"])[1]/parent::div//input'\n        )\n\ntest_warehouseLocation.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\materialPage\\warehouseLocation_page.py:87: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\n..\\..\\Pages\\base_page.py:24: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e7b087f123bb601c3484318d063c87c3\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000016BFE625E10>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff63bfb6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff63bfb6fc0+79056]\nE       \t(No symbol) [0x0x7ff63bd49dda]\nE       \t(No symbol) [0x0x7ff63bda02ea]\nE       \t(No symbol) [0x0x7ff63bda059c]\nE       \t(No symbol) [0x0x7ff63bdf3f37]\nE       \t(No symbol) [0x0x7ff63bdc86af]\nE       \t(No symbol) [0x0x7ff63bdf0dbe]\nE       \t(No symbol) [0x0x7ff63bdc8443]\nE       \t(No symbol) [0x0x7ff63bd91311]\nE       \t(No symbol) [0x0x7ff63bd920a3]\nE       \tGetHandleVerifier [0x0x7ff63c26e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff63c268993+2903715]\nE       \tGetHandleVerifier [0x0x7ff63c286aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff63bfd16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff63bfd96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff63bfbfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff63bfbfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff63bfa64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35f37374+20]\nE       \tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "test_find_element_timeout", "source": "133dbadd-c29a-49fb-a3bc-29ab3d385fd5-attachment.png", "type": "image/png"}, {"name": "log", "source": "93fa1fea-d3d3-48de-89ec-ea3b4525c78c-attachment.txt", "type": "text/plain"}], "start": 1752562163945, "stop": 1752562176091, "uuid": "81160c30-d81f-4720-9023-4d9a5705e229", "historyId": "04541b9000f78c265c31a17d27583f8f", "testCaseId": "04541b9000f78c265c31a17d27583f8f", "fullName": "Tests.test_material.test_warehouseLocation.TestItemPage#test_item_addfail", "labels": [{"name": "story", "value": "添加工厂代码 不填写数据点击确认 不允许提交"}, {"name": "feature", "value": "仓库库位测试用例"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_warehouseLocation"}, {"name": "subSuite", "value": "TestItemPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "33956-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_warehouseLocation"}]}