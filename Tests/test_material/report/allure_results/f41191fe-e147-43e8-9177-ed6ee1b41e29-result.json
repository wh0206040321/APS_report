{"name": "test_item_editnamesuccess", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]", "trace": "self = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x00000263CA863A90>\nby_or_element = 'xpath'\nvalue = '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8aa057f8214000385a28040911538757\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000263CA6EC1F0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7b3be6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7b3be6fc0+79056]\nE       \t(No symbol) [0x0x7ff7b3979dda]\nE       \t(No symbol) [0x0x7ff7b39d02ea]\nE       \t(No symbol) [0x0x7ff7b39d059c]\nE       \t(No symbol) [0x0x7ff7b3a23f37]\nE       \t(No symbol) [0x0x7ff7b39f86af]\nE       \t(No symbol) [0x0x7ff7b3a20dbe]\nE       \t(No symbol) [0x0x7ff7b39f8443]\nE       \t(No symbol) [0x0x7ff7b39c1311]\nE       \t(No symbol) [0x0x7ff7b39c20a3]\nE       \tGetHandleVerifier [0x0x7ff7b3e9e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7b3e98993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7b3eb6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7b3c016fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7b3c096ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7b3befaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7b3befca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7b3bd64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35f37374+20]\nE       \tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_warehouseLocation.TestItemPage object at 0x00000263CA709420>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8aa057f8214000385a28040911538757\")>\n\n    @allure.story(\"修改物料名称，自动补充标识，关联条件成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_editnamesuccess(self, login_to_item):\n    \n        # 输入框要修改的值\n        text_str = \"111\"\n        # 日期要修改的值\n        date_str = \"2025/07/17 00:00:00\"\n        # 输入框的xpath\n        input_xpath_list = [\n            \"//div[@id='2gqlayrh-vwyr']//input\",\n            \"//div[@id='uqtb82o5-7f7f']//input\",\n            \"//div[@id='mhj7cxc6-rywr']//input\",\n            \"//div[@id='x2xfoigm-rdd2']//input\",\n            \"//div[@id='ze6hpeia-qlcv']//input\",\n            \"//div[@id='8rmn9d4u-ll8o']//input\",\n            \"//div[@id='jwmtz1cs-qxcf']//input\",\n            \"//div[@id='mw9lvgil-ay4b']//input\",\n            \"//div[@id='b42zf3g4-ly6d']//input\",\n            \"//div[@id='9hougeja-f19h']//input\",\n            \"//div[@id='sv7m9mzk-eo1b']//input\",\n            \"//div[@id='euflllc4-91y5']//input\",\n            \"//div[@id='qpydcf68-3n30']//input\",\n            \"//div[@id='cd607kel-iwfp']//input\",\n            \"//div[@id='me9njjkp-e9rg']//input\",\n            \"//div[@id='uw1sjnqs-by95']//input\",\n            \"//div[@id='8czb193p-h4wb']//input\"\n        ]\n        # 日期的xpath\n        date_xpath_list = [\n            \"//div[@id='pcceybkb-1zqi']//input\",\n            \"//div[@id='f9nnaus3-q1qr']//input\",\n            \"//div[@id='h21yy3zx-sob7']//input\",\n            \"//div[@id='890pwofe-fsbm']//input\",\n            \"//div[@id='w2b54of4-62z0']//input\"\n        ]\n    \n        # 选中工厂代码\n        self.item.click_button('//tr[./td[2][.//span[text()=\"1测试A\"]]]/td[2]')\n        # 点击修改按钮\n        self.item.click_edi_button()\n        sleep(1)\n    \n        # 修改是否可用 否\n        self.item.click_button(\"//div[@id='m1hs2m05-cwhg']\")\n        self.item.click_button('//li[text()=\"否\"]')\n    \n        # 批量修改输入框\n        self.item.batch_modify_input(input_xpath_list, text_str)\n        # 批量修改日期\n        self.item.batch_modify_input(date_xpath_list, date_str)\n    \n        sleep(1)\n        # 点击确定\n>       self.item.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n\ntest_warehouseLocation.py:356: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\materialPage\\warehouseLocation_page.py:39: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x00000263CA863A90>\nby_or_element = 'xpath'\nvalue = '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]\n\n..\\..\\Pages\\base_page.py:48: TimeoutException"}, "attachments": [{"name": "test_click_timeout", "source": "7f1f5a49-b5d0-4418-af21-0b185b0f61cf-attachment.png", "type": "image/png"}, {"name": "log", "source": "6162b9b7-bd08-4454-955b-73fd3a9e3e47-attachment.txt", "type": "text/plain"}], "start": 1752743729577, "stop": 1752743746978, "uuid": "53bb6e76-00ae-46bd-a3f2-c089b4d8460f", "historyId": "07ec8caf056749e6bed6c6cbcfadc019", "testCaseId": "07ec8caf056749e6bed6c6cbcfadc019", "fullName": "Tests.test_material.test_warehouseLocation.TestItemPage#test_item_editnamesuccess", "labels": [{"name": "story", "value": "修改物料名称，自动补充标识，关联条件成功"}, {"name": "feature", "value": "仓库库位测试用例"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_warehouseLocation"}, {"name": "subSuite", "value": "TestItemPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "8812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_warehouseLocation"}]}