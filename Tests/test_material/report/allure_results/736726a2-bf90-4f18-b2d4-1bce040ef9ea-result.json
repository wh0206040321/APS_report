{"name": "test_item_selectcodesuccess", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff765d16f65+78965]\n\tGetHandleVerifier [0x0x7ff765d16fc0+79056]\n\t(No symbol) [0x0x7ff765aa9dda]\n\t(No symbol) [0x0x7ff765b002ea]\n\t(No symbol) [0x0x7ff765b0059c]\n\t(No symbol) [0x0x7ff765b53f37]\n\t(No symbol) [0x0x7ff765b286af]\n\t(No symbol) [0x0x7ff765b50dbe]\n\t(No symbol) [0x0x7ff765b28443]\n\t(No symbol) [0x0x7ff765af1311]\n\t(No symbol) [0x0x7ff765af20a3]\n\tGetHandleVerifier [0x0x7ff765fce26d+2926461]\n\tGetHandleVerifier [0x0x7ff765fc8993+2903715]\n\tGetHandleVerifier [0x0x7ff765fe6aed+3026941]\n\tGetHandleVerifier [0x0x7ff765d316fe+187406]\n\tGetHandleVerifier [0x0x7ff765d396ef+220159]\n\tGetHandleVerifier [0x0x7ff765d1faf4+114692]\n\tGetHandleVerifier [0x0x7ff765d1fca9+115129]\n\tGetHandleVerifier [0x0x7ff765d064d8+10728]\n\tBaseThreadInitThunk [0x0x7ffd35f37374+20]\n\tRtlUserThreadStart [0x0x7ffd36ddcc91+33]", "trace": "self = <test_materialBuyer.TestItemPage object at 0x000001F9D2139810>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5e043b032583bfcce5e98ca1bc368cdc\")>\n\n    @allure.story(\"查询物料员代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectcodesuccess(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击工厂代码\n        item.click_button('//div[text()=\"物料员代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"1测试A\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        # 定位第一行是否为产品A\n>       itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n\ntest_materialBuyer.py:425: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\materialPage\\warehouseLocation_page.py:123: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\n..\\..\\Pages\\base_page.py:24: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5e043b032583bfcce5e98ca1bc368cdc\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001F9D20C2F80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff765d16f65+78965]\nE       \tGetHandleVerifier [0x0x7ff765d16fc0+79056]\nE       \t(No symbol) [0x0x7ff765aa9dda]\nE       \t(No symbol) [0x0x7ff765b002ea]\nE       \t(No symbol) [0x0x7ff765b0059c]\nE       \t(No symbol) [0x0x7ff765b53f37]\nE       \t(No symbol) [0x0x7ff765b286af]\nE       \t(No symbol) [0x0x7ff765b50dbe]\nE       \t(No symbol) [0x0x7ff765b28443]\nE       \t(No symbol) [0x0x7ff765af1311]\nE       \t(No symbol) [0x0x7ff765af20a3]\nE       \tGetHandleVerifier [0x0x7ff765fce26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff765fc8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff765fe6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff765d316fe+187406]\nE       \tGetHandleVerifier [0x0x7ff765d396ef+220159]\nE       \tGetHandleVerifier [0x0x7ff765d1faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff765d1fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff765d064d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35f37374+20]\nE       \tRtlUserThreadStart [0x0x7ffd36ddcc91+33]\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "test_find_element_timeout", "source": "7e692828-6310-48ab-9fdf-369457a26089-attachment.png", "type": "image/png"}, {"name": "log", "source": "f5ad233e-549a-4bf1-8795-f596c9f39f4f-attachment.txt", "type": "text/plain"}], "start": 1752822633793, "stop": 1752822653004, "uuid": "00ba7d9d-d35a-453a-a42b-a43acfb3f7a2", "historyId": "e131e25d35e5508730fdb5ecd5b6e03b", "testCaseId": "e131e25d35e5508730fdb5ecd5b6e03b", "fullName": "Tests.test_material.test_materialBuyer.TestItemPage#test_item_selectcodesuccess", "labels": [{"name": "story", "value": "查询物料员代码成功"}, {"name": "feature", "value": "物料员测试用例"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_materialBuyer"}, {"name": "subSuite", "value": "TestItemPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "24156-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_materialBuyer"}]}