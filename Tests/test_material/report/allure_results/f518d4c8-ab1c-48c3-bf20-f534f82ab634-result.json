{"name": "test_sched_attribute3", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]", "trace": "self = <Pages.materialPage.qtProgrammeMan_page.SchedPage object at 0x00000126068A2FE0>\nby_or_element = 'xpath'\nvalue = '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\n..\\..\\Pages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7924c9a3e5d07a328589c5827a6ed9c9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001260634F5B0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_qtProgrammeMan.TestSchedPage object at 0x0000012606890F70>\nlogin_to_sched = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7924c9a3e5d07a328589c5827a6ed9c9\")>\n\n    @allure.story(\"属性设置-齐套供需设置保存全部成功\")\n    # @pytest.mark.run(order=1)\n    def test_sched_attribute3(self, login_to_sched):\n        driver = login_to_sched  # WebDriver 实例\n        sched = SchedPage(driver)  # 用 driver 初始化 SchedPage\n        name = \"标准方案复制\"\n        # 选择排产方案(订单级)复制方案\n        sched.click_button(f'//ul[@visible=\"visible\"]//ul//span[text()=\"{name}\"]')\n        sched.click_attribute_button()\n        sleep(2)\n        # 批量修改表达式\n        expression_list = [\n            '//div[text()=\"预占料供应数据筛选 \"]/following-sibling::div',\n            '//div[text()=\"标准需求表数据筛选 \"]/following-sibling::div',\n            '//div[text()=\"标准供应表数据筛选 \"]/following-sibling::div',\n            '//div[text()=\"标准供应表排序条件式 \"]/following-sibling::div',\n            '//div[text()=\"供需分配有效条件式 \"]/following-sibling::div'\n        ]\n        sched.expression_click(expression_list)\n    \n        # 点击标准需求表数据排序\n        sched.click_button('//div[text()=\"标准需求表数据排序 \"]/following-sibling::div')\n        # 点击+号\n        sched.click_button('(//div[@class=\"flex-j-c-between editButtonPadding\"])//button[@class=\"m-r-5 ivu-btn ivu-btn-primary ivu-btn-small ivu-btn-icon-only\"][1]')\n        # 点击排序键名称下拉\n        sched.click_button('(//div[@class=\"vxe-select size--mini is--filter\"])[1]')\n        # 选择第一项 BOM版本\n        sched.click_button('(//div[@class=\"vxe-select-option--wrapper\"])[1]//div[1]')\n        # 点击排序方式下拉\n        sched.click_button('(//div[@class=\"vxe-select size--mini is--filter\"])[1]')\n        # # 选择第一项 升序\n        sched.click_button('(//div[@class=\"vxe-select-option--wrapper\"])[2]//div[1]')\n>       sched.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n\ntest_qtProgrammeMan.py:596: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Pages\\materialPage\\qtProgrammeMan_page.py:69: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.materialPage.qtProgrammeMan_page.SchedPage object at 0x00000126068A2FE0>\nby_or_element = 'xpath'\nvalue = '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]'\nwait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]\n\n..\\..\\Pages\\base_page.py:48: TimeoutException"}, "attachments": [{"name": "test_click_timeout", "source": "c8a67eb8-3795-4741-81c4-7abc927f01bd-attachment.png", "type": "image/png"}, {"name": "log", "source": "c4f82b7a-11f6-4b32-86c2-d59a72420957-attachment.txt", "type": "text/plain"}], "start": 1753432543307, "stop": 1753432565842, "uuid": "89b4e8e4-98ec-4f48-baa6-3c0647727b3b", "historyId": "3a6e3fd80ba1a974f0588081c78fd8f1", "testCaseId": "3a6e3fd80ba1a974f0588081c78fd8f1", "fullName": "Tests.test_material.test_qtProgrammeMan.TestSchedPage#test_sched_attribute3", "labels": [{"name": "feature", "value": "物控方案管理表测试用例"}, {"name": "story", "value": "属性设置-齐套供需设置保存全部成功"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_qtProgrammeMan"}, {"name": "subSuite", "value": "TestSchedPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "11864-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_qtProgrammeMan"}]}