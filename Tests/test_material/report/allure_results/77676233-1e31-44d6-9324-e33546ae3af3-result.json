{"name": "test_item_editcodesuccess", "status": "failed", "statusDetails": {"message": "AssertionError: 预期1测试A1\nassert '1测试A1' == '1测试A5'\n  \n  \u001b[0m\u001b[91m- 1测试A5\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  ?     ^\u001b[90m\u001b[39;49;00m\n  \u001b[92m+ 1测试A1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  ?     ^\u001b[90m\u001b[39;49;00m", "trace": "self = <test_warehouseLocation.TestItemPage object at 0x000002599445EA40>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7c8e1a4e6946cc593d154d8a25eedaeb\")>\n\n    @allure.story(\"修改工厂代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_editcodesuccess(self, login_to_item):\n        # 选中1测试A物料代码\n        self.item.click_button('//tr[./td[2][.//span[text()=\"1测试A\"]]]/td[2]')\n        # 点击修改按钮\n        self.item.click_edi_button()\n        sleep(1)\n        # 生成随机数\n        random_int = random.randint(1, 10)\n        text = \"1测试A5\"\n        # 物料代码输入\n        self.item.enter_texts(\n            \"//div[@id='2gqlayrh-vwyr']//input\", f\"{text}\"\n        )\n        # 点击确定\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(3)\n        # 定位表格内容\n        itemdata = self.item.get_find_element_xpath(\n            '//tr[./td[2][.//span[contains(text(),\"1测试A\")]]]/td[2]'\n        ).text\n>       assert itemdata == text, f\"预期{itemdata}\"\nE       AssertionError: 预期1测试A1\nE       assert '1测试A1' == '1测试A5'\nE         \nE         \u001b[0m\u001b[91m- 1测试A5\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         ?     ^\u001b[90m\u001b[39;49;00m\nE         \u001b[92m+ 1测试A1\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE         ?     ^\u001b[90m\u001b[39;49;00m\n\ntest_warehouseLocation.py:279: AssertionError"}, "attachments": [{"name": "test_item_editcodesuccess_failure", "source": "5b09da40-f523-4c38-8810-fb982c01c256-attachment.png", "type": "image/png"}, {"name": "test_item_editcodesuccess_source", "source": "0ad10cd3-c2d3-4aa0-9e69-2a027d6805b4-attachment.html", "type": "text/html"}, {"name": "log", "source": "6f3656e0-ee12-4afe-b3ff-34a5149d6429-attachment.txt", "type": "text/plain"}], "start": 1752656528453, "stop": 1752656533755, "uuid": "d95b5824-6f28-4c09-b341-65a86385d128", "historyId": "4ad073494c9a9bc85c467ee2e5dfbbac", "testCaseId": "4ad073494c9a9bc85c467ee2e5dfbbac", "fullName": "Tests.test_material.test_warehouseLocation.TestItemPage#test_item_editcodesuccess", "labels": [{"name": "feature", "value": "仓库库位测试用例"}, {"name": "story", "value": "修改工厂代码成功"}, {"name": "parentSuite", "value": "Tests.test_material"}, {"name": "suite", "value": "test_warehouseLocation"}, {"name": "subSuite", "value": "TestItemPage"}, {"name": "host", "value": "DESKTOP-N0DSA7M"}, {"name": "thread", "value": "31872-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_material.test_warehouseLocation"}]}