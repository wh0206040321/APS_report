{"uid":"fd54b29d77b69e5a","name":"test_item_delsuccess1","fullName":"Tests.test_material.test_materialSupplys.TestItemPage#test_item_delsuccess1","historyId":"de586acca8e4765b35aafbe63962b16e","time":{"start":1753889489861,"stop":1753889498369,"duration":8508},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x00000201264458A0>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x00000201264458A0> = <test_material.test_materialSupplys.TestItemPage object at 0x0000020124559C30>.item","statusTrace":"self = <test_material.test_materialSupplys.TestItemPage object at 0x0000020124559C30>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4d8ddc21ddb2277fa9cfdc8aecbbc904\")>\n\n    @allure.story(\"删除数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_delsuccess1(self, login_to_item):\n        # 定位内容为‘111’的行\n        self.item.click_button('//tr[./td[2][.//span[text()=\"111\"]]]/td[2]')\n        self.item.click_del_button()  # 点击删除\n        sleep(1)\n        # 点击确定\n        # 找到共同的父元素\n        parent = self.item.get_find_element_class(\"ivu-modal-confirm-footer\")\n    \n        # 获取所有button子元素\n        all_buttons = parent.find_elements(By.TAG_NAME, \"button\")\n    \n        # 选择需要的button 第二个确定按钮\n        second_button = all_buttons[1]\n        second_button.click()\n        self.item.click_ref_button()\n        sleep(1)\n        # 定位内容为‘111’的行\n        itemdata = self.driver.find_elements(\n            By.XPATH, '//tr[./td[2][.//span[text()=\"111\"]]]/td[2]'\n        )\n        assert len(itemdata) == 0\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x00000201264458A0>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x00000201264458A0> = <test_material.test_materialSupplys.TestItemPage object at 0x0000020124559C30>.item\n\nTests\\test_material\\test_materialSupplys.py:361: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1753889348177,"stop":1753889357918,"duration":9741},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"setup","time":{"start":1753889489859,"stop":1753889489861,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x00000201264458A0>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x00000201264458A0> = <test_material.test_materialSupplys.TestItemPage object at 0x0000020124559C30>.item","statusTrace":"self = <test_material.test_materialSupplys.TestItemPage object at 0x0000020124559C30>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4d8ddc21ddb2277fa9cfdc8aecbbc904\")>\n\n    @allure.story(\"删除数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_delsuccess1(self, login_to_item):\n        # 定位内容为‘111’的行\n        self.item.click_button('//tr[./td[2][.//span[text()=\"111\"]]]/td[2]')\n        self.item.click_del_button()  # 点击删除\n        sleep(1)\n        # 点击确定\n        # 找到共同的父元素\n        parent = self.item.get_find_element_class(\"ivu-modal-confirm-footer\")\n    \n        # 获取所有button子元素\n        all_buttons = parent.find_elements(By.TAG_NAME, \"button\")\n    \n        # 选择需要的button 第二个确定按钮\n        second_button = all_buttons[1]\n        second_button.click()\n        self.item.click_ref_button()\n        sleep(1)\n        # 定位内容为‘111’的行\n        itemdata = self.driver.find_elements(\n            By.XPATH, '//tr[./td[2][.//span[text()=\"111\"]]]/td[2]'\n        )\n        assert len(itemdata) == 0\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x00000201264458A0>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x00000201264458A0> = <test_material.test_materialSupplys.TestItemPage object at 0x0000020124559C30>.item\n\nTests\\test_material\\test_materialSupplys.py:361: AssertionError","steps":[],"attachments":[{"uid":"478a10bd42d9467f","name":"log","source":"478a10bd42d9467f.txt","type":"text/plain","size":866}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"login_to_item::0","time":{"start":1753889664278,"stop":1753889666485,"duration":2207},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"删除数据成功"},{"name":"feature","value":"物料交付答复测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialSupplys"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"47600-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialSupplys"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"fd54b29d77b69e5a.json","parameterValues":[]}