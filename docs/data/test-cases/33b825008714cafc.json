{"uid":"33b825008714cafc","name":"test_process_selectcodesuccess","fullName":"Tests.test_items.test_process.TestProcessPage#test_process_selectcodesuccess","historyId":"09f99a037edcc0f48fcf02a7aabbb3d8","time":{"start":1761227967078,"stop":1761227978812,"duration":11734},"status":"failed","statusMessage":"AssertionError: assert ('111' == '111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2564e6511a53a7ba61d70a5b48f196d3\", element=\"f.5A800F1AEDBAC7B8CC16B5712C9DF198.d.10F520FE912716202567961550496191.e.304\")>])","statusTrace":"self = <test_items.test_process.TestProcessPage object at 0x000001FC190840D0>, login_to_process = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2564e6511a53a7ba61d70a5b48f196d3\")>\n\n    @allure.story(\"查询工序代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_process_selectcodesuccess(self, login_to_process):\n        driver = login_to_process  # WebDriver 实例\n        process = ProcessPage(driver)  # 用 driver 初始化 ProcessPage\n        name = \"111\"\n        # 点击查询\n        process.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击工序代码\n        process.click_button('//div[text()=\"工序代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        process.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        process.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        process.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n        sleep(1)\n    \n        # 点击确认\n        process.click_button(\n            '(//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 定位第一行是否为111\n        processcode = process.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        processcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert processcode == name and len(processcode2) == 0\nE       assert ('111' == '111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2564e6511a53a7ba61d70a5b48f196d3\", element=\"f.5A800F1AEDBAC7B8CC16B5712C9DF198.d.10F520FE912716202567961550496191.e.304\")>])\n\nTests\\test_items\\test_process.py:458: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_process","time":{"start":1761227952123,"stop":1761227967076,"duration":14953},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('111' == '111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2564e6511a53a7ba61d70a5b48f196d3\", element=\"f.5A800F1AEDBAC7B8CC16B5712C9DF198.d.10F520FE912716202567961550496191.e.304\")>])","statusTrace":"self = <test_items.test_process.TestProcessPage object at 0x000001FC190840D0>, login_to_process = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2564e6511a53a7ba61d70a5b48f196d3\")>\n\n    @allure.story(\"查询工序代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_process_selectcodesuccess(self, login_to_process):\n        driver = login_to_process  # WebDriver 实例\n        process = ProcessPage(driver)  # 用 driver 初始化 ProcessPage\n        name = \"111\"\n        # 点击查询\n        process.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击工序代码\n        process.click_button('//div[text()=\"工序代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        process.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        process.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        process.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n        sleep(1)\n    \n        # 点击确认\n        process.click_button(\n            '(//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 定位第一行是否为111\n        processcode = process.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        processcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert processcode == name and len(processcode2) == 0\nE       assert ('111' == '111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"2564e6511a53a7ba61d70a5b48f196d3\", element=\"f.5A800F1AEDBAC7B8CC16B5712C9DF198.d.10F520FE912716202567961550496191.e.304\")>])\n\nTests\\test_items\\test_process.py:458: AssertionError","steps":[],"attachments":[{"uid":"4994564654a51ca4","name":"test_process_selectcodesuccess_failure","source":"4994564654a51ca4.png","type":"image/png","size":110984},{"uid":"bf6a427879e31d6","name":"test_process_selectcodesuccess_source","source":"bf6a427879e31d6.html","type":"text/html","size":1363798},{"uid":"35ad17165cd6e31","name":"log","source":"35ad17165cd6e31.txt","type":"text/plain","size":1561}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_process::0","time":{"start":1761227979245,"stop":1761227981566,"duration":2321},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"查询工序代码成功"},{"name":"feature","value":"工序表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_process"},{"name":"subSuite","value":"TestProcessPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21764-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_process"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"33b825008714cafc.json","parameterValues":[]}