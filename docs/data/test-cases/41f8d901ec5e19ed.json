{"uid":"41f8d901ec5e19ed","name":"test_affairs_process_select4","fullName":"Tests.test_system.test_affairs.TestAffairsPage#test_affairs_process_select4","historyId":"641c398b1f449b41e38498e3aa7e77bb","time":{"start":1761067900491,"stop":1761067914374,"duration":13883},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_system.test_affairs.TestAffairsPage object at 0x00000173A66B7850>, login_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4e0a1891a6453aad371d7c26c2eeb11f\")>\n\n    @allure.story(\"我的流程-查询流程名称成功\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_process_select4(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        name = \"测试流程7\"\n        sleep(1)\n        affairs.click_process()\n        affairs.select_all(process=name)\n        # 获取表格中所有行\n>       rows = WebDriverWait(driver, 10).until(\n            EC.presence_of_all_elements_located(\n                (By.XPATH, '(//table[@class=\"el-table__body\"])[1]//tr')\n            )\n        )\n\nTests\\test_system\\test_affairs.py:984: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4e0a1891a6453aad371d7c26c2eeb11f\")>, method = <function presence_of_all_elements_located.<locals>._predicate at 0x00000173A733A8C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_affairs","time":{"start":1761067882752,"stop":1761067900489,"duration":17737},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_system.test_affairs.TestAffairsPage object at 0x00000173A66B7850>, login_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4e0a1891a6453aad371d7c26c2eeb11f\")>\n\n    @allure.story(\"我的流程-查询流程名称成功\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_process_select4(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        name = \"测试流程7\"\n        sleep(1)\n        affairs.click_process()\n        affairs.select_all(process=name)\n        # 获取表格中所有行\n>       rows = WebDriverWait(driver, 10).until(\n            EC.presence_of_all_elements_located(\n                (By.XPATH, '(//table[@class=\"el-table__body\"])[1]//tr')\n            )\n        )\n\nTests\\test_system\\test_affairs.py:984: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4e0a1891a6453aad371d7c26c2eeb11f\")>, method = <function presence_of_all_elements_located.<locals>._predicate at 0x00000173A733A8C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"b2e02d2d73edcb6b","name":"test_affairs_process_select4_failure","source":"b2e02d2d73edcb6b.png","type":"image/png","size":52176},{"uid":"8183163d16606580","name":"test_affairs_process_select4_source","source":"8183163d16606580.html","type":"text/html","size":1121372},{"uid":"17147eee8dd59eab","name":"log","source":"17147eee8dd59eab.txt","type":"text/plain","size":1963}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_affairs::0","time":{"start":1761067914935,"stop":1761067917378,"duration":2443},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"事务管理页用例"},{"name":"story","value":"我的流程-查询流程名称成功"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_affairs"},{"name":"subSuite","value":"TestAffairsPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_affairs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d7ffe845d7c49181","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1761067865989,"stop":1761067879756,"duration":13767}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"41f8d901ec5e19ed.json","parameterValues":[]}