{"uid":"414e2176a561c2a8","name":"test_personal_expand2","fullName":"Tests.test_items.test_personal.TestPersonalPage#test_personal_expand2","historyId":"8f268460f6744e96f466399f6e26f649","time":{"start":1761062345273,"stop":1761062350565,"duration":5292},"status":"failed","statusMessage":"AssertionError: before_width:60,after_width:60\nassert (60 != 60)","statusTrace":"self = <test_items.test_personal.TestPersonalPage object at 0x00000173A6499D50>, login_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7550141bf51a416fc8fa6d19be1c5db5\")>\n\n    @allure.story(\"重新启动设置不变,设置菜单展开方式为默认展开\")\n    # @pytest.mark.run(order=1)\n    def test_personal_expand2(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        # 获取设置前宽度\n        before_width = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]').size['width']\n    \n        personal.go_setting_page()\n    \n        # 获取 “展开(默认)” 的 checkbox\n        checkbox = personal.get_find_element('//label[text()=\"展开(默认)\"]//input')\n    \n        # 如果已经是默认展开状态，为了保证断言逻辑成立，可以先切换为悬浮，然后再切换回默认展开\n        if checkbox.is_selected():\n            personal.click_button('//label[text()=\"悬浮\"]/span')\n            personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n            sleep(2)\n            before_element = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]')\n            before_width = before_element.size['width']\n            personal.go_setting_page()\n    \n        # 设置为默认展开并确认\n        personal.click_button('//label[text()=\"展开(默认)\"]/span')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n        sleep(2)\n        after_element = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]')\n        after_width = after_element.size['width']\n>       assert before_width != after_width and int(before_width) < int(after_width), f\"before_width:{before_width},after_width:{after_width}\"\nE       AssertionError: before_width:60,after_width:60\nE       assert (60 != 60)\n\nTests\\test_items\\test_personal.py:366: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_personal","time":{"start":1761062334269,"stop":1761062345271,"duration":11002},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: before_width:60,after_width:60\nassert (60 != 60)","statusTrace":"self = <test_items.test_personal.TestPersonalPage object at 0x00000173A6499D50>, login_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7550141bf51a416fc8fa6d19be1c5db5\")>\n\n    @allure.story(\"重新启动设置不变,设置菜单展开方式为默认展开\")\n    # @pytest.mark.run(order=1)\n    def test_personal_expand2(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        # 获取设置前宽度\n        before_width = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]').size['width']\n    \n        personal.go_setting_page()\n    \n        # 获取 “展开(默认)” 的 checkbox\n        checkbox = personal.get_find_element('//label[text()=\"展开(默认)\"]//input')\n    \n        # 如果已经是默认展开状态，为了保证断言逻辑成立，可以先切换为悬浮，然后再切换回默认展开\n        if checkbox.is_selected():\n            personal.click_button('//label[text()=\"悬浮\"]/span')\n            personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n            sleep(2)\n            before_element = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]')\n            before_width = before_element.size['width']\n            personal.go_setting_page()\n    \n        # 设置为默认展开并确认\n        personal.click_button('//label[text()=\"展开(默认)\"]/span')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n        sleep(2)\n        after_element = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]')\n        after_width = after_element.size['width']\n>       assert before_width != after_width and int(before_width) < int(after_width), f\"before_width:{before_width},after_width:{after_width}\"\nE       AssertionError: before_width:60,after_width:60\nE       assert (60 != 60)\n\nTests\\test_items\\test_personal.py:366: AssertionError","steps":[],"attachments":[{"uid":"fc48eb28b2102bfb","name":"test_personal_expand2_failure","source":"fc48eb28b2102bfb.png","type":"image/png","size":86795},{"uid":"e9bfa8100b76e575","name":"test_personal_expand2_source","source":"e9bfa8100b76e575.html","type":"text/html","size":1357417},{"uid":"2f87f803ac2a1bae","name":"log","source":"2f87f803ac2a1bae.txt","type":"text/plain","size":1204}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_personal::0","time":{"start":1761062351158,"stop":1761062353506,"duration":2348},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"个人设置测试用例"},{"name":"story","value":"重新启动设置不变,设置菜单展开方式为默认展开"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_personal"},{"name":"subSuite","value":"TestPersonalPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_personal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"414e2176a561c2a8.json","parameterValues":[]}