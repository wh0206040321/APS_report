{"uid":"859a4ed0dc31b124","name":"test_master_addserial2","fullName":"Tests.test_items.test_master.TestMasterPage#test_master_addserial2","historyId":"fa165a8633804484ea574c94b15cd9ce","time":{"start":1756821218701,"stop":1756821238518,"duration":19817},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7cf066f65+78965]\n\tGetHandleVerifier [0x0x7ff7cf066fc0+79056]\n\t(No symbol) [0x0x7ff7cedf9dda]\n\t(No symbol) [0x0x7ff7cee502ea]\n\t(No symbol) [0x0x7ff7cee5059c]\n\t(No symbol) [0x0x7ff7ceea3f37]\n\t(No symbol) [0x0x7ff7cee786af]\n\t(No symbol) [0x0x7ff7ceea0dbe]\n\t(No symbol) [0x0x7ff7cee78443]\n\t(No symbol) [0x0x7ff7cee41311]\n\t(No symbol) [0x0x7ff7cee420a3]\n\tGetHandleVerifier [0x0x7ff7cf31e26d+2926461]\n\tGetHandleVerifier [0x0x7ff7cf318993+2903715]\n\tGetHandleVerifier [0x0x7ff7cf336aed+3026941]\n\tGetHandleVerifier [0x0x7ff7cf0816fe+187406]\n\tGetHandleVerifier [0x0x7ff7cf0896ef+220159]\n\tGetHandleVerifier [0x0x7ff7cf06faf4+114692]\n\tGetHandleVerifier [0x0x7ff7cf06fca9+115129]\n\tGetHandleVerifier [0x0x7ff7cf0564d8+10728]\n\tBaseThreadInitThunk [0x0x7ff835d07374+20]\n\tRtlUserThreadStart [0x0x7ff836dfcc91+33]","statusTrace":"self = <test_items.test_master.TestMasterPage object at 0x000001E266080820>\nlogin_to_master = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bed5828c75a9ea12619b4659984a6393\")>\n\n    @allure.story(\n        \"添加工艺产能信息，只填写物料，工序选定器和工序编号，输入指令，新增成功,校验文本框\"\n    )\n    # @pytest.mark.run(order=3)\n    def test_master_addserial2(self, login_to_master):\n        driver = login_to_master  # WebDriver 实例\n        master = MasterPage(driver)  # 用 driver 初始化 MasterPage\n        name = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        # 清空之前的共享数据\n        SharedDataUtil.clear_data()\n        master.click_add_button()\n    \n        # 填写订物料代码\n        master.click_button('//span[text()=\" 物料代码： \"]/parent::div//i')\n        sleep(1.5)\n        master.click_button(\n            '(//table[@class=\"vxe-table--body\"]//tr[1]/td[2])[last()]'\n        )\n        master.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]')\n        sleep(1)\n        item = master.get_find_element_xpath(\n            '//span[text()=\" 物料代码： \"]/parent::div//input'\n        ).get_attribute(\"value\")\n    \n        # 点击工序选定器\n        master.click_button(\n            '//table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input'\n        )\n    \n        # 点击新增工序编号\n        master.add_serial2()\n        # 填写工序编号\n        master.enter_texts(\n            '//table[.//div[@class=\"vxe-input type--number size--mini\"]]//tr[1]/td[2]//input',\n            name,\n        )\n        # 点击下拉框\n        master.click_button(\n            '//table[@class=\"vxe-table--body\"]//tr[1]/td[3]//input[@placeholder=\"请选择\"]'\n        )\n        random_int = random.randint(1, 4)\n        sleep(1)\n        # 输入工序代码\n        master.click_button(\n            f'(//div[@class=\"vxe-select-option--wrapper\"])[1]/div[{random_int}]'\n        )\n    \n        # 点击新增输入指令\n        master.add_serial3()\n        # 获取物料名称\n        master.click_button('(//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i')\n        random_int = random.randint(1, 4)\n        sleep(1)\n        master.click_button(\n            f'(//table[.//span[@class=\"vxe-cell--label\"]])[2]//tr[{random_int}]/td[2]'\n        )\n        master.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]')\n        # 获取物料数量\n        random_int = random.randint(1, 100)\n        master.enter_texts(\n            '(//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[3]//input',\n            f\"{random_int}\",\n        )\n    \n        # 点击确定\n        master.add_ok_button()\n        sleep(1)\n        adddata = master.get_find_element_xpath(\n            f'//tr[.//span[text()=\"{item}\"]]/td[2]//span[text()=\"{item}\"]'\n        ).text\n>       addtext = master.get_find_element_xpath(\n            f'//tr[.//td[2]//span[text()=\"{item}\"]]/td[9]'\n        ).text\n\nTests\\test_items\\test_master.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\master_page.py:104: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bed5828c75a9ea12619b4659984a6393\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001E26658FEB0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7cf066f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7cf066fc0+79056]\nE       \t(No symbol) [0x0x7ff7cedf9dda]\nE       \t(No symbol) [0x0x7ff7cee502ea]\nE       \t(No symbol) [0x0x7ff7cee5059c]\nE       \t(No symbol) [0x0x7ff7ceea3f37]\nE       \t(No symbol) [0x0x7ff7cee786af]\nE       \t(No symbol) [0x0x7ff7ceea0dbe]\nE       \t(No symbol) [0x0x7ff7cee78443]\nE       \t(No symbol) [0x0x7ff7cee41311]\nE       \t(No symbol) [0x0x7ff7cee420a3]\nE       \tGetHandleVerifier [0x0x7ff7cf31e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7cf318993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7cf336aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7cf0816fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7cf0896ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7cf06faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7cf06fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7cf0564d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff835d07374+20]\nE       \tRtlUserThreadStart [0x0x7ff836dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_master","time":{"start":1756821210316,"stop":1756821218700,"duration":8384},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7cf066f65+78965]\n\tGetHandleVerifier [0x0x7ff7cf066fc0+79056]\n\t(No symbol) [0x0x7ff7cedf9dda]\n\t(No symbol) [0x0x7ff7cee502ea]\n\t(No symbol) [0x0x7ff7cee5059c]\n\t(No symbol) [0x0x7ff7ceea3f37]\n\t(No symbol) [0x0x7ff7cee786af]\n\t(No symbol) [0x0x7ff7ceea0dbe]\n\t(No symbol) [0x0x7ff7cee78443]\n\t(No symbol) [0x0x7ff7cee41311]\n\t(No symbol) [0x0x7ff7cee420a3]\n\tGetHandleVerifier [0x0x7ff7cf31e26d+2926461]\n\tGetHandleVerifier [0x0x7ff7cf318993+2903715]\n\tGetHandleVerifier [0x0x7ff7cf336aed+3026941]\n\tGetHandleVerifier [0x0x7ff7cf0816fe+187406]\n\tGetHandleVerifier [0x0x7ff7cf0896ef+220159]\n\tGetHandleVerifier [0x0x7ff7cf06faf4+114692]\n\tGetHandleVerifier [0x0x7ff7cf06fca9+115129]\n\tGetHandleVerifier [0x0x7ff7cf0564d8+10728]\n\tBaseThreadInitThunk [0x0x7ff835d07374+20]\n\tRtlUserThreadStart [0x0x7ff836dfcc91+33]","statusTrace":"self = <test_items.test_master.TestMasterPage object at 0x000001E266080820>\nlogin_to_master = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bed5828c75a9ea12619b4659984a6393\")>\n\n    @allure.story(\n        \"添加工艺产能信息，只填写物料，工序选定器和工序编号，输入指令，新增成功,校验文本框\"\n    )\n    # @pytest.mark.run(order=3)\n    def test_master_addserial2(self, login_to_master):\n        driver = login_to_master  # WebDriver 实例\n        master = MasterPage(driver)  # 用 driver 初始化 MasterPage\n        name = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        # 清空之前的共享数据\n        SharedDataUtil.clear_data()\n        master.click_add_button()\n    \n        # 填写订物料代码\n        master.click_button('//span[text()=\" 物料代码： \"]/parent::div//i')\n        sleep(1.5)\n        master.click_button(\n            '(//table[@class=\"vxe-table--body\"]//tr[1]/td[2])[last()]'\n        )\n        master.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]')\n        sleep(1)\n        item = master.get_find_element_xpath(\n            '//span[text()=\" 物料代码： \"]/parent::div//input'\n        ).get_attribute(\"value\")\n    \n        # 点击工序选定器\n        master.click_button(\n            '//table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input'\n        )\n    \n        # 点击新增工序编号\n        master.add_serial2()\n        # 填写工序编号\n        master.enter_texts(\n            '//table[.//div[@class=\"vxe-input type--number size--mini\"]]//tr[1]/td[2]//input',\n            name,\n        )\n        # 点击下拉框\n        master.click_button(\n            '//table[@class=\"vxe-table--body\"]//tr[1]/td[3]//input[@placeholder=\"请选择\"]'\n        )\n        random_int = random.randint(1, 4)\n        sleep(1)\n        # 输入工序代码\n        master.click_button(\n            f'(//div[@class=\"vxe-select-option--wrapper\"])[1]/div[{random_int}]'\n        )\n    \n        # 点击新增输入指令\n        master.add_serial3()\n        # 获取物料名称\n        master.click_button('(//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i')\n        random_int = random.randint(1, 4)\n        sleep(1)\n        master.click_button(\n            f'(//table[.//span[@class=\"vxe-cell--label\"]])[2]//tr[{random_int}]/td[2]'\n        )\n        master.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]')\n        # 获取物料数量\n        random_int = random.randint(1, 100)\n        master.enter_texts(\n            '(//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[3]//input',\n            f\"{random_int}\",\n        )\n    \n        # 点击确定\n        master.add_ok_button()\n        sleep(1)\n        adddata = master.get_find_element_xpath(\n            f'//tr[.//span[text()=\"{item}\"]]/td[2]//span[text()=\"{item}\"]'\n        ).text\n>       addtext = master.get_find_element_xpath(\n            f'//tr[.//td[2]//span[text()=\"{item}\"]]/td[9]'\n        ).text\n\nTests\\test_items\\test_master.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\master_page.py:104: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bed5828c75a9ea12619b4659984a6393\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001E26658FEB0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7cf066f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7cf066fc0+79056]\nE       \t(No symbol) [0x0x7ff7cedf9dda]\nE       \t(No symbol) [0x0x7ff7cee502ea]\nE       \t(No symbol) [0x0x7ff7cee5059c]\nE       \t(No symbol) [0x0x7ff7ceea3f37]\nE       \t(No symbol) [0x0x7ff7cee786af]\nE       \t(No symbol) [0x0x7ff7ceea0dbe]\nE       \t(No symbol) [0x0x7ff7cee78443]\nE       \t(No symbol) [0x0x7ff7cee41311]\nE       \t(No symbol) [0x0x7ff7cee420a3]\nE       \tGetHandleVerifier [0x0x7ff7cf31e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7cf318993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7cf336aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7cf0816fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7cf0896ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7cf06faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7cf06fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7cf0564d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff835d07374+20]\nE       \tRtlUserThreadStart [0x0x7ff836dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"192d75b4c5d82e70","name":"test_master_addserial2_failure","source":"192d75b4c5d82e70.png","type":"image/png","size":115133},{"uid":"1983bb8273ce6933","name":"test_master_addserial2_source","source":"1983bb8273ce6933.html","type":"text/html","size":1427952},{"uid":"7e29edce7ceac26c","name":"log","source":"7e29edce7ceac26c.txt","type":"text/plain","size":3083}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_master::0","time":{"start":1756821238730,"stop":1756821240921,"duration":2191},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"工艺产能表测试用例"},{"name":"story","value":"添加工艺产能信息，只填写物料，工序选定器和工序编号，输入指令，新增成功,校验文本框"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_master"},{"name":"subSuite","value":"TestMasterPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"31324-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_master"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"859a4ed0dc31b124.json","parameterValues":[]}