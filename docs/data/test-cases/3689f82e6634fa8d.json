{"uid":"3689f82e6634fa8d","name":"test_resource_editnamesuccess","fullName":"Tests.test_items.test_resource.TestResourcePage#test_resource_editnamesuccess","historyId":"f5024ec0dbe18897ae7252736a3a2d96","time":{"start":1760963983672,"stop":1760963988845,"duration":5173},"status":"failed","statusMessage":"AssertionError: assert ('1测试A' == '包装机10'\n  \n  \u001B[0m\u001B[91m- 包装机10\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_resource.TestResourcePage object at 0x0000014AE2E92110>, login_to_resource = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"97b879e0d0a228cd78162287db95e3ec\")>\n\n    @allure.story(\"修改资源名称，资源量制约\")\n    # @pytest.mark.run(order=1)\n    def test_resource_editnamesuccess(self, login_to_resource):\n        driver = login_to_resource  # WebDriver 实例\n        resource = ResourcePage(driver)  # 用 driver 初始化 resourcePage\n        name = \"1测试A\"\n        # 选中资源代码\n        resource.click_button(f'(//span[text()=\"{name}\"])[1]')\n        # 点击修改按钮\n        resource.click_edi_button()\n        sleep(1)\n        # 生成随机数\n        random_int = random.randint(1, 10)\n        text = \"包装机\" + f\"{random_int}\"\n        # 输入修改的资源名称\n        resource.enter_texts(\n            '(//label[text()=\"资源名称\"])[1]/parent::div//input', f\"{text}\"\n        )\n        # 获取修改好的值\n        editname = resource.get_find_element_xpath(\n            '(//label[text()=\"资源名称\"])[1]/parent::div//input'\n        ).get_attribute(\"value\")\n    \n        # 资源量制约下拉框\n        resource.click_button(\n            '(//label[text()=\"资源量制约\"])[1]/parent::div//input[@class=\"ivu-select-input\"]'\n        )\n        # 资源量制约选择(不制约)\n        resource.click_button('//li[text()=\"不制约\"]')\n        # 获取资源量制约下拉框的值\n        resourcesel = resource.get_find_element_xpath(\n            '(//label[text()=\"资源量制约\"])[1]/parent::div//input[@class=\"ivu-select-input\"]'\n        ).get_attribute(\"value\")\n    \n        # 点击确定\n        resource.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        # 定位表格内容\n        resourcename = resource.get_find_element_xpath(\n            f'(//span[text()=\"{name}\"])[1]/ancestor::tr/td[3]/div'\n        ).text\n        resourceautoGenerateFlag = resource.get_find_element_xpath(\n            f'(//span[text()=\"{name}\"])[1]/ancestor::tr/td[7]/div'\n        ).text\n>       assert resourcename == editname and resourceautoGenerateFlag == resourcesel\nE       AssertionError: assert ('1测试A' == '包装机10'\nE         \nE         \u001B[0m\u001B[91m- 包装机10\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_resource.py:424: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_resource","time":{"start":1760963972283,"stop":1760963983671,"duration":11388},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('1测试A' == '包装机10'\n  \n  \u001B[0m\u001B[91m- 包装机10\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_resource.TestResourcePage object at 0x0000014AE2E92110>, login_to_resource = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"97b879e0d0a228cd78162287db95e3ec\")>\n\n    @allure.story(\"修改资源名称，资源量制约\")\n    # @pytest.mark.run(order=1)\n    def test_resource_editnamesuccess(self, login_to_resource):\n        driver = login_to_resource  # WebDriver 实例\n        resource = ResourcePage(driver)  # 用 driver 初始化 resourcePage\n        name = \"1测试A\"\n        # 选中资源代码\n        resource.click_button(f'(//span[text()=\"{name}\"])[1]')\n        # 点击修改按钮\n        resource.click_edi_button()\n        sleep(1)\n        # 生成随机数\n        random_int = random.randint(1, 10)\n        text = \"包装机\" + f\"{random_int}\"\n        # 输入修改的资源名称\n        resource.enter_texts(\n            '(//label[text()=\"资源名称\"])[1]/parent::div//input', f\"{text}\"\n        )\n        # 获取修改好的值\n        editname = resource.get_find_element_xpath(\n            '(//label[text()=\"资源名称\"])[1]/parent::div//input'\n        ).get_attribute(\"value\")\n    \n        # 资源量制约下拉框\n        resource.click_button(\n            '(//label[text()=\"资源量制约\"])[1]/parent::div//input[@class=\"ivu-select-input\"]'\n        )\n        # 资源量制约选择(不制约)\n        resource.click_button('//li[text()=\"不制约\"]')\n        # 获取资源量制约下拉框的值\n        resourcesel = resource.get_find_element_xpath(\n            '(//label[text()=\"资源量制约\"])[1]/parent::div//input[@class=\"ivu-select-input\"]'\n        ).get_attribute(\"value\")\n    \n        # 点击确定\n        resource.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        # 定位表格内容\n        resourcename = resource.get_find_element_xpath(\n            f'(//span[text()=\"{name}\"])[1]/ancestor::tr/td[3]/div'\n        ).text\n        resourceautoGenerateFlag = resource.get_find_element_xpath(\n            f'(//span[text()=\"{name}\"])[1]/ancestor::tr/td[7]/div'\n        ).text\n>       assert resourcename == editname and resourceautoGenerateFlag == resourcesel\nE       AssertionError: assert ('1测试A' == '包装机10'\nE         \nE         \u001B[0m\u001B[91m- 包装机10\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_resource.py:424: AssertionError","steps":[],"attachments":[{"uid":"4a292386c85eb217","name":"test_resource_editnamesuccess_failure","source":"4a292386c85eb217.png","type":"image/png","size":126658},{"uid":"f2c29e90629af4ff","name":"test_resource_editnamesuccess_source","source":"f2c29e90629af4ff.html","type":"text/html","size":1513708},{"uid":"4d879e29c15e074d","name":"log","source":"4d879e29c15e074d.txt","type":"text/plain","size":1899}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_resource::0","time":{"start":1760963989193,"stop":1760963991459,"duration":2266},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"修改资源名称，资源量制约"},{"name":"feature","value":"资源表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_resource"},{"name":"subSuite","value":"TestResourcePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_resource"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"3689f82e6634fa8d.json","parameterValues":[]}