{"uid":"b35bbff011c79da9","name":"test_environment_cycle_numinput1","fullName":"Tests.test_system.test_environment.TestEnvironmentPage#test_environment_cycle_numinput1","historyId":"4e0d07069ec6552ca57f72479e603a8d","time":{"start":1760977803802,"stop":1760977820797,"duration":16995},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff613186f65+78965]\n\tGetHandleVerifier [0x0x7ff613186fc0+79056]\n\t(No symbol) [0x0x7ff612f19dda]\n\t(No symbol) [0x0x7ff612f702ea]\n\t(No symbol) [0x0x7ff612f7059c]\n\t(No symbol) [0x0x7ff612fc3f37]\n\t(No symbol) [0x0x7ff612f986af]\n\t(No symbol) [0x0x7ff612fc0dbe]\n\t(No symbol) [0x0x7ff612f98443]\n\t(No symbol) [0x0x7ff612f61311]\n\t(No symbol) [0x0x7ff612f620a3]\n\tGetHandleVerifier [0x0x7ff61343e26d+2926461]\n\tGetHandleVerifier [0x0x7ff613438993+2903715]\n\tGetHandleVerifier [0x0x7ff613456aed+3026941]\n\tGetHandleVerifier [0x0x7ff6131a16fe+187406]\n\tGetHandleVerifier [0x0x7ff6131a96ef+220159]\n\tGetHandleVerifier [0x0x7ff61318faf4+114692]\n\tGetHandleVerifier [0x0x7ff61318fca9+115129]\n\tGetHandleVerifier [0x0x7ff6131764d8+10728]\n\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\n\tRtlUserThreadStart [0x0x7fff513dcc91+33]","statusTrace":"self = <test_system.test_environment.TestEnvironmentPage object at 0x0000014AE2F32050>, login_to_environment = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8088ea4e59651a05044c3ab8806eecc3\")>\n\n    @allure.story(\"周期页面-校验所有数字输入框-不输入不允许保存，输入框颜色改变\")\n    # @pytest.mark.run(order=1)\n    def test_environment_cycle_numinput1(self, login_to_environment):\n        driver = login_to_environment  # WebDriver 实例\n        environment = EnvironmentPage(driver)  # 用 driver 初始化 EnvironmentPage\n        environment.click_cycle()\n        value = \" \"\n        xpth_list = [\n            '//div[label[text()=\"分派开始时间:\"]]//input',\n            '//div[label[text()=\"分派结束时间:\"]]//input',\n            '//div[label[text()=\"生产指令结束时间:\"]]//input',\n            '//div[label[text()=\"显示开始时间:\"]]//input',\n            '//div[label[text()=\"显示结束时间:\"]]//input',\n        ]\n        environment.batch_modify_input(xpth_list, value)\n        div_xpth_list = [item.replace(\"//input\", \"//input/ancestor::div[2]\") for item in xpth_list]\n        environment.click_save_button()\n>       message = environment.get_find_message()\n\nTests\\test_system\\test_environment.py:165: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\environment_page.py:49: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8088ea4e59651a05044c3ab8806eecc3\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x0000014AE4A340D0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE       \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE       \t(No symbol) [0x0x7ff612f19dda]\nE       \t(No symbol) [0x0x7ff612f702ea]\nE       \t(No symbol) [0x0x7ff612f7059c]\nE       \t(No symbol) [0x0x7ff612fc3f37]\nE       \t(No symbol) [0x0x7ff612f986af]\nE       \t(No symbol) [0x0x7ff612fc0dbe]\nE       \t(No symbol) [0x0x7ff612f98443]\nE       \t(No symbol) [0x0x7ff612f61311]\nE       \t(No symbol) [0x0x7ff612f620a3]\nE       \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE       \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_environment","time":{"start":1760977788230,"stop":1760977803801,"duration":15571},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff613186f65+78965]\n\tGetHandleVerifier [0x0x7ff613186fc0+79056]\n\t(No symbol) [0x0x7ff612f19dda]\n\t(No symbol) [0x0x7ff612f702ea]\n\t(No symbol) [0x0x7ff612f7059c]\n\t(No symbol) [0x0x7ff612fc3f37]\n\t(No symbol) [0x0x7ff612f986af]\n\t(No symbol) [0x0x7ff612fc0dbe]\n\t(No symbol) [0x0x7ff612f98443]\n\t(No symbol) [0x0x7ff612f61311]\n\t(No symbol) [0x0x7ff612f620a3]\n\tGetHandleVerifier [0x0x7ff61343e26d+2926461]\n\tGetHandleVerifier [0x0x7ff613438993+2903715]\n\tGetHandleVerifier [0x0x7ff613456aed+3026941]\n\tGetHandleVerifier [0x0x7ff6131a16fe+187406]\n\tGetHandleVerifier [0x0x7ff6131a96ef+220159]\n\tGetHandleVerifier [0x0x7ff61318faf4+114692]\n\tGetHandleVerifier [0x0x7ff61318fca9+115129]\n\tGetHandleVerifier [0x0x7ff6131764d8+10728]\n\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\n\tRtlUserThreadStart [0x0x7fff513dcc91+33]","statusTrace":"self = <test_system.test_environment.TestEnvironmentPage object at 0x0000014AE2F32050>, login_to_environment = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8088ea4e59651a05044c3ab8806eecc3\")>\n\n    @allure.story(\"周期页面-校验所有数字输入框-不输入不允许保存，输入框颜色改变\")\n    # @pytest.mark.run(order=1)\n    def test_environment_cycle_numinput1(self, login_to_environment):\n        driver = login_to_environment  # WebDriver 实例\n        environment = EnvironmentPage(driver)  # 用 driver 初始化 EnvironmentPage\n        environment.click_cycle()\n        value = \" \"\n        xpth_list = [\n            '//div[label[text()=\"分派开始时间:\"]]//input',\n            '//div[label[text()=\"分派结束时间:\"]]//input',\n            '//div[label[text()=\"生产指令结束时间:\"]]//input',\n            '//div[label[text()=\"显示开始时间:\"]]//input',\n            '//div[label[text()=\"显示结束时间:\"]]//input',\n        ]\n        environment.batch_modify_input(xpth_list, value)\n        div_xpth_list = [item.replace(\"//input\", \"//input/ancestor::div[2]\") for item in xpth_list]\n        environment.click_save_button()\n>       message = environment.get_find_message()\n\nTests\\test_system\\test_environment.py:165: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\environment_page.py:49: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8088ea4e59651a05044c3ab8806eecc3\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x0000014AE4A340D0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE       \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE       \t(No symbol) [0x0x7ff612f19dda]\nE       \t(No symbol) [0x0x7ff612f702ea]\nE       \t(No symbol) [0x0x7ff612f7059c]\nE       \t(No symbol) [0x0x7ff612fc3f37]\nE       \t(No symbol) [0x0x7ff612f986af]\nE       \t(No symbol) [0x0x7ff612fc0dbe]\nE       \t(No symbol) [0x0x7ff612f98443]\nE       \t(No symbol) [0x0x7ff612f61311]\nE       \t(No symbol) [0x0x7ff612f620a3]\nE       \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE       \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"c425c66528462ed","name":"test_environment_cycle_numinput1_failure","source":"c425c66528462ed.png","type":"image/png","size":63993},{"uid":"174c2fd8713b395f","name":"test_environment_cycle_numinput1_source","source":"174c2fd8713b395f.html","type":"text/html","size":1117107},{"uid":"4526006dea491d60","name":"log","source":"4526006dea491d60.txt","type":"text/plain","size":1627}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_environment::0","time":{"start":1760977821315,"stop":1760977823800,"duration":2485},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"周期页面-校验所有数字输入框-不输入不允许保存，输入框颜色改变"},{"name":"feature","value":"环境设置页用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_environment"},{"name":"subSuite","value":"TestEnvironmentPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_environment"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"b35bbff011c79da9.json","parameterValues":[]}