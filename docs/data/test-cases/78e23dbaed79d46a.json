{"uid":"78e23dbaed79d46a","name":"test_item_addcodefail","fullName":"Tests.test_material.test_materialVendors.TestItemPage#test_item_addcodefail","historyId":"8ee9f03a8d9c34536c15a07398266265","time":{"start":1753110365610,"stop":1753110369014,"duration":3404},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D1EEC09D0>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D1EEC09D0> = <test_materialVendors.TestItemPage object at 0x0000024D1FAB9300>.item","statusTrace":"self = <test_materialVendors.TestItemPage object at 0x0000024D1FAB9300>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9546ab04d47d948933f1491d17e22d9c\")>\n\n    @allure.story(\"添加供应商信息信息，只填写供应商代码，不填写联系人，不允许提交\")\n    # @pytest.mark.run(order=2)\n    def test_item_addcodefail(self, login_to_item):\n        # driver = login_to_item  # WebDriver 实例\n        # item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        self.item.click_add_button()\n        self.item.enter_texts(\n            \"//div[@id='tx0gv6lt-z2dv']//input\", \"text1231\"\n        )\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        input_box = self.item.get_find_element_xpath(\n            \"//div[@id='e4589osf-fgn3']//input\"\n        )\n        # 断言边框颜色是否为红色（可以根据实际RGB值调整）\n        sleep(1)\n        border_color = input_box.value_of_css_property(\"border-color\")\n        expected_color = \"rgb(255, 0, 0)\"  # 红色的 rgb 值\n        assert (\n            border_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{border_color}\"\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D1EEC09D0>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D1EEC09D0> = <test_materialVendors.TestItemPage object at 0x0000024D1FAB9300>.item\n\nTests\\test_material\\test_materialVendors.py:95: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1753110355739,"stop":1753110365608,"duration":9869},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"setup","time":{"start":1753110365608,"stop":1753110365610,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D1EEC09D0>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D1EEC09D0> = <test_materialVendors.TestItemPage object at 0x0000024D1FAB9300>.item","statusTrace":"self = <test_materialVendors.TestItemPage object at 0x0000024D1FAB9300>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9546ab04d47d948933f1491d17e22d9c\")>\n\n    @allure.story(\"添加供应商信息信息，只填写供应商代码，不填写联系人，不允许提交\")\n    # @pytest.mark.run(order=2)\n    def test_item_addcodefail(self, login_to_item):\n        # driver = login_to_item  # WebDriver 实例\n        # item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        self.item.click_add_button()\n        self.item.enter_texts(\n            \"//div[@id='tx0gv6lt-z2dv']//input\", \"text1231\"\n        )\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        input_box = self.item.get_find_element_xpath(\n            \"//div[@id='e4589osf-fgn3']//input\"\n        )\n        # 断言边框颜色是否为红色（可以根据实际RGB值调整）\n        sleep(1)\n        border_color = input_box.value_of_css_property(\"border-color\")\n        expected_color = \"rgb(255, 0, 0)\"  # 红色的 rgb 值\n        assert (\n            border_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{border_color}\"\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D1EEC09D0>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D1EEC09D0> = <test_materialVendors.TestItemPage object at 0x0000024D1FAB9300>.item\n\nTests\\test_material\\test_materialVendors.py:95: AssertionError","steps":[],"attachments":[{"uid":"70ab9a83c8be9754","name":"test_item_addcodefail_failure","source":"70ab9a83c8be9754.png","type":"image/png","size":102473},{"uid":"c502916e1c793d10","name":"test_item_addcodefail_source","source":"c502916e1c793d10.html","type":"text/html","size":1235264},{"uid":"d4c8f9cfc2567b6a","name":"log","source":"d4c8f9cfc2567b6a.txt","type":"text/plain","size":2771}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"login_to_item::0","time":{"start":1753110369191,"stop":1753110371307,"duration":2116},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"story","value":"添加供应商信息信息，只填写供应商代码，不填写联系人，不允许提交"},{"name":"feature","value":"供应商信息测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialVendors"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26464-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialVendors"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"45746c9ca4a90908","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D20026AA0>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D20026AA0> = <test_materialVendors.TestItemPage object at 0x0000024D1FAB9300>.item","time":{"start":1753110349493,"stop":1753110353446,"duration":3953}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"78e23dbaed79d46a.json","parameterValues":[]}