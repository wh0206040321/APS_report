{"uid":"fd41c9c561d4021b","name":"test_setting_perspective_display","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_perspective_display","historyId":"4b8f149b9523508812c958a07df4eb01","time":{"start":1760974327247,"stop":1760974335051,"duration":7804},"status":"failed","statusMessage":"AssertionError: assert '' == '测试透视表B'\n  \n  \u001B[0m\u001B[91m- 测试透视表B\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000014AE2C54400>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"29aed706b682d73b47b5f2e045fc0b36\")>\n\n    @allure.story(\"设置透视表格布局-布局列表设置为显示布局\")\n    # @pytest.mark.run(order=1)\n    def test_setting_perspective_display(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试透视表B\"\n        sleep(1)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n    \n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n        target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n    \n        # 获取父容器下所有 div\n        # 这一步是为了确定目标 div 在其父容器中的位置\n        parent_div = setting.get_find_element_xpath(f'//div[@id=\"container\"]')\n        all_children = parent_div.find_elements(By.XPATH, \"./div\")\n    \n        # 获取目标 div 的位置索引（从0开始）\n        # 这里是为了后续操作，比如点击目标 div 相关的按钮\n        index = all_children.index(target_div)\n        print(f\"目标 div 是第 {index + 1} 个 div\")  # 输出 3（如果从0开始则是2）\n        xpath = f'(//i[@class=\"el-icon-more layoutListDropdown\"])[{index + 1}]'\n        setting.hover(layout)\n    \n        setting.click_button(f'(//span[text()=\" 在导航中显示布局 \"])[{index + 1}]')\n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(1)\n        name = setting.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        )\n>       assert name.text == layout\nE       AssertionError: assert '' == '测试透视表B'\nE         \nE         \u001B[0m\u001B[91m- 测试透视表B\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:1404: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1760974308661,"stop":1760974327246,"duration":18585},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '' == '测试透视表B'\n  \n  \u001B[0m\u001B[91m- 测试透视表B\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000014AE2C54400>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"29aed706b682d73b47b5f2e045fc0b36\")>\n\n    @allure.story(\"设置透视表格布局-布局列表设置为显示布局\")\n    # @pytest.mark.run(order=1)\n    def test_setting_perspective_display(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试透视表B\"\n        sleep(1)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n    \n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n        target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n    \n        # 获取父容器下所有 div\n        # 这一步是为了确定目标 div 在其父容器中的位置\n        parent_div = setting.get_find_element_xpath(f'//div[@id=\"container\"]')\n        all_children = parent_div.find_elements(By.XPATH, \"./div\")\n    \n        # 获取目标 div 的位置索引（从0开始）\n        # 这里是为了后续操作，比如点击目标 div 相关的按钮\n        index = all_children.index(target_div)\n        print(f\"目标 div 是第 {index + 1} 个 div\")  # 输出 3（如果从0开始则是2）\n        xpath = f'(//i[@class=\"el-icon-more layoutListDropdown\"])[{index + 1}]'\n        setting.hover(layout)\n    \n        setting.click_button(f'(//span[text()=\" 在导航中显示布局 \"])[{index + 1}]')\n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(1)\n        name = setting.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        )\n>       assert name.text == layout\nE       AssertionError: assert '' == '测试透视表B'\nE         \nE         \u001B[0m\u001B[91m- 测试透视表B\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:1404: AssertionError","steps":[],"attachments":[{"uid":"5b02722304455ea7","name":"test_setting_perspective_display_failure","source":"5b02722304455ea7.png","type":"image/png","size":72566},{"uid":"eb93fe507f89a3e4","name":"test_setting_perspective_display_source","source":"eb93fe507f89a3e4.html","type":"text/html","size":1407291},{"uid":"503f5c1a6dbd0904","name":"log","source":"503f5c1a6dbd0904.txt","type":"text/plain","size":1569}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_setting::0","time":{"start":1760974336218,"stop":1760974338576,"duration":2358},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"标准应用设置测试用例"},{"name":"story","value":"设置透视表格布局-布局列表设置为显示布局"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"fd41c9c561d4021b.json","parameterValues":[]}