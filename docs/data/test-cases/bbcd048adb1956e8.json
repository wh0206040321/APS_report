{"uid":"bbcd048adb1956e8","name":"test_order_editnamesuccess","fullName":"Tests.test_items.test_order.TestOrderPage#test_order_editnamesuccess","historyId":"262ef2db860a1f9bec4b95d71ca67248","time":{"start":1761055273089,"stop":1761055279772,"duration":6683},"status":"failed","statusMessage":"AssertionError: assert ('2339' == '2339-30'\n  \n  \u001B[0m\u001B[91m- 2339-30\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 2339\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x00000173A64538E0>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8727d484a8b679a982cd5d157871d095\")>\n\n    @allure.story(\"修改物料名称，计划数量成功\")\n    # @pytest.mark.run(order=1)\n    def test_order_editnamesuccess(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        name = \"1测试A\"\n        # 选中制造订单代码\n        order.click_button(f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]')\n        # 点击修改按钮\n        order.click_edi_button()\n    \n        # 物料\n        randomitem_int = random.randint(1, 4)\n        order.click_button('//label[text()=\"物料\"]/parent::div/div//i')\n        order.click_button(\n            f'(//div[@class=\"vxe-grid--table-container\"]//tr[{randomitem_int}]/td[2])[2]'\n        )\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n        sleep(1)\n        edititem = order.get_find_element_xpath(\n            '(//label[text()=\"物料\"])[1]/parent::div//input'\n        ).get_attribute(\"value\")\n    \n        # 计划数量数字框输入文字字母符号数字\n        random_int = random.randint(1, 99)\n        num = order.get_find_element_xpath(\n            '(//label[text()=\"计划数量\"])[1]/parent::div//input'\n        )\n        num.send_keys(Keys.CONTROL, \"a\")\n        num.send_keys(Keys.BACK_SPACE)\n        order.enter_texts(\n            '(//label[text()=\"计划数量\"])[1]/parent::div//input', f\"{random_int}\"\n        )\n        editnum = order.get_find_element_xpath(\n            '(//label[text()=\"计划数量\"])[1]/parent::div//input'\n        ).get_attribute(\"value\")\n    \n        # 点击确定\n        order.click_confirm_button()\n        # 定位表格内容\n        orderitem = order.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]/ancestor::tr/td[5]/div'\n        ).text\n        ordernum = order.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]/ancestor::tr/td[10]/div'\n        ).text\n>       assert orderitem == edititem and ordernum == editnum\nE       AssertionError: assert ('2339' == '2339-30'\nE         \nE         \u001B[0m\u001B[91m- 2339-30\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 2339\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_order.py:566: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_order","time":{"start":1761055261983,"stop":1761055273087,"duration":11104},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('2339' == '2339-30'\n  \n  \u001B[0m\u001B[91m- 2339-30\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 2339\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x00000173A64538E0>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8727d484a8b679a982cd5d157871d095\")>\n\n    @allure.story(\"修改物料名称，计划数量成功\")\n    # @pytest.mark.run(order=1)\n    def test_order_editnamesuccess(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        name = \"1测试A\"\n        # 选中制造订单代码\n        order.click_button(f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]')\n        # 点击修改按钮\n        order.click_edi_button()\n    \n        # 物料\n        randomitem_int = random.randint(1, 4)\n        order.click_button('//label[text()=\"物料\"]/parent::div/div//i')\n        order.click_button(\n            f'(//div[@class=\"vxe-grid--table-container\"]//tr[{randomitem_int}]/td[2])[2]'\n        )\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n        sleep(1)\n        edititem = order.get_find_element_xpath(\n            '(//label[text()=\"物料\"])[1]/parent::div//input'\n        ).get_attribute(\"value\")\n    \n        # 计划数量数字框输入文字字母符号数字\n        random_int = random.randint(1, 99)\n        num = order.get_find_element_xpath(\n            '(//label[text()=\"计划数量\"])[1]/parent::div//input'\n        )\n        num.send_keys(Keys.CONTROL, \"a\")\n        num.send_keys(Keys.BACK_SPACE)\n        order.enter_texts(\n            '(//label[text()=\"计划数量\"])[1]/parent::div//input', f\"{random_int}\"\n        )\n        editnum = order.get_find_element_xpath(\n            '(//label[text()=\"计划数量\"])[1]/parent::div//input'\n        ).get_attribute(\"value\")\n    \n        # 点击确定\n        order.click_confirm_button()\n        # 定位表格内容\n        orderitem = order.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]/ancestor::tr/td[5]/div'\n        ).text\n        ordernum = order.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]/ancestor::tr/td[10]/div'\n        ).text\n>       assert orderitem == edititem and ordernum == editnum\nE       AssertionError: assert ('2339' == '2339-30'\nE         \nE         \u001B[0m\u001B[91m- 2339-30\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 2339\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_order.py:566: AssertionError","steps":[],"attachments":[{"uid":"a02a0bb40aa51a52","name":"test_order_editnamesuccess_failure","source":"a02a0bb40aa51a52.png","type":"image/png","size":150720},{"uid":"47005a28bbaa302b","name":"test_order_editnamesuccess_source","source":"47005a28bbaa302b.html","type":"text/html","size":1663035},{"uid":"1a06d8adfc5be321","name":"log","source":"1a06d8adfc5be321.txt","type":"text/plain","size":2187}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_order::0","time":{"start":1761055280626,"stop":1761055282908,"duration":2282},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"修改物料名称，计划数量成功"},{"name":"feature","value":"制造订单表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_order"},{"name":"subSuite","value":"TestOrderPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"bbcd048adb1956e8.json","parameterValues":[]}