{"uid":"175aab589194af3e","name":"test_psi_update2","fullName":"Tests.test_system.test_psi.TestPSIPage#test_psi_update2","historyId":"9047c10eb1cb284e38885859cc4c170c","time":{"start":1760981167525,"stop":1760981178396,"duration":10871},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"添加全部\"]","statusTrace":"self = <Pages.systemPage.psi_page.PsiPage object at 0x0000014AE4CB7070>, by_or_element = 'xpath', value = '//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"添加全部\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3a76e0dc7a6fd49791c43c77ae531a67\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000014AE4D49360>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE       \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE       \t(No symbol) [0x0x7ff612f19dda]\nE       \t(No symbol) [0x0x7ff612f702ea]\nE       \t(No symbol) [0x0x7ff612f7059c]\nE       \t(No symbol) [0x0x7ff612fc3f37]\nE       \t(No symbol) [0x0x7ff612f986af]\nE       \t(No symbol) [0x0x7ff612fc0dbe]\nE       \t(No symbol) [0x0x7ff612f98443]\nE       \t(No symbol) [0x0x7ff612f61311]\nE       \t(No symbol) [0x0x7ff612f620a3]\nE       \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE       \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_psi.TestPSIPage object at 0x0000014AE3136470>, login_to_psi = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3a76e0dc7a6fd49791c43c77ae531a67\")>\n\n    @allure.story(\"修改psi名称,最上位行收集条件,筛选方法成功\")\n    # @pytest.mark.run(order=1)\n    def test_psi_update2(self, login_to_psi):\n        driver = login_to_psi  # WebDriver 实例\n        psi = PsiPage(driver)  # 用 driver 初始化 PsiPage\n        name = \"添加全部\"\n        name1 = \"1测试psi2\"\n        list_ = [\n            '//div[p[text()=\"PSI名称: \"]]//input',\n            '//div[p[text()=\"最上位行收集条件: \"]]//input',\n            '//div[p[text()=\"筛选方法: \"]]//input',\n        ]\n>       psi.click_button(f'//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"{name}\"]')\n\nTests\\test_system\\test_psi.py:310: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\psi_page.py:27: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.psi_page.PsiPage object at 0x0000014AE4CB7070>, by_or_element = 'xpath', value = '//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"添加全部\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"添加全部\"]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_psi","time":{"start":1760981151229,"stop":1760981167523,"duration":16294},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"添加全部\"]","statusTrace":"self = <Pages.systemPage.psi_page.PsiPage object at 0x0000014AE4CB7070>, by_or_element = 'xpath', value = '//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"添加全部\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3a76e0dc7a6fd49791c43c77ae531a67\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000014AE4D49360>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE       \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE       \t(No symbol) [0x0x7ff612f19dda]\nE       \t(No symbol) [0x0x7ff612f702ea]\nE       \t(No symbol) [0x0x7ff612f7059c]\nE       \t(No symbol) [0x0x7ff612fc3f37]\nE       \t(No symbol) [0x0x7ff612f986af]\nE       \t(No symbol) [0x0x7ff612fc0dbe]\nE       \t(No symbol) [0x0x7ff612f98443]\nE       \t(No symbol) [0x0x7ff612f61311]\nE       \t(No symbol) [0x0x7ff612f620a3]\nE       \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE       \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_psi.TestPSIPage object at 0x0000014AE3136470>, login_to_psi = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3a76e0dc7a6fd49791c43c77ae531a67\")>\n\n    @allure.story(\"修改psi名称,最上位行收集条件,筛选方法成功\")\n    # @pytest.mark.run(order=1)\n    def test_psi_update2(self, login_to_psi):\n        driver = login_to_psi  # WebDriver 实例\n        psi = PsiPage(driver)  # 用 driver 初始化 PsiPage\n        name = \"添加全部\"\n        name1 = \"1测试psi2\"\n        list_ = [\n            '//div[p[text()=\"PSI名称: \"]]//input',\n            '//div[p[text()=\"最上位行收集条件: \"]]//input',\n            '//div[p[text()=\"筛选方法: \"]]//input',\n        ]\n>       psi.click_button(f'//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"{name}\"]')\n\nTests\\test_system\\test_psi.py:310: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\psi_page.py:27: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.psi_page.PsiPage object at 0x0000014AE4CB7070>, by_or_element = 'xpath', value = '//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"添加全部\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"添加全部\"]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"71c94b2b4d79269d","name":"test_psi_update2_failure","source":"71c94b2b4d79269d.png","type":"image/png","size":74485},{"uid":"a6e73a3f9ceea6c5","name":"test_psi_update2_source","source":"a6e73a3f9ceea6c5.html","type":"text/html","size":1137005},{"uid":"ed0e0c8a2f091270","name":"log","source":"ed0e0c8a2f091270.txt","type":"text/plain","size":1096}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_psi::0","time":{"start":1760981179041,"stop":1760981181509,"duration":2468},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"修改psi名称,最上位行收集条件,筛选方法成功"},{"name":"feature","value":"PSI设置用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_psi"},{"name":"subSuite","value":"TestPSIPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_psi"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"175aab589194af3e.json","parameterValues":[]}