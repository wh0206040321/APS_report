{"uid":"c2843b5b75599a6","name":"test_changeR_addrepe","fullName":"Tests.test_items.test_changeR.TestChangeRPage#test_changeR_addrepe","historyId":"d0f8ecb00fb9ad3100aa35c001b2ce75","time":{"start":1760362773361,"stop":1760362787824,"duration":14463},"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = len([])","statusTrace":"self = <test_items.test_changeR.TestChangeRPage object at 0x00000216A206AD70>, login_to_changeR = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2f31d43942ed8c31315d4a90452276f7\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_changeR_addrepe(self, login_to_changeR):\n        driver = login_to_changeR  # WebDriver 实例\n        change = ChangeR(driver)  # 用 driver 初始化 ChangeR\n        code1 = SharedDataUtil.load_data().get(\"resource\")\n        code2 = SharedDataUtil.load_data().get(\"item1\")\n        code3 = SharedDataUtil.load_data().get(\"item2\")\n        change.click_add_button()\n        # 点击资源\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[1]'\n        )\n        # 勾选框\n        rows = driver.find_elements(By.XPATH, f\"//table[.//tr[td[3]//span[text()='{code1}']]]//tr\")\n        for index, row in enumerate(rows, start=1):\n            td3_text = row.find_elements(By.TAG_NAME, \"td\")[2].text.strip()\n            if f\"{code1}\" == td3_text:\n                print(f\"✅ 找到匹配行，行号为：{index}\")\n    \n                # 3. 使用这个行号 idx 构造另一个 XPath\n                target_xpath = f'(//table[.//tr[{index}]/td[2][contains(@class,\"col--checkbox\")]])[2]//tr[{index}]/td[2]/div/span'\n                target_element = change.get_find_element_xpath(target_xpath)\n    \n                # 4. 操作目标元素\n                target_element.click()\n                break  # 如果只处理第一个匹配行，可以 break\n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 点击前生产特征\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[2]'\n        )\n        sleep(3)\n        # 勾选框\n        rows = driver.find_elements(By.XPATH,\n                                    f'(//div[@class=\"vxe-table--body-wrapper body--wrapper\" and .//table[.//tr[td[3]//span[text()=\"{code2}\"]]]])[2]//table//tr')\n        for index, row in enumerate(rows, start=1):\n            td3_text = row.find_elements(By.TAG_NAME, \"td\")[2].text.strip()\n            if f\"{code2}\" == td3_text:\n                print(f\"✅ 找到匹配行，行号为：{index}\")\n    \n                # 3. 使用这个行号 idx 构造另一个 XPath\n                target_xpath = f'(//table[.//tr[{index}]/td[2][contains(@class,\"col--checkbox\")]])[2]//tr[{index}]/td[.//span[@class=\"vxe-cell--checkbox\"]]//div/span'\n                # 点击前重新获取元素，防止 stale\n                try:\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n                except StaleElementReferenceException:\n                    print(\"⚠️ 元素过期，重新获取一次\")\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n    \n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 点击后生产特征\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[3]'\n        )\n        sleep(3)\n        # 勾选框\n        rows = driver.find_elements(By.XPATH,\n                                    f'(//div[@class=\"vxe-table--body-wrapper body--wrapper\" and .//table[.//tr[td[3]//span[text()=\"{code2}\"]]]])[2]//table//tr')\n        for index, row in enumerate(rows, start=1):\n            td3_text = row.find_elements(By.TAG_NAME, \"td\")[2].text.strip()\n            if f\"{code3}\" == td3_text:\n                print(f\"✅ 找到匹配行，行号为：{index}\")\n    \n                # 3. 使用这个行号 idx 构造另一个 XPath\n                target_xpath = f'(//table[.//tr[{index}]/td[2][contains(@class,\"col--checkbox\")]])[2]//tr[{index}]/td[.//span[@class=\"vxe-cell--checkbox\"]]//div/span'\n                # 点击前重新获取元素，防止 stale\n                try:\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n                except StaleElementReferenceException:\n                    print(\"⚠️ 元素过期，重新获取一次\")\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n    \n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n        sleep(1)\n        eles = driver.find_elements(By.XPATH, '//div[text()=\" 记录已存在,请检查！ \"]')\n>       assert len(eles) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\nTests\\test_items\\test_changeR.py:641: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_changeR","time":{"start":1760362763713,"stop":1760362773361,"duration":9648},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = len([])","statusTrace":"self = <test_items.test_changeR.TestChangeRPage object at 0x00000216A206AD70>, login_to_changeR = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2f31d43942ed8c31315d4a90452276f7\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_changeR_addrepe(self, login_to_changeR):\n        driver = login_to_changeR  # WebDriver 实例\n        change = ChangeR(driver)  # 用 driver 初始化 ChangeR\n        code1 = SharedDataUtil.load_data().get(\"resource\")\n        code2 = SharedDataUtil.load_data().get(\"item1\")\n        code3 = SharedDataUtil.load_data().get(\"item2\")\n        change.click_add_button()\n        # 点击资源\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[1]'\n        )\n        # 勾选框\n        rows = driver.find_elements(By.XPATH, f\"//table[.//tr[td[3]//span[text()='{code1}']]]//tr\")\n        for index, row in enumerate(rows, start=1):\n            td3_text = row.find_elements(By.TAG_NAME, \"td\")[2].text.strip()\n            if f\"{code1}\" == td3_text:\n                print(f\"✅ 找到匹配行，行号为：{index}\")\n    \n                # 3. 使用这个行号 idx 构造另一个 XPath\n                target_xpath = f'(//table[.//tr[{index}]/td[2][contains(@class,\"col--checkbox\")]])[2]//tr[{index}]/td[2]/div/span'\n                target_element = change.get_find_element_xpath(target_xpath)\n    \n                # 4. 操作目标元素\n                target_element.click()\n                break  # 如果只处理第一个匹配行，可以 break\n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 点击前生产特征\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[2]'\n        )\n        sleep(3)\n        # 勾选框\n        rows = driver.find_elements(By.XPATH,\n                                    f'(//div[@class=\"vxe-table--body-wrapper body--wrapper\" and .//table[.//tr[td[3]//span[text()=\"{code2}\"]]]])[2]//table//tr')\n        for index, row in enumerate(rows, start=1):\n            td3_text = row.find_elements(By.TAG_NAME, \"td\")[2].text.strip()\n            if f\"{code2}\" == td3_text:\n                print(f\"✅ 找到匹配行，行号为：{index}\")\n    \n                # 3. 使用这个行号 idx 构造另一个 XPath\n                target_xpath = f'(//table[.//tr[{index}]/td[2][contains(@class,\"col--checkbox\")]])[2]//tr[{index}]/td[.//span[@class=\"vxe-cell--checkbox\"]]//div/span'\n                # 点击前重新获取元素，防止 stale\n                try:\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n                except StaleElementReferenceException:\n                    print(\"⚠️ 元素过期，重新获取一次\")\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n    \n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 点击后生产特征\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[3]'\n        )\n        sleep(3)\n        # 勾选框\n        rows = driver.find_elements(By.XPATH,\n                                    f'(//div[@class=\"vxe-table--body-wrapper body--wrapper\" and .//table[.//tr[td[3]//span[text()=\"{code2}\"]]]])[2]//table//tr')\n        for index, row in enumerate(rows, start=1):\n            td3_text = row.find_elements(By.TAG_NAME, \"td\")[2].text.strip()\n            if f\"{code3}\" == td3_text:\n                print(f\"✅ 找到匹配行，行号为：{index}\")\n    \n                # 3. 使用这个行号 idx 构造另一个 XPath\n                target_xpath = f'(//table[.//tr[{index}]/td[2][contains(@class,\"col--checkbox\")]])[2]//tr[{index}]/td[.//span[@class=\"vxe-cell--checkbox\"]]//div/span'\n                # 点击前重新获取元素，防止 stale\n                try:\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n                except StaleElementReferenceException:\n                    print(\"⚠️ 元素过期，重新获取一次\")\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n    \n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n        sleep(1)\n        eles = driver.find_elements(By.XPATH, '//div[text()=\" 记录已存在,请检查！ \"]')\n>       assert len(eles) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\nTests\\test_items\\test_changeR.py:641: AssertionError","steps":[],"attachments":[{"uid":"ae30ab18b776378","name":"test_changeR_addrepe_failure","source":"ae30ab18b776378.png","type":"image/png","size":249069},{"uid":"f78043fe9ec86857","name":"test_changeR_addrepe_source","source":"f78043fe9ec86857.html","type":"text/html","size":869218},{"uid":"ccc79fc86cdb018a","name":"test_changeR_addrepe_failure","source":"ccc79fc86cdb018a.png","type":"image/png","size":82592},{"uid":"57b0fa71b22eb5e2","name":"test_changeR_addrepe_source","source":"57b0fa71b22eb5e2.html","type":"text/html","size":1258649},{"uid":"3c0dbb5d9923bdc9","name":"log","source":"3c0dbb5d9923bdc9.txt","type":"text/plain","size":2514}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":5},"afterStages":[{"name":"login_to_changeR::0","time":{"start":1760362788263,"stop":1760362790473,"duration":2210},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"添加数据重复"},{"name":"feature","value":"资源切换表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_changeR"},{"name":"subSuite","value":"TestChangeRPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_changeR"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"c2843b5b75599a6.json","parameterValues":[]}