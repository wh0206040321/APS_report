{"uid":"3228e7b08938cb66","name":"test_master_addserialfail","fullName":"Tests.test_items.test_master.TestMasterPage#test_master_addserialfail","historyId":"046b8834b33db0dc2a3603f2fa24bac4","time":{"start":1756276794037,"stop":1756276806983,"duration":12946},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input","statusTrace":"self = <Pages.itemsPage.master_page.MasterPage object at 0x000001F02816DF90>, by_or_element = 'xpath'\nvalue = '//table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"176c658392a1a9ef097073e04e237f20\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001F028138940>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff79bb46f65+78965]\nE       \tGetHandleVerifier [0x0x7ff79bb46fc0+79056]\nE       \t(No symbol) [0x0x7ff79b8d9dda]\nE       \t(No symbol) [0x0x7ff79b9302ea]\nE       \t(No symbol) [0x0x7ff79b93059c]\nE       \t(No symbol) [0x0x7ff79b983f37]\nE       \t(No symbol) [0x0x7ff79b9586af]\nE       \t(No symbol) [0x0x7ff79b980dbe]\nE       \t(No symbol) [0x0x7ff79b958443]\nE       \t(No symbol) [0x0x7ff79b921311]\nE       \t(No symbol) [0x0x7ff79b9220a3]\nE       \tGetHandleVerifier [0x0x7ff79bdfe26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff79bdf8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff79be16aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff79bb616fe+187406]\nE       \tGetHandleVerifier [0x0x7ff79bb696ef+220159]\nE       \tGetHandleVerifier [0x0x7ff79bb4faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff79bb4fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff79bb364d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe01a57374+20]\nE       \tRtlUserThreadStart [0x0x7ffe0239cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_master.TestMasterPage object at 0x000001F0280F0AC0>\nlogin_to_master = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"176c658392a1a9ef097073e04e237f20\")>\n\n    @allure.story(\"添加工艺产能信息，只填写物料和工序选定器和工序编号，不允许提交\")\n    # @pytest.mark.run(order=3)\n    def test_master_addserialfail(self, login_to_master):\n        driver = login_to_master  # WebDriver 实例\n        master = MasterPage(driver)  # 用 driver 初始化 MasterPage\n        master.click_add_button()\n    \n        # 填写订物料代码\n        master.click_button('//span[text()=\" 物料代码： \"]/parent::div//i')\n        master.click_button(\n            '(//table[@class=\"vxe-table--body\"]//tr[1]/td[2])[last()]'\n        )\n        master.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]')\n    \n        # 点击工序选定器\n>       master.click_button(\n            '//table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input'\n        )\n\nTests\\test_items\\test_master.py:127: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\master_page.py:43: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.master_page.MasterPage object at 0x000001F02816DF90>, by_or_element = 'xpath'\nvalue = '//table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"login_to_master","time":{"start":1756276785465,"stop":1756276794037,"duration":8572},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input","statusTrace":"self = <Pages.itemsPage.master_page.MasterPage object at 0x000001F02816DF90>, by_or_element = 'xpath'\nvalue = '//table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"176c658392a1a9ef097073e04e237f20\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001F028138940>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff79bb46f65+78965]\nE       \tGetHandleVerifier [0x0x7ff79bb46fc0+79056]\nE       \t(No symbol) [0x0x7ff79b8d9dda]\nE       \t(No symbol) [0x0x7ff79b9302ea]\nE       \t(No symbol) [0x0x7ff79b93059c]\nE       \t(No symbol) [0x0x7ff79b983f37]\nE       \t(No symbol) [0x0x7ff79b9586af]\nE       \t(No symbol) [0x0x7ff79b980dbe]\nE       \t(No symbol) [0x0x7ff79b958443]\nE       \t(No symbol) [0x0x7ff79b921311]\nE       \t(No symbol) [0x0x7ff79b9220a3]\nE       \tGetHandleVerifier [0x0x7ff79bdfe26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff79bdf8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff79be16aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff79bb616fe+187406]\nE       \tGetHandleVerifier [0x0x7ff79bb696ef+220159]\nE       \tGetHandleVerifier [0x0x7ff79bb4faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff79bb4fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff79bb364d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe01a57374+20]\nE       \tRtlUserThreadStart [0x0x7ffe0239cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_master.TestMasterPage object at 0x000001F0280F0AC0>\nlogin_to_master = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"176c658392a1a9ef097073e04e237f20\")>\n\n    @allure.story(\"添加工艺产能信息，只填写物料和工序选定器和工序编号，不允许提交\")\n    # @pytest.mark.run(order=3)\n    def test_master_addserialfail(self, login_to_master):\n        driver = login_to_master  # WebDriver 实例\n        master = MasterPage(driver)  # 用 driver 初始化 MasterPage\n        master.click_add_button()\n    \n        # 填写订物料代码\n        master.click_button('//span[text()=\" 物料代码： \"]/parent::div//i')\n        master.click_button(\n            '(//table[@class=\"vxe-table--body\"]//tr[1]/td[2])[last()]'\n        )\n        master.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]')\n    \n        # 点击工序选定器\n>       master.click_button(\n            '//table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input'\n        )\n\nTests\\test_items\\test_master.py:127: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\master_page.py:43: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.master_page.MasterPage object at 0x000001F02816DF90>, by_or_element = 'xpath'\nvalue = '//table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[.//div[@class=\"vxe-input type--text size--mini is--controls\"]]//tr[1]/td[2]//input\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"21b3a692d2789eaf","name":"test_master_addserialfail_failure","source":"21b3a692d2789eaf.png","type":"image/png","size":128595},{"uid":"d19390a77ba2373","name":"test_master_addserialfail_source","source":"d19390a77ba2373.html","type":"text/html","size":1417372},{"uid":"e9a339af1cea5b66","name":"log","source":"e9a339af1cea5b66.txt","type":"text/plain","size":1747}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_master::0","time":{"start":1756276807309,"stop":1756276809477,"duration":2168},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"工艺产能表测试用例"},{"name":"story","value":"添加工艺产能信息，只填写物料和工序选定器和工序编号，不允许提交"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_master"},{"name":"subSuite","value":"TestMasterPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"22312-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_master"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e52b360c0da2c3fb","status":"passed","time":{"start":1755784419874,"stop":1755784427743,"duration":7869}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"3228e7b08938cb66.json","parameterValues":[]}