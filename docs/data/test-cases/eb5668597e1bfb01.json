{"uid":"eb5668597e1bfb01","name":"test_sched_add_resourcesuccess1","fullName":"Tests.test_items.test_sched.TestSchedPage#test_sched_add_resourcesuccess1","historyId":"f2ad98392f7f1fb715bd9eba9500c469","time":{"start":1760971960590,"stop":1760971978599,"duration":18009},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[text()=\"资源选择策略\"]/following-sibling::div)[2]//i","statusTrace":"self = <Pages.itemsPage.sched_page.SchedPage object at 0x0000014AE2F39BD0>, by_or_element = 'xpath', value = '(//div[text()=\"资源选择策略\"]/following-sibling::div)[2]//i', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5001f6b7e783975442c5b16917145374\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000014AE327BE20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_sched.TestSchedPage object at 0x0000014AE30B3040>, login_to_sched = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5001f6b7e783975442c5b16917145374\")>\n\n    @allure.story(\"属性设置-新增资源选择策略-评估方案\")\n    # @pytest.mark.run(order=1)\n    def test_sched_add_resourcesuccess1(self, login_to_sched):\n        driver = login_to_sched  # WebDriver 实例\n        sched = SchedPage(driver)  # 用 driver 初始化 SchedPage\n        name = \"排产方案(订单级)复制\"\n        # 选择排产方案(订单级)复制方案\n        sched.click_button(f'//ul[@visible=\"visible\"]//ul//span[text()=\"{name}\"]')\n        sched.click_attribute_button()\n        # 点击对话框\n        sched.click_button(\n            '//div[text()=\"资源选择策略\"]/following-sibling::div//i[@class=\"ivu-icon ivu-icon-md-albums\"]'\n        )\n    \n        # 点击策略\n        sched.click_button('(//i[@class=\"ivu-icon ivu-icon-md-add\"])[2]')\n        # 填写策略名称\n        sleep(1)\n        sched.enter_texts(\n            '(//p[text()=\" 策略名称 \"])[2]/following-sibling::div//input', \"策略名称222\"\n        )\n        # 点击确认\n        sched.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[3]/button[1]'\n        )\n    \n        sched.click_button('//div[text()=\" 策略名称222 \"]')\n    \n        sched.click_button(\n            '(//input[@class=\"ivu-select-input\" and @placeholder=\"请选择\"])[1]'\n        )\n        sched.click_button('//li[text()=\"AS相同物料优先\"]')\n        sched.click_button('(//input[@placeholder=\"请输入数字\"])[2]')\n        sched.enter_texts('(//input[@placeholder=\"请输入数字\"])[2]', \"1aQ!~_-1+=0.8\")\n    \n        before_input_text = sched.get_find_element_xpath(\n            '//div[@class=\"flex-1\"]//input[@class=\"ivu-select-input\"]'\n        ).get_attribute(\"value\")\n        before_input_num = sched.get_find_element_xpath(\n            '(//input[@placeholder=\"请输入数字\"])[2]'\n        ).get_attribute(\"value\")\n    \n        sched.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n    \n        input_after = sched.get_find_element_xpath(\n            '//div[text()=\"资源选择策略\"]/following-sibling::div//p'\n        )\n        sched.click_ok_button()\n        # 点击对话框\n>       sched.click_button(\n            '(//div[text()=\"资源选择策略\"]/following-sibling::div)[2]//i'\n        )\n\nTests\\test_items\\test_sched.py:1182: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\sched_page.py:69: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.sched_page.SchedPage object at 0x0000014AE2F39BD0>, by_or_element = 'xpath', value = '(//div[text()=\"资源选择策略\"]/following-sibling::div)[2]//i', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[text()=\"资源选择策略\"]/following-sibling::div)[2]//i\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_sched","time":{"start":1760971943212,"stop":1760971960588,"duration":17376},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[text()=\"资源选择策略\"]/following-sibling::div)[2]//i","statusTrace":"self = <Pages.itemsPage.sched_page.SchedPage object at 0x0000014AE2F39BD0>, by_or_element = 'xpath', value = '(//div[text()=\"资源选择策略\"]/following-sibling::div)[2]//i', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5001f6b7e783975442c5b16917145374\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000014AE327BE20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_sched.TestSchedPage object at 0x0000014AE30B3040>, login_to_sched = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5001f6b7e783975442c5b16917145374\")>\n\n    @allure.story(\"属性设置-新增资源选择策略-评估方案\")\n    # @pytest.mark.run(order=1)\n    def test_sched_add_resourcesuccess1(self, login_to_sched):\n        driver = login_to_sched  # WebDriver 实例\n        sched = SchedPage(driver)  # 用 driver 初始化 SchedPage\n        name = \"排产方案(订单级)复制\"\n        # 选择排产方案(订单级)复制方案\n        sched.click_button(f'//ul[@visible=\"visible\"]//ul//span[text()=\"{name}\"]')\n        sched.click_attribute_button()\n        # 点击对话框\n        sched.click_button(\n            '//div[text()=\"资源选择策略\"]/following-sibling::div//i[@class=\"ivu-icon ivu-icon-md-albums\"]'\n        )\n    \n        # 点击策略\n        sched.click_button('(//i[@class=\"ivu-icon ivu-icon-md-add\"])[2]')\n        # 填写策略名称\n        sleep(1)\n        sched.enter_texts(\n            '(//p[text()=\" 策略名称 \"])[2]/following-sibling::div//input', \"策略名称222\"\n        )\n        # 点击确认\n        sched.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[3]/button[1]'\n        )\n    \n        sched.click_button('//div[text()=\" 策略名称222 \"]')\n    \n        sched.click_button(\n            '(//input[@class=\"ivu-select-input\" and @placeholder=\"请选择\"])[1]'\n        )\n        sched.click_button('//li[text()=\"AS相同物料优先\"]')\n        sched.click_button('(//input[@placeholder=\"请输入数字\"])[2]')\n        sched.enter_texts('(//input[@placeholder=\"请输入数字\"])[2]', \"1aQ!~_-1+=0.8\")\n    \n        before_input_text = sched.get_find_element_xpath(\n            '//div[@class=\"flex-1\"]//input[@class=\"ivu-select-input\"]'\n        ).get_attribute(\"value\")\n        before_input_num = sched.get_find_element_xpath(\n            '(//input[@placeholder=\"请输入数字\"])[2]'\n        ).get_attribute(\"value\")\n    \n        sched.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n    \n        input_after = sched.get_find_element_xpath(\n            '//div[text()=\"资源选择策略\"]/following-sibling::div//p'\n        )\n        sched.click_ok_button()\n        # 点击对话框\n>       sched.click_button(\n            '(//div[text()=\"资源选择策略\"]/following-sibling::div)[2]//i'\n        )\n\nTests\\test_items\\test_sched.py:1182: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\sched_page.py:69: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.sched_page.SchedPage object at 0x0000014AE2F39BD0>, by_or_element = 'xpath', value = '(//div[text()=\"资源选择策略\"]/following-sibling::div)[2]//i', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[text()=\"资源选择策略\"]/following-sibling::div)[2]//i\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"ef807c624e4d676f","name":"test_sched_add_resourcesuccess1_failure","source":"ef807c624e4d676f.png","type":"image/png","size":90770},{"uid":"5b11146abbb1f942","name":"test_sched_add_resourcesuccess1_source","source":"5b11146abbb1f942.html","type":"text/html","size":1150298},{"uid":"d94cdc6d85a99be8","name":"log","source":"d94cdc6d85a99be8.txt","type":"text/plain","size":3018}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_sched::0","time":{"start":1760971979027,"stop":1760971981356,"duration":2329},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"方案管理表测试用例"},{"name":"story","value":"属性设置-新增资源选择策略-评估方案"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_sched"},{"name":"subSuite","value":"TestSchedPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_sched"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"eb5668597e1bfb01.json","parameterValues":[]}