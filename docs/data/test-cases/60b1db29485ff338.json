{"uid":"60b1db29485ff338","name":"test_changeR_delsuccess2","fullName":"Tests.test_items.test_changeR.TestChangeRPage#test_changeR_delsuccess2","historyId":"e991c937492a94db5bd2434f46492934","time":{"start":1753707599525,"stop":1753707609759,"duration":10234},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@xid=\"2\" and @class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"11\"] and td[3]//span[text()=\"12\"]]//td[2]","statusTrace":"self = <Pages.itemsPage.changeR_page.ChangeR object at 0x000002CDB7D62BF0>, by_or_element = 'xpath'\nvalue = '//table[@xid=\"2\" and @class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"11\"] and td[3]//span[text()=\"12\"]]//td[2]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c24a9d1145da3c0b8f874683c12638f9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002CDB82B4310>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff787026f65+78965]\nE       \tGetHandleVerifier [0x0x7ff787026fc0+79056]\nE       \t(No symbol) [0x0x7ff786db9dda]\nE       \t(No symbol) [0x0x7ff786e102ea]\nE       \t(No symbol) [0x0x7ff786e1059c]\nE       \t(No symbol) [0x0x7ff786e63f37]\nE       \t(No symbol) [0x0x7ff786e386af]\nE       \t(No symbol) [0x0x7ff786e60dbe]\nE       \t(No symbol) [0x0x7ff786e38443]\nE       \t(No symbol) [0x0x7ff786e01311]\nE       \t(No symbol) [0x0x7ff786e020a3]\nE       \tGetHandleVerifier [0x0x7ff7872de26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7872d8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7872f6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7870416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7870496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff78702faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff78702fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7870164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe499c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffe4a2fcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_changeR.TestChangeRPage object at 0x000002CDB7BD71C0>\nlogin_to_changeR = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c24a9d1145da3c0b8f874683c12638f9\")>\n\n    @allure.story(\"删除数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_changeR_delsuccess2(self, login_to_changeR):\n        driver = login_to_changeR  # WebDriver 实例\n        change = ChangeR(driver)  # 用 driver 初始化 ChangeR\n        code1 = \"11\"\n        code2 = \"12\"\n        # 定位第一行\n>       change.click_button(\n            f'//table[@xid=\"2\" and @class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"{code1}\"] and td[3]//span[text()=\"{code2}\"]]//td[2]'\n        )\n\nTests\\test_items\\test_changeR.py:522: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\changeR_page.py:39: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.changeR_page.ChangeR object at 0x000002CDB7D62BF0>, by_or_element = 'xpath'\nvalue = '//table[@xid=\"2\" and @class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"11\"] and td[3]//span[text()=\"12\"]]//td[2]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@xid=\"2\" and @class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"11\"] and td[3]//span[text()=\"12\"]]//td[2]\n\nPages\\base_page.py:52: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_changeR","time":{"start":1753707591912,"stop":1753707599524,"duration":7612},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@xid=\"2\" and @class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"11\"] and td[3]//span[text()=\"12\"]]//td[2]","statusTrace":"self = <Pages.itemsPage.changeR_page.ChangeR object at 0x000002CDB7D62BF0>, by_or_element = 'xpath'\nvalue = '//table[@xid=\"2\" and @class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"11\"] and td[3]//span[text()=\"12\"]]//td[2]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c24a9d1145da3c0b8f874683c12638f9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002CDB82B4310>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff787026f65+78965]\nE       \tGetHandleVerifier [0x0x7ff787026fc0+79056]\nE       \t(No symbol) [0x0x7ff786db9dda]\nE       \t(No symbol) [0x0x7ff786e102ea]\nE       \t(No symbol) [0x0x7ff786e1059c]\nE       \t(No symbol) [0x0x7ff786e63f37]\nE       \t(No symbol) [0x0x7ff786e386af]\nE       \t(No symbol) [0x0x7ff786e60dbe]\nE       \t(No symbol) [0x0x7ff786e38443]\nE       \t(No symbol) [0x0x7ff786e01311]\nE       \t(No symbol) [0x0x7ff786e020a3]\nE       \tGetHandleVerifier [0x0x7ff7872de26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7872d8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7872f6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7870416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7870496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff78702faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff78702fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7870164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe499c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffe4a2fcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_changeR.TestChangeRPage object at 0x000002CDB7BD71C0>\nlogin_to_changeR = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c24a9d1145da3c0b8f874683c12638f9\")>\n\n    @allure.story(\"删除数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_changeR_delsuccess2(self, login_to_changeR):\n        driver = login_to_changeR  # WebDriver 实例\n        change = ChangeR(driver)  # 用 driver 初始化 ChangeR\n        code1 = \"11\"\n        code2 = \"12\"\n        # 定位第一行\n>       change.click_button(\n            f'//table[@xid=\"2\" and @class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"{code1}\"] and td[3]//span[text()=\"{code2}\"]]//td[2]'\n        )\n\nTests\\test_items\\test_changeR.py:522: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\changeR_page.py:39: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.changeR_page.ChangeR object at 0x000002CDB7D62BF0>, by_or_element = 'xpath'\nvalue = '//table[@xid=\"2\" and @class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"11\"] and td[3]//span[text()=\"12\"]]//td[2]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@xid=\"2\" and @class=\"vxe-table--body\"]//tr[td[2]//span[text()=\"11\"] and td[3]//span[text()=\"12\"]]//td[2]\n\nPages\\base_page.py:52: TimeoutException","steps":[],"attachments":[{"uid":"ca81125a78d4397c","name":"test_click_timeout","source":"ca81125a78d4397c.png","type":"image/png","size":100351},{"uid":"e3d5d2c09b57873c","name":"log","source":"e3d5d2c09b57873c.txt","type":"text/plain","size":1341}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"login_to_changeR::0","time":{"start":1753707609776,"stop":1753707611900,"duration":2124},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"story","value":"删除数据成功"},{"name":"feature","value":"资源切换表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_changeR"},{"name":"subSuite","value":"TestChangeRPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26924-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_changeR"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"60b1db29485ff338.json","parameterValues":[]}