{"uid":"44a019ba77a3afcb","name":"test_item_editcodesuccess","fullName":"Tests.test_material.test_materialSupplys.TestItemPage#test_item_editcodesuccess","historyId":"e301c79e67cb526d1c0b1932e963a061","time":{"start":1754930135977,"stop":1754930150040,"duration":14063},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF44AE90>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF44AE90> = <test_material.test_materialSupplys.TestItemPage object at 0x000001C1DE8E3400>.item","statusTrace":"self = <test_material.test_materialSupplys.TestItemPage object at 0x000001C1DE8E3400>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a9083dca6d0c582b4958f36af40d4a41\")>\n\n    @allure.story(\"修改测试数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_editcodesuccess(self, login_to_item):\n    \n        # 输入框要修改的值\n        text_str = \"333\"\n        date_str = \"2025/07/23 00:00:00\"\n        # 输入框的xpath\n        input_xpath_list = [\n            \"//div[@id='bj6kxqe3-e8d6']//input\",\n            \"//div[@id='2xq4wbqm-i07g']//input\",\n            \"//div[@id='xr3hl02y-kvwd']//input\",\n            \"//div[@id='q2eosdwd-mk2k']//input\",\n            \"//div[@id='9o985n3x-9hdz']//input\"\n        ]\n        input_xpath_list2 = [\n            \"//div[@id='gq66qiep-c94c']//input\"\n        ]\n    \n        # 选中刚刚新增的测试数据\n        self.item.click_button('//tr[./td[2][.//span[text()=\"222\"]]]/td[2]')\n        # 点击修改按钮\n        self.item.click_edi_button()\n        sleep(1)\n    \n        # 批量修改输入框\n        self.item.batch_modify_input(input_xpath_list, text_str)\n        self.item.batch_modify_input(input_xpath_list2, date_str)\n    \n        sleep(1)\n        # 点击确定\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n        # 选中刚刚编辑的数据\n        self.item.click_button('//tr[./td[2][.//span[text()=\"333\"]]]/td[2]')\n        # 点击编辑按钮\n        self.item.click_edi_button()\n        sleep(1)\n        # 批量获取输入框的value\n        input_values = self.item.batch_acquisition_input(input_xpath_list, text_str)\n        input_values2 = self.item.batch_acquisition_input(input_xpath_list2, date_str)\n        sleep(1)\n        assert (\n                len(input_xpath_list) == len(input_values) and\n                len(input_xpath_list2) == len(input_values2)\n        )\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF44AE90>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF44AE90> = <test_material.test_materialSupplys.TestItemPage object at 0x000001C1DE8E3400>.item\n\nTests\\test_material\\test_materialSupplys.py:306: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1754930021038,"stop":1754930029375,"duration":8337},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"setup","time":{"start":1754930135975,"stop":1754930135977,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF44AE90>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF44AE90> = <test_material.test_materialSupplys.TestItemPage object at 0x000001C1DE8E3400>.item","statusTrace":"self = <test_material.test_materialSupplys.TestItemPage object at 0x000001C1DE8E3400>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a9083dca6d0c582b4958f36af40d4a41\")>\n\n    @allure.story(\"修改测试数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_editcodesuccess(self, login_to_item):\n    \n        # 输入框要修改的值\n        text_str = \"333\"\n        date_str = \"2025/07/23 00:00:00\"\n        # 输入框的xpath\n        input_xpath_list = [\n            \"//div[@id='bj6kxqe3-e8d6']//input\",\n            \"//div[@id='2xq4wbqm-i07g']//input\",\n            \"//div[@id='xr3hl02y-kvwd']//input\",\n            \"//div[@id='q2eosdwd-mk2k']//input\",\n            \"//div[@id='9o985n3x-9hdz']//input\"\n        ]\n        input_xpath_list2 = [\n            \"//div[@id='gq66qiep-c94c']//input\"\n        ]\n    \n        # 选中刚刚新增的测试数据\n        self.item.click_button('//tr[./td[2][.//span[text()=\"222\"]]]/td[2]')\n        # 点击修改按钮\n        self.item.click_edi_button()\n        sleep(1)\n    \n        # 批量修改输入框\n        self.item.batch_modify_input(input_xpath_list, text_str)\n        self.item.batch_modify_input(input_xpath_list2, date_str)\n    \n        sleep(1)\n        # 点击确定\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n        # 选中刚刚编辑的数据\n        self.item.click_button('//tr[./td[2][.//span[text()=\"333\"]]]/td[2]')\n        # 点击编辑按钮\n        self.item.click_edi_button()\n        sleep(1)\n        # 批量获取输入框的value\n        input_values = self.item.batch_acquisition_input(input_xpath_list, text_str)\n        input_values2 = self.item.batch_acquisition_input(input_xpath_list2, date_str)\n        sleep(1)\n        assert (\n                len(input_xpath_list) == len(input_values) and\n                len(input_xpath_list2) == len(input_values2)\n        )\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF44AE90>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF44AE90> = <test_material.test_materialSupplys.TestItemPage object at 0x000001C1DE8E3400>.item\n\nTests\\test_material\\test_materialSupplys.py:306: AssertionError","steps":[],"attachments":[{"uid":"12d97100526603d6","name":"log","source":"12d97100526603d6.txt","type":"text/plain","size":2407}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_item::0","time":{"start":1754930388577,"stop":1754930390751,"duration":2174},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"story","value":"修改测试数据成功"},{"name":"feature","value":"物料交付答复测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialSupplys"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"24412-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialSupplys"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a80f1d1ffa5d9495","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF3708E0>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF3708E0> = <test_material.test_materialSupplys.TestItemPage object at 0x000001C1DE8E3400>.item","time":{"start":1754930121890,"stop":1754930135962,"duration":14072}},{"uid":"9f42dfa99da6cbff","status":"failed","statusDetails":"AssertionError: assert (5 == 5 and 1 == 0)\n +  where 5 = len([\"//div[@id='bj6kxqe3-e8d6']//input\", \"//div[@id='2xq4wbqm-i07g']//input\", \"//div[@id='xr3hl02y-kvwd']//input\", \"//div[@id='q2eosdwd-mk2k']//input\", \"//div[@id='9o985n3x-9hdz']//input\"])\n +  and   5 = len(['333', '333', '333', '333', '333'])\n +  and   1 = len([\"//div[@id='gq66qiep-c94c']//input\"])\n +  and   0 = len([])","time":{"start":1754322383802,"stop":1754322394771,"duration":10969}},{"uid":"695d4f6e0ff66a42","status":"failed","statusDetails":"AssertionError: assert (5 == 5 and 1 == 0)\n +  where 5 = len([\"//div[@id='bj6kxqe3-e8d6']//input\", \"//div[@id='2xq4wbqm-i07g']//input\", \"//div[@id='xr3hl02y-kvwd']//input\", \"//div[@id='q2eosdwd-mk2k']//input\", \"//div[@id='9o985n3x-9hdz']//input\"])\n +  and   5 = len(['333', '333', '333', '333', '333'])\n +  and   1 = len([\"//div[@id='gq66qiep-c94c']//input\"])\n +  and   0 = len([])","time":{"start":1754322372905,"stop":1754322383777,"duration":10872}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"44a019ba77a3afcb.json","parameterValues":[]}