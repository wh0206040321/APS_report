{"uid":"a69fd7a12d5590f4","name":"test_order_addrepeat","fullName":"Tests.test_items.test_order.TestOrderPage#test_order_addrepeat","historyId":"04e4cbbe0ab48b18b85f24d4baefa3ed","time":{"start":1753877883097,"stop":1753877887718,"duration":4621},"status":"failed","statusMessage":"AssertionError: 预期数据是记录已存在,请检查，实际得到\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x0000020123AFA800>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"75be5f2f211154d4ad20144a598d2674\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_order_addrepeat(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        order.click_add_button()  # 检查点击添加\n    \n        # 填写订单代码\n        order.enter_texts('(//label[text()=\"订单代码\"])[1]/parent::div//input', \"1A\")\n    \n        # 物料\n        random_int = random.randint(1, 10)\n        order.click_button('//label[text()=\"物料\"]/parent::div/div//i')\n        order.click_button(\n            f'//table[@style=\"margin-top: 0px; width: 780px; margin-left: 0px;\"]/tbody/tr[{random_int}]/td[2]'\n        )\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 填写交货期\n        order.click_button('(//label[text()=\"交货期\"])[1]/parent::div//input')\n        order.click_button('(//div[@class=\"ivu-date-picker-cells\"])[3]/span[19]')\n        order.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary ivu-btn-small\"])[3]'\n        )\n    \n        # 点击确定\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n    \n        # 获取重复弹窗文字\n        error_popup = order.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert (\n            error_popup == \"记录已存在,请检查！\"\n        ), f\"预期数据是记录已存在,请检查，实际得到{error_popup}\"\nE       AssertionError: 预期数据是记录已存在,请检查，实际得到\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_order.py:356: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_order","time":{"start":1753877874990,"stop":1753877883097,"duration":8107},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期数据是记录已存在,请检查，实际得到\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x0000020123AFA800>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"75be5f2f211154d4ad20144a598d2674\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_order_addrepeat(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        order.click_add_button()  # 检查点击添加\n    \n        # 填写订单代码\n        order.enter_texts('(//label[text()=\"订单代码\"])[1]/parent::div//input', \"1A\")\n    \n        # 物料\n        random_int = random.randint(1, 10)\n        order.click_button('//label[text()=\"物料\"]/parent::div/div//i')\n        order.click_button(\n            f'//table[@style=\"margin-top: 0px; width: 780px; margin-left: 0px;\"]/tbody/tr[{random_int}]/td[2]'\n        )\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 填写交货期\n        order.click_button('(//label[text()=\"交货期\"])[1]/parent::div//input')\n        order.click_button('(//div[@class=\"ivu-date-picker-cells\"])[3]/span[19]')\n        order.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary ivu-btn-small\"])[3]'\n        )\n    \n        # 点击确定\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n    \n        # 获取重复弹窗文字\n        error_popup = order.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert (\n            error_popup == \"记录已存在,请检查！\"\n        ), f\"预期数据是记录已存在,请检查，实际得到{error_popup}\"\nE       AssertionError: 预期数据是记录已存在,请检查，实际得到\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_order.py:356: AssertionError","steps":[],"attachments":[{"uid":"6a88604c47adfb9e","name":"test_order_addrepeat_failure","source":"6a88604c47adfb9e.png","type":"image/png","size":142132},{"uid":"6c11f9544793bb2f","name":"test_order_addrepeat_source","source":"6c11f9544793bb2f.html","type":"text/html","size":1588054},{"uid":"9a11bca63364fc67","name":"log","source":"9a11bca63364fc67.txt","type":"text/plain","size":1978}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_order::0","time":{"start":1753877887967,"stop":1753877890138,"duration":2171},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"制造订单表测试用例"},{"name":"story","value":"添加数据重复"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_order"},{"name":"subSuite","value":"TestOrderPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"47600-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"a69fd7a12d5590f4.json","parameterValues":[]}