{"uid":"e508bd93fcb90d1","name":"test_setting_layoutlist_updatesuceess","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_layoutlist_updatesuceess","historyId":"e7a4c4d928f23720b4496bd1f6efc787","time":{"start":1755099196188,"stop":1755099202604,"duration":6416},"status":"failed","statusMessage":"AssertionError: assert '' == '修改布局'\n  \n  \u001B[0m\u001B[91m- 修改布局\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000023BD3D46F50>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"43799b90fbb20d313750485db63aaba9\")>\n\n    @allure.story(\"修改布局名称成功\")\n    # @pytest.mark.run(order=1)\n    def test_setting_layoutlist_updatesuceess(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局B\"\n        sleep(2)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n        sleep(1)\n        setting.click_button(f'//span[./span[text()=\"{layout}\"]]/following-sibling::i[2]')\n    \n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n        target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n    \n        # 获取父容器下所有 div\n        # 这一步是为了确定目标 div 在其父容器中的位置\n        parent_div = setting.get_find_element_xpath(f'//div[@id=\"container\"]')\n        all_children = parent_div.find_elements(By.XPATH, \"./div\")\n    \n        # 获取目标 div 的位置索引（从0开始）\n        # 这里是为了后续操作，比如点击目标 div 相关的按钮\n        index = all_children.index(target_div)\n        print(f\"目标 div 是第 {index + 1} 个 div\")  # 输出 3（如果从0开始则是2）\n    \n        setting.click_button(f'(//div[text()=\"重命名\"])[{index + 1}]')\n        ele = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input'\n        )\n        ele.send_keys(Keys.CONTROL, 'a')\n        ele.send_keys(Keys.DELETE)\n        setting.enter_texts(f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input', \"修改布局\")\n    \n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(1)\n        driver.refresh()\n        name = setting.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" 修改布局 \"]'\n        ).text\n>       assert name == \"修改布局\"\nE       AssertionError: assert '' == '修改布局'\nE         \nE         \u001B[0m\u001B[91m- 修改布局\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:2195: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1755099187811,"stop":1755099196187,"duration":8376},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '' == '修改布局'\n  \n  \u001B[0m\u001B[91m- 修改布局\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000023BD3D46F50>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"43799b90fbb20d313750485db63aaba9\")>\n\n    @allure.story(\"修改布局名称成功\")\n    # @pytest.mark.run(order=1)\n    def test_setting_layoutlist_updatesuceess(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局B\"\n        sleep(2)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n        sleep(1)\n        setting.click_button(f'//span[./span[text()=\"{layout}\"]]/following-sibling::i[2]')\n    \n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n        target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n    \n        # 获取父容器下所有 div\n        # 这一步是为了确定目标 div 在其父容器中的位置\n        parent_div = setting.get_find_element_xpath(f'//div[@id=\"container\"]')\n        all_children = parent_div.find_elements(By.XPATH, \"./div\")\n    \n        # 获取目标 div 的位置索引（从0开始）\n        # 这里是为了后续操作，比如点击目标 div 相关的按钮\n        index = all_children.index(target_div)\n        print(f\"目标 div 是第 {index + 1} 个 div\")  # 输出 3（如果从0开始则是2）\n    \n        setting.click_button(f'(//div[text()=\"重命名\"])[{index + 1}]')\n        ele = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input'\n        )\n        ele.send_keys(Keys.CONTROL, 'a')\n        ele.send_keys(Keys.DELETE)\n        setting.enter_texts(f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input', \"修改布局\")\n    \n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(1)\n        driver.refresh()\n        name = setting.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" 修改布局 \"]'\n        ).text\n>       assert name == \"修改布局\"\nE       AssertionError: assert '' == '修改布局'\nE         \nE         \u001B[0m\u001B[91m- 修改布局\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:2195: AssertionError","steps":[],"attachments":[{"uid":"f7a763d829613d62","name":"test_setting_layoutlist_updatesuceess_failure","source":"f7a763d829613d62.png","type":"image/png","size":54989},{"uid":"bb51c942341b3e6","name":"test_setting_layoutlist_updatesuceess_source","source":"bb51c942341b3e6.html","type":"text/html","size":1245111},{"uid":"8e58b55386d9b912","name":"log","source":"8e58b55386d9b912.txt","type":"text/plain","size":1686}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_setting::0","time":{"start":1755099203022,"stop":1755099205217,"duration":2195},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"修改布局名称成功"},{"name":"feature","value":"标准应用设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"e508bd93fcb90d1.json","parameterValues":[]}