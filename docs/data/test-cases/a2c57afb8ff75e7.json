{"uid":"a2c57afb8ff75e7","name":"test_setting_layoutlist_updatefail","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_layoutlist_updatefail","historyId":"9871941699426fafe0b0464cce205826","time":{"start":1753882992149,"stop":1753882997334,"duration":5185},"status":"failed","statusMessage":"AssertionError: assert '布局名称不能重复！' == '布局名称已存在，请重新输入'\n  \n  \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 布局名称不能重复！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000020123C7BE80>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6a807692fdb352872428c490a7bd1248\")>\n\n    @allure.story(\"重复修改布局 不允许修改\")\n    # @pytest.mark.run(order=1)\n    def test_setting_layoutlist_updatefail(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"修改布局\"\n        sleep(2)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n        sleep(1)\n        setting.click_button(f'//span[./span[text()=\"{layout}\"]]/following-sibling::i[2]')\n    \n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n        target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n    \n        # 获取父容器下所有 div\n        # 这一步是为了确定目标 div 在其父容器中的位置\n        parent_div = setting.get_find_element_xpath(f'//div[@id=\"container\"]')\n        all_children = parent_div.find_elements(By.XPATH, \"./div\")\n    \n        # 获取目标 div 的位置索引（从0开始）\n        # 这里是为了后续操作，比如点击目标 div 相关的按钮\n        index = all_children.index(target_div)\n        print(f\"目标 div 是第 {index + 1} 个 div\")  # 输出 3（如果从0开始则是2）\n    \n        setting.click_button(f'(//div[text()=\"重命名\"])[{index + 1}]')\n        ele = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input'\n        )\n        ele.send_keys(Keys.CONTROL, 'a')\n        ele.send_keys(Keys.DELETE)\n        setting.enter_texts(f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input', \"测试布局A\")\n    \n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(1)\n        # 获取设置后的提示信息\n        message = setting.get_find_message()\n        # 断言提示信息是否符合预期，以验证设置是否生效\n>       assert message.text == \"布局名称已存在，请重新输入\"\nE       AssertionError: assert '布局名称不能重复！' == '布局名称已存在，请重新输入'\nE         \nE         \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 布局名称不能重复！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:2237: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1753882983358,"stop":1753882992148,"duration":8790},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '布局名称不能重复！' == '布局名称已存在，请重新输入'\n  \n  \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 布局名称不能重复！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000020123C7BE80>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6a807692fdb352872428c490a7bd1248\")>\n\n    @allure.story(\"重复修改布局 不允许修改\")\n    # @pytest.mark.run(order=1)\n    def test_setting_layoutlist_updatefail(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"修改布局\"\n        sleep(2)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n        sleep(1)\n        setting.click_button(f'//span[./span[text()=\"{layout}\"]]/following-sibling::i[2]')\n    \n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n        target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n    \n        # 获取父容器下所有 div\n        # 这一步是为了确定目标 div 在其父容器中的位置\n        parent_div = setting.get_find_element_xpath(f'//div[@id=\"container\"]')\n        all_children = parent_div.find_elements(By.XPATH, \"./div\")\n    \n        # 获取目标 div 的位置索引（从0开始）\n        # 这里是为了后续操作，比如点击目标 div 相关的按钮\n        index = all_children.index(target_div)\n        print(f\"目标 div 是第 {index + 1} 个 div\")  # 输出 3（如果从0开始则是2）\n    \n        setting.click_button(f'(//div[text()=\"重命名\"])[{index + 1}]')\n        ele = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input'\n        )\n        ele.send_keys(Keys.CONTROL, 'a')\n        ele.send_keys(Keys.DELETE)\n        setting.enter_texts(f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input', \"测试布局A\")\n    \n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(1)\n        # 获取设置后的提示信息\n        message = setting.get_find_message()\n        # 断言提示信息是否符合预期，以验证设置是否生效\n>       assert message.text == \"布局名称已存在，请重新输入\"\nE       AssertionError: assert '布局名称不能重复！' == '布局名称已存在，请重新输入'\nE         \nE         \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 布局名称不能重复！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:2237: AssertionError","steps":[],"attachments":[{"uid":"84bbe3cdf12e0011","name":"test_setting_layoutlist_updatefail_failure","source":"84bbe3cdf12e0011.png","type":"image/png","size":121671},{"uid":"84fd060f98158600","name":"test_setting_layoutlist_updatefail_source","source":"84fd060f98158600.html","type":"text/html","size":1272445},{"uid":"a54090dec6f75fc5","name":"log","source":"a54090dec6f75fc5.txt","type":"text/plain","size":3129}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_setting::0","time":{"start":1753882997600,"stop":1753882999823,"duration":2223},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"重复修改布局 不允许修改"},{"name":"feature","value":"标准应用设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"47600-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"330c11059dd9a18b","status":"failed","statusDetails":"AssertionError: assert '布局名称不能重复！' == '布局名称已存在，请重新输入'\n  \n  \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 布局名称不能重复！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","time":{"start":1753882975629,"stop":1753882980848,"duration":5219}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"a2c57afb8ff75e7.json","parameterValues":[]}