{"uid":"f6b39653ebc91602","name":"test_changeI_delete","fullName":"Tests.test_items.test_changeI.TestChangeIPage#test_changeI_delete","historyId":"58fb4b3e2ddee6f8658c907d65340de5","time":{"start":1760968047124,"stop":1760968053925,"duration":6801},"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"fb62a2c6643c733911a16a79f533a37b\", element=\"f.7B7D23D8BBF6CC2BB20D9F01FA4C99CB.d.B85A845F308D4CCF915E897B2B44F3AE.e.187\")>])","statusTrace":"self = <test_items.test_changeI.TestChangeIPage object at 0x0000014AE2A955A0>, login_to_changeI = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fb62a2c6643c733911a16a79f533a37b\")>\n\n    @allure.story(\"删除布局成功\")\n    # @pytest.mark.run(order=1)\n    def test_changeI_delete(self, login_to_changeI):\n        driver = login_to_changeI  # WebDriver 实例\n        changeI = ChangeI(driver)  # 用 driver 初始化 ChangeI\n        layout = \"测试布局A\"\n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n        target_div = changeI.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        )\n        # 获取父容器下所有 div\n        # 这一步是为了确定目标 div 在其父容器中的位置\n        parent_div = changeI.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\" and ./div[text()=\" {layout} \"]]'\n        )\n        all_children = parent_div.find_elements(By.XPATH, \"./div\")\n    \n        # 获取目标 div 的位置索引（从0开始）\n        # 这里是为了后续操作，比如点击目标 div 相关的按钮\n        index = all_children.index(target_div)\n        print(f\"目标 div 是第 {index + 1} 个 div\")  # 输出 3（如果从0开始则是2）\n        sleep(2)\n        changeI.click_button(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]//i'\n        )\n        # 根据目标 div 的位置，点击对应的“删除布局”按钮\n        changeI.click_button(f'(//li[text()=\"删除布局\"])[{index + 1}]')\n        sleep(2)\n        # 点击确认删除的按钮\n        changeI.click_button('//button[@class=\"ivu-btn ivu-btn-primary ivu-btn-large\"]')\n        # 等待一段时间，确保删除操作完成\n        sleep(1)\n    \n        # 再次查找页面上是否有目标 div，以验证是否删除成功\n        after_layout = driver.find_elements(\n            By.XPATH, f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        )\n>       assert 0 == len(after_layout)\nE       assert 0 == 1\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"fb62a2c6643c733911a16a79f533a37b\", element=\"f.7B7D23D8BBF6CC2BB20D9F01FA4C99CB.d.B85A845F308D4CCF915E897B2B44F3AE.e.187\")>])\n\nTests\\test_items\\test_changeI.py:1094: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_changeI","time":{"start":1760968033619,"stop":1760968047123,"duration":13504},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"fb62a2c6643c733911a16a79f533a37b\", element=\"f.7B7D23D8BBF6CC2BB20D9F01FA4C99CB.d.B85A845F308D4CCF915E897B2B44F3AE.e.187\")>])","statusTrace":"self = <test_items.test_changeI.TestChangeIPage object at 0x0000014AE2A955A0>, login_to_changeI = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fb62a2c6643c733911a16a79f533a37b\")>\n\n    @allure.story(\"删除布局成功\")\n    # @pytest.mark.run(order=1)\n    def test_changeI_delete(self, login_to_changeI):\n        driver = login_to_changeI  # WebDriver 实例\n        changeI = ChangeI(driver)  # 用 driver 初始化 ChangeI\n        layout = \"测试布局A\"\n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n        target_div = changeI.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        )\n        # 获取父容器下所有 div\n        # 这一步是为了确定目标 div 在其父容器中的位置\n        parent_div = changeI.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\" and ./div[text()=\" {layout} \"]]'\n        )\n        all_children = parent_div.find_elements(By.XPATH, \"./div\")\n    \n        # 获取目标 div 的位置索引（从0开始）\n        # 这里是为了后续操作，比如点击目标 div 相关的按钮\n        index = all_children.index(target_div)\n        print(f\"目标 div 是第 {index + 1} 个 div\")  # 输出 3（如果从0开始则是2）\n        sleep(2)\n        changeI.click_button(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]//i'\n        )\n        # 根据目标 div 的位置，点击对应的“删除布局”按钮\n        changeI.click_button(f'(//li[text()=\"删除布局\"])[{index + 1}]')\n        sleep(2)\n        # 点击确认删除的按钮\n        changeI.click_button('//button[@class=\"ivu-btn ivu-btn-primary ivu-btn-large\"]')\n        # 等待一段时间，确保删除操作完成\n        sleep(1)\n    \n        # 再次查找页面上是否有目标 div，以验证是否删除成功\n        after_layout = driver.find_elements(\n            By.XPATH, f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        )\n>       assert 0 == len(after_layout)\nE       assert 0 == 1\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"fb62a2c6643c733911a16a79f533a37b\", element=\"f.7B7D23D8BBF6CC2BB20D9F01FA4C99CB.d.B85A845F308D4CCF915E897B2B44F3AE.e.187\")>])\n\nTests\\test_items\\test_changeI.py:1094: AssertionError","steps":[],"attachments":[{"uid":"13b62d66a50d9349","name":"test_changeI_delete_failure","source":"13b62d66a50d9349.png","type":"image/png","size":77009},{"uid":"d101126096ab5021","name":"test_changeI_delete_source","source":"d101126096ab5021.html","type":"text/html","size":1224391},{"uid":"3e6a10d46f2f4f8c","name":"log","source":"3e6a10d46f2f4f8c.txt","type":"text/plain","size":1408}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_changeI::0","time":{"start":1760968054628,"stop":1760968056976,"duration":2348},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"物品切换表测试用例"},{"name":"story","value":"删除布局成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_changeI"},{"name":"subSuite","value":"TestChangeIPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_changeI"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"f6b39653ebc91602.json","parameterValues":[]}