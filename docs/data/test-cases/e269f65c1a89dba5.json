{"uid":"e269f65c1a89dba5","name":"test_item_addcodefail","fullName":"Tests.test_material.test_materialVendors.TestItemPage#test_item_addcodefail","historyId":"8ee9f03a8d9c34536c15a07398266265","time":{"start":1755184802373,"stop":1755184808071,"duration":5698},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000019971D88610>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000019971D88610> = <test_material.test_materialVendors.TestItemPage object at 0x000001997174B6A0>.item","statusTrace":"self = <test_material.test_materialVendors.TestItemPage object at 0x000001997174B6A0>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"99a31473302474e2a178237375ee6282\")>\n\n    @allure.story(\"添加供应商信息信息，只填写供应商代码，不填写联系人，不允许提交\")\n    # @pytest.mark.run(order=2)\n    def test_item_addcodefail(self, login_to_item):\n        # driver = login_to_item  # WebDriver 实例\n        # item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        self.item.click_add_button()\n        self.item.enter_texts(\n            \"//div[@id='tx0gv6lt-z2dv']//input\", \"text1231\"\n        )\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        input_box = self.item.get_find_element_xpath(\n            \"//div[@id='e4589osf-fgn3']//input\"\n        )\n        # 断言边框颜色是否为红色（可以根据实际RGB值调整）\n        sleep(1)\n        border_color = input_box.value_of_css_property(\"border-color\")\n        expected_color = \"rgb(255, 0, 0)\"  # 红色的 rgb 值\n        assert (\n            border_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{border_color}\"\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000019971D88610>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000019971D88610> = <test_material.test_materialVendors.TestItemPage object at 0x000001997174B6A0>.item\n\nTests\\test_material\\test_materialVendors.py:101: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1755184794469,"stop":1755184802366,"duration":7897},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"setup","time":{"start":1755184802366,"stop":1755184802372,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000019971D88610>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000019971D88610> = <test_material.test_materialVendors.TestItemPage object at 0x000001997174B6A0>.item","statusTrace":"self = <test_material.test_materialVendors.TestItemPage object at 0x000001997174B6A0>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"99a31473302474e2a178237375ee6282\")>\n\n    @allure.story(\"添加供应商信息信息，只填写供应商代码，不填写联系人，不允许提交\")\n    # @pytest.mark.run(order=2)\n    def test_item_addcodefail(self, login_to_item):\n        # driver = login_to_item  # WebDriver 实例\n        # item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        self.item.click_add_button()\n        self.item.enter_texts(\n            \"//div[@id='tx0gv6lt-z2dv']//input\", \"text1231\"\n        )\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        input_box = self.item.get_find_element_xpath(\n            \"//div[@id='e4589osf-fgn3']//input\"\n        )\n        # 断言边框颜色是否为红色（可以根据实际RGB值调整）\n        sleep(1)\n        border_color = input_box.value_of_css_property(\"border-color\")\n        expected_color = \"rgb(255, 0, 0)\"  # 红色的 rgb 值\n        assert (\n            border_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{border_color}\"\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000019971D88610>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000019971D88610> = <test_material.test_materialVendors.TestItemPage object at 0x000001997174B6A0>.item\n\nTests\\test_material\\test_materialVendors.py:101: AssertionError","steps":[],"attachments":[{"uid":"92c3b15015c2a6cf","name":"test_item_addcodefail_failure","source":"92c3b15015c2a6cf.png","type":"image/png","size":102493},{"uid":"89ba7981ad19f78e","name":"test_item_addcodefail_source","source":"89ba7981ad19f78e.html","type":"text/html","size":1255098},{"uid":"adcd8cd308ae5674","name":"log","source":"adcd8cd308ae5674.txt","type":"text/plain","size":1475}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_item::0","time":{"start":1755184808251,"stop":1755184810402,"duration":2151},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"供应商信息测试用例"},{"name":"story","value":"添加供应商信息信息，只填写供应商代码，不填写联系人，不允许提交"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialVendors"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"16980-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialVendors"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"e269f65c1a89dba5.json","parameterValues":[]}