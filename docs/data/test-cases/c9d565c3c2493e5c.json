{"uid":"c9d565c3c2493e5c","name":"test_previewPlan_select","fullName":"Tests.test_items.test_previewplan.TestPreviewPlanPage#test_previewPlan_select","historyId":"9cb2b69a31c8c7797da8a96a62c702c8","time":{"start":1754313696611,"stop":1754313707498,"duration":10887},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6a7286f65+78965]\n\tGetHandleVerifier [0x0x7ff6a7286fc0+79056]\n\t(No symbol) [0x0x7ff6a7019dda]\n\t(No symbol) [0x0x7ff6a70702ea]\n\t(No symbol) [0x0x7ff6a707059c]\n\t(No symbol) [0x0x7ff6a70c3f37]\n\t(No symbol) [0x0x7ff6a70986af]\n\t(No symbol) [0x0x7ff6a70c0dbe]\n\t(No symbol) [0x0x7ff6a7098443]\n\t(No symbol) [0x0x7ff6a7061311]\n\t(No symbol) [0x0x7ff6a70620a3]\n\tGetHandleVerifier [0x0x7ff6a753e26d+2926461]\n\tGetHandleVerifier [0x0x7ff6a7538993+2903715]\n\tGetHandleVerifier [0x0x7ff6a7556aed+3026941]\n\tGetHandleVerifier [0x0x7ff6a72a16fe+187406]\n\tGetHandleVerifier [0x0x7ff6a72a96ef+220159]\n\tGetHandleVerifier [0x0x7ff6a728faf4+114692]\n\tGetHandleVerifier [0x0x7ff6a728fca9+115129]\n\tGetHandleVerifier [0x0x7ff6a72764d8+10728]\n\tBaseThreadInitThunk [0x0x7ff992b87374+20]\n\tRtlUserThreadStart [0x0x7ff99357cc91+33]","statusTrace":"self = <test_items.test_previewplan.TestPreviewPlanPage object at 0x0000012C8E2851E0>\nlogin_to_previewPlan = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"858e00abce9eb1ee4721527132221ef5\")>\n\n    @allure.story(\"工作指示发布成功，工作指示一览显示成功\")\n    # @pytest.mark.run(order=1)\n    def test_previewPlan_select(self, login_to_previewPlan):\n        driver = login_to_previewPlan  # WebDriver 实例\n        previewPlan = PreviewPlanPage(driver)  # 用 previewPlan 初始化 PreviewPlanPage\n        shared_data = SharedDataUtil.load_data()\n        resource1 = shared_data.get(\"master_res1\")\n        resource2 = shared_data.get(\"master_res2\")\n        previewPlan.enter_texts(\n            '//div[./p[text()=\"订单代码\"]]/parent::div//input', \"1测试C订单\"\n        )\n>       ele_code1 = previewPlan.get_find_element_xpath(\n            '//table[.//td[4]//span[text()=\"1测试C订单\"]]//tr[1]/td[4]'\n        ).text\n\nTests\\test_items\\test_previewplan.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\previewPlan_page.py:26: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"858e00abce9eb1ee4721527132221ef5\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000012C8F1A44C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6a7286f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6a7286fc0+79056]\nE       \t(No symbol) [0x0x7ff6a7019dda]\nE       \t(No symbol) [0x0x7ff6a70702ea]\nE       \t(No symbol) [0x0x7ff6a707059c]\nE       \t(No symbol) [0x0x7ff6a70c3f37]\nE       \t(No symbol) [0x0x7ff6a70986af]\nE       \t(No symbol) [0x0x7ff6a70c0dbe]\nE       \t(No symbol) [0x0x7ff6a7098443]\nE       \t(No symbol) [0x0x7ff6a7061311]\nE       \t(No symbol) [0x0x7ff6a70620a3]\nE       \tGetHandleVerifier [0x0x7ff6a753e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6a7538993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6a7556aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6a72a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6a72a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6a728faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6a728fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6a72764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff992b87374+20]\nE       \tRtlUserThreadStart [0x0x7ff99357cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_previewPlan","time":{"start":1754313688921,"stop":1754313696610,"duration":7689},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff6a7286f65+78965]\n\tGetHandleVerifier [0x0x7ff6a7286fc0+79056]\n\t(No symbol) [0x0x7ff6a7019dda]\n\t(No symbol) [0x0x7ff6a70702ea]\n\t(No symbol) [0x0x7ff6a707059c]\n\t(No symbol) [0x0x7ff6a70c3f37]\n\t(No symbol) [0x0x7ff6a70986af]\n\t(No symbol) [0x0x7ff6a70c0dbe]\n\t(No symbol) [0x0x7ff6a7098443]\n\t(No symbol) [0x0x7ff6a7061311]\n\t(No symbol) [0x0x7ff6a70620a3]\n\tGetHandleVerifier [0x0x7ff6a753e26d+2926461]\n\tGetHandleVerifier [0x0x7ff6a7538993+2903715]\n\tGetHandleVerifier [0x0x7ff6a7556aed+3026941]\n\tGetHandleVerifier [0x0x7ff6a72a16fe+187406]\n\tGetHandleVerifier [0x0x7ff6a72a96ef+220159]\n\tGetHandleVerifier [0x0x7ff6a728faf4+114692]\n\tGetHandleVerifier [0x0x7ff6a728fca9+115129]\n\tGetHandleVerifier [0x0x7ff6a72764d8+10728]\n\tBaseThreadInitThunk [0x0x7ff992b87374+20]\n\tRtlUserThreadStart [0x0x7ff99357cc91+33]","statusTrace":"self = <test_items.test_previewplan.TestPreviewPlanPage object at 0x0000012C8E2851E0>\nlogin_to_previewPlan = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"858e00abce9eb1ee4721527132221ef5\")>\n\n    @allure.story(\"工作指示发布成功，工作指示一览显示成功\")\n    # @pytest.mark.run(order=1)\n    def test_previewPlan_select(self, login_to_previewPlan):\n        driver = login_to_previewPlan  # WebDriver 实例\n        previewPlan = PreviewPlanPage(driver)  # 用 previewPlan 初始化 PreviewPlanPage\n        shared_data = SharedDataUtil.load_data()\n        resource1 = shared_data.get(\"master_res1\")\n        resource2 = shared_data.get(\"master_res2\")\n        previewPlan.enter_texts(\n            '//div[./p[text()=\"订单代码\"]]/parent::div//input', \"1测试C订单\"\n        )\n>       ele_code1 = previewPlan.get_find_element_xpath(\n            '//table[.//td[4]//span[text()=\"1测试C订单\"]]//tr[1]/td[4]'\n        ).text\n\nTests\\test_items\\test_previewplan.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\previewPlan_page.py:26: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"858e00abce9eb1ee4721527132221ef5\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000012C8F1A44C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6a7286f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6a7286fc0+79056]\nE       \t(No symbol) [0x0x7ff6a7019dda]\nE       \t(No symbol) [0x0x7ff6a70702ea]\nE       \t(No symbol) [0x0x7ff6a707059c]\nE       \t(No symbol) [0x0x7ff6a70c3f37]\nE       \t(No symbol) [0x0x7ff6a70986af]\nE       \t(No symbol) [0x0x7ff6a70c0dbe]\nE       \t(No symbol) [0x0x7ff6a7098443]\nE       \t(No symbol) [0x0x7ff6a7061311]\nE       \t(No symbol) [0x0x7ff6a70620a3]\nE       \tGetHandleVerifier [0x0x7ff6a753e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6a7538993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6a7556aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6a72a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6a72a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6a728faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6a728fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6a72764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff992b87374+20]\nE       \tRtlUserThreadStart [0x0x7ff99357cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"b138e080c414fb7","name":"test_previewPlan_select_failure","source":"b138e080c414fb7.png","type":"image/png","size":84336},{"uid":"6b9c773f4d2ee8ad","name":"test_previewPlan_select_source","source":"6b9c773f4d2ee8ad.html","type":"text/html","size":1095581},{"uid":"f42f8f0b7c6869a6","name":"log","source":"f42f8f0b7c6869a6.txt","type":"text/plain","size":1063}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_previewPlan::0","time":{"start":1754313707642,"stop":1754313709793,"duration":2151},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"story","value":"工作指示发布成功，工作指示一览显示成功"},{"name":"feature","value":"工作指示一览表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_previewplan"},{"name":"subSuite","value":"TestPreviewPlanPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_previewplan"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"c9d565c3c2493e5c.json","parameterValues":[]}