{"uid":"12dfb4c1382ec739","name":"test_environment_all_clearnum","fullName":"Tests.test_system.test_environment.TestEnvironmentPage#test_environment_all_clearnum","historyId":"5fa978a8c9a372679a2f45d25edf2ff8","time":{"start":1755106061504,"stop":1755106063159,"duration":1655},"status":"failed","statusMessage":"AssertionError: assert ('' == '' and '保存成功' == '请填写信息'\n  \n  \u001B[0m\u001B[91m- 请填写信息\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 保存成功\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_system.test_environment.TestEnvironmentPage object at 0x0000023BD40CD510>\nlogin_to_environment = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8adb2b218cf2e03185cccd8a9f269966\")>\n\n    @allure.story(\"全体页面-不输入备份文件不允许保存\")\n    # @pytest.mark.run(order=1)\n    def test_environment_all_clearnum(self, login_to_environment):\n        driver = login_to_environment  # WebDriver 实例\n        environment = EnvironmentPage(driver)  # 用 driver 初始化 EnvironmentPage\n        value = environment.enter_number_input()\n        environment.click_save_button()\n        message = environment.get_find_message()\n>       assert value == \"\" and message == \"请填写信息\"\nE       AssertionError: assert ('' == '' and '保存成功' == '请填写信息'\nE         \nE         \u001B[0m\u001B[91m- 请填写信息\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 保存成功\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_system\\test_environment.py:77: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_environment","time":{"start":1755106051776,"stop":1755106061503,"duration":9727},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('' == '' and '保存成功' == '请填写信息'\n  \n  \u001B[0m\u001B[91m- 请填写信息\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 保存成功\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_system.test_environment.TestEnvironmentPage object at 0x0000023BD40CD510>\nlogin_to_environment = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8adb2b218cf2e03185cccd8a9f269966\")>\n\n    @allure.story(\"全体页面-不输入备份文件不允许保存\")\n    # @pytest.mark.run(order=1)\n    def test_environment_all_clearnum(self, login_to_environment):\n        driver = login_to_environment  # WebDriver 实例\n        environment = EnvironmentPage(driver)  # 用 driver 初始化 EnvironmentPage\n        value = environment.enter_number_input()\n        environment.click_save_button()\n        message = environment.get_find_message()\n>       assert value == \"\" and message == \"请填写信息\"\nE       AssertionError: assert ('' == '' and '保存成功' == '请填写信息'\nE         \nE         \u001B[0m\u001B[91m- 请填写信息\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 保存成功\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_system\\test_environment.py:77: AssertionError","steps":[],"attachments":[{"uid":"10e2ef4d47399744","name":"test_environment_all_clearnum_failure","source":"10e2ef4d47399744.png","type":"image/png","size":85477},{"uid":"7e243028d43a80fc","name":"test_environment_all_clearnum_source","source":"7e243028d43a80fc.html","type":"text/html","size":1108722},{"uid":"583c51ec17dc6c17","name":"log","source":"583c51ec17dc6c17.txt","type":"text/plain","size":1969}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_environment::0","time":{"start":1755106063317,"stop":1755106065527,"duration":2210},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"全体页面-不输入备份文件不允许保存"},{"name":"feature","value":"环境设置页用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_environment"},{"name":"subSuite","value":"TestEnvironmentPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_environment"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"769ff25c957cb955","status":"failed","statusDetails":"AssertionError: assert ('' == '' and '保存成功' == '请填写信息'\n  \n  \u001B[0m\u001B[91m- 请填写信息\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 保存成功\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","time":{"start":1755106047496,"stop":1755106049334,"duration":1838}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"12dfb4c1382ec739.json","parameterValues":[]}