{"uid":"afec18e946f468b0","name":"test_personal_switchcolor2","fullName":"Tests.test_items.test_personal.TestPersonalPage#test_personal_switchcolor2","historyId":"5d4a739f411e853523ff0324f4dca0c7","time":{"start":1761062282781,"stop":1761062287497,"duration":4716},"status":"failed","statusMessage":"AssertionError: assert ('rgb(50, 66, 85)' == 'rgb(33, 113, 15)'\n  \n  \u001B[0m\u001B[91m- rgb(33, 113, 15)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ rgb(50, 66, 85)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_personal.TestPersonalPage object at 0x00000173A649A680>, login_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c066a363ac9b400d0f60a27189ab0fdc\")>\n\n    @allure.story(\"重新启动设置不变，切换回默认背景颜色\")\n    # @pytest.mark.run(order=1)\n    def test_personal_switchcolor2(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        before_raw_color = personal.get_find_element('//div[@class=\"navTop\"]').value_of_css_property(\"background-color\")\n        before_parsed_color = Color.from_string(before_raw_color).rgb\n        personal.go_setting_page()\n        personal.click_button('(//div[@class=\"w-b-80\"])[2]//div[text()=\" 默认 \"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n        sleep(2)\n        after_raw_color = personal.get_find_element('//div[@class=\"navTop\"]').value_of_css_property(\"background-color\")\n        after_parsed_color = Color.from_string(after_raw_color).rgb\n>       assert before_parsed_color == \"rgb(33, 113, 15)\" and after_parsed_color == \"rgb(50, 66, 85)\"\nE       AssertionError: assert ('rgb(50, 66, 85)' == 'rgb(33, 113, 15)'\nE         \nE         \u001B[0m\u001B[91m- rgb(33, 113, 15)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ rgb(50, 66, 85)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_personal.py:304: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_personal","time":{"start":1761062271377,"stop":1761062282780,"duration":11403},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('rgb(50, 66, 85)' == 'rgb(33, 113, 15)'\n  \n  \u001B[0m\u001B[91m- rgb(33, 113, 15)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ rgb(50, 66, 85)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_personal.TestPersonalPage object at 0x00000173A649A680>, login_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c066a363ac9b400d0f60a27189ab0fdc\")>\n\n    @allure.story(\"重新启动设置不变，切换回默认背景颜色\")\n    # @pytest.mark.run(order=1)\n    def test_personal_switchcolor2(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        before_raw_color = personal.get_find_element('//div[@class=\"navTop\"]').value_of_css_property(\"background-color\")\n        before_parsed_color = Color.from_string(before_raw_color).rgb\n        personal.go_setting_page()\n        personal.click_button('(//div[@class=\"w-b-80\"])[2]//div[text()=\" 默认 \"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n        sleep(2)\n        after_raw_color = personal.get_find_element('//div[@class=\"navTop\"]').value_of_css_property(\"background-color\")\n        after_parsed_color = Color.from_string(after_raw_color).rgb\n>       assert before_parsed_color == \"rgb(33, 113, 15)\" and after_parsed_color == \"rgb(50, 66, 85)\"\nE       AssertionError: assert ('rgb(50, 66, 85)' == 'rgb(33, 113, 15)'\nE         \nE         \u001B[0m\u001B[91m- rgb(33, 113, 15)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ rgb(50, 66, 85)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_personal.py:304: AssertionError","steps":[],"attachments":[{"uid":"d0c953271bdfe382","name":"test_personal_switchcolor2_failure","source":"d0c953271bdfe382.png","type":"image/png","size":88648},{"uid":"fcad161ea49434fb","name":"test_personal_switchcolor2_source","source":"fcad161ea49434fb.html","type":"text/html","size":2927446},{"uid":"5f4f7bfbd2e73bce","name":"log","source":"5f4f7bfbd2e73bce.txt","type":"text/plain","size":2387}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_personal::0","time":{"start":1761062288140,"stop":1761062290473,"duration":2333},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"重新启动设置不变，切换回默认背景颜色"},{"name":"feature","value":"个人设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_personal"},{"name":"subSuite","value":"TestPersonalPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_personal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bb8da595e3d652eb","status":"failed","statusDetails":"AssertionError: assert ('rgb(33, 113, 15)' == 'rgb(33, 113, 15)'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m rgb(33, 113, 15)\u001B[90m\u001B[39;49;00m and 'rgb(33, 113, 15)' == 'rgb(50, 66, 85)'\n  \n  \u001B[0m\u001B[91m- rgb(50, 66, 85)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ rgb(33, 113, 15)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","time":{"start":1761062263788,"stop":1761062268523,"duration":4735}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"afec18e946f468b0.json","parameterValues":[]}