{"uid":"63ce47cccd33172a","name":"test_operationPlan_selectfail3","fullName":"Tests.test_items.test_operationPlan.TestOperationPlanPage#test_operationPlan_selectfail3","historyId":"05705d5b1b233edea8d07a8d4059e931","time":{"start":1760366006353,"stop":1760366017839,"duration":11486},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff71bec6f65+78965]\n\tGetHandleVerifier [0x0x7ff71bec6fc0+79056]\n\t(No symbol) [0x0x7ff71bc59dda]\n\t(No symbol) [0x0x7ff71bcb02ea]\n\t(No symbol) [0x0x7ff71bcb059c]\n\t(No symbol) [0x0x7ff71bd03f37]\n\t(No symbol) [0x0x7ff71bcd86af]\n\t(No symbol) [0x0x7ff71bd00dbe]\n\t(No symbol) [0x0x7ff71bcd8443]\n\t(No symbol) [0x0x7ff71bca1311]\n\t(No symbol) [0x0x7ff71bca20a3]\n\tGetHandleVerifier [0x0x7ff71c17e26d+2926461]\n\tGetHandleVerifier [0x0x7ff71c178993+2903715]\n\tGetHandleVerifier [0x0x7ff71c196aed+3026941]\n\tGetHandleVerifier [0x0x7ff71bee16fe+187406]\n\tGetHandleVerifier [0x0x7ff71bee96ef+220159]\n\tGetHandleVerifier [0x0x7ff71becfaf4+114692]\n\tGetHandleVerifier [0x0x7ff71becfca9+115129]\n\tGetHandleVerifier [0x0x7ff71beb64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffe68f47374+20]\n\tRtlUserThreadStart [0x0x7ffe691dcc91+33]","statusTrace":"self = <test_items.test_operationPlan.TestOperationPlanPage object at 0x00000216A2154CD0>, login_to_operationPlan = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5c62dc894dc4a817812fc42435a3712c\")>\n\n    @allure.story(\"勾选资源，不选择时间段，点击查询 不允许查询\")\n    # @pytest.mark.run(order=1)\n    def test_operationPlan_selectfail3(self, login_to_operationPlan):\n        driver = login_to_operationPlan  # WebDriver 实例\n        operationPlan = operationPlanPage(\n            driver\n        )  # 用 operationPlan 初始化 operationPlanPage\n        sleep(1)\n        operationPlan.click_button(\n            '(//span[@class=\"vxe-checkbox--icon vxe-icon-checkbox-unchecked\"])[3]'\n        )\n        operationPlan.click_selebutton()\n>       message = operationPlan.get_find_message()\n\nTests\\test_items\\test_operationPlan.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\operationPlan_page.py:45: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5c62dc894dc4a817812fc42435a3712c\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x00000216A3B09510>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff71bec6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff71bec6fc0+79056]\nE       \t(No symbol) [0x0x7ff71bc59dda]\nE       \t(No symbol) [0x0x7ff71bcb02ea]\nE       \t(No symbol) [0x0x7ff71bcb059c]\nE       \t(No symbol) [0x0x7ff71bd03f37]\nE       \t(No symbol) [0x0x7ff71bcd86af]\nE       \t(No symbol) [0x0x7ff71bd00dbe]\nE       \t(No symbol) [0x0x7ff71bcd8443]\nE       \t(No symbol) [0x0x7ff71bca1311]\nE       \t(No symbol) [0x0x7ff71bca20a3]\nE       \tGetHandleVerifier [0x0x7ff71c17e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff71c178993+2903715]\nE       \tGetHandleVerifier [0x0x7ff71c196aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff71bee16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff71bee96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71becfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71becfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff71beb64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe68f47374+20]\nE       \tRtlUserThreadStart [0x0x7ffe691dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_operationPlan","time":{"start":1760365996348,"stop":1760366006352,"duration":10004},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff71bec6f65+78965]\n\tGetHandleVerifier [0x0x7ff71bec6fc0+79056]\n\t(No symbol) [0x0x7ff71bc59dda]\n\t(No symbol) [0x0x7ff71bcb02ea]\n\t(No symbol) [0x0x7ff71bcb059c]\n\t(No symbol) [0x0x7ff71bd03f37]\n\t(No symbol) [0x0x7ff71bcd86af]\n\t(No symbol) [0x0x7ff71bd00dbe]\n\t(No symbol) [0x0x7ff71bcd8443]\n\t(No symbol) [0x0x7ff71bca1311]\n\t(No symbol) [0x0x7ff71bca20a3]\n\tGetHandleVerifier [0x0x7ff71c17e26d+2926461]\n\tGetHandleVerifier [0x0x7ff71c178993+2903715]\n\tGetHandleVerifier [0x0x7ff71c196aed+3026941]\n\tGetHandleVerifier [0x0x7ff71bee16fe+187406]\n\tGetHandleVerifier [0x0x7ff71bee96ef+220159]\n\tGetHandleVerifier [0x0x7ff71becfaf4+114692]\n\tGetHandleVerifier [0x0x7ff71becfca9+115129]\n\tGetHandleVerifier [0x0x7ff71beb64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffe68f47374+20]\n\tRtlUserThreadStart [0x0x7ffe691dcc91+33]","statusTrace":"self = <test_items.test_operationPlan.TestOperationPlanPage object at 0x00000216A2154CD0>, login_to_operationPlan = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5c62dc894dc4a817812fc42435a3712c\")>\n\n    @allure.story(\"勾选资源，不选择时间段，点击查询 不允许查询\")\n    # @pytest.mark.run(order=1)\n    def test_operationPlan_selectfail3(self, login_to_operationPlan):\n        driver = login_to_operationPlan  # WebDriver 实例\n        operationPlan = operationPlanPage(\n            driver\n        )  # 用 operationPlan 初始化 operationPlanPage\n        sleep(1)\n        operationPlan.click_button(\n            '(//span[@class=\"vxe-checkbox--icon vxe-icon-checkbox-unchecked\"])[3]'\n        )\n        operationPlan.click_selebutton()\n>       message = operationPlan.get_find_message()\n\nTests\\test_items\\test_operationPlan.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\operationPlan_page.py:45: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5c62dc894dc4a817812fc42435a3712c\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x00000216A3B09510>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff71bec6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff71bec6fc0+79056]\nE       \t(No symbol) [0x0x7ff71bc59dda]\nE       \t(No symbol) [0x0x7ff71bcb02ea]\nE       \t(No symbol) [0x0x7ff71bcb059c]\nE       \t(No symbol) [0x0x7ff71bd03f37]\nE       \t(No symbol) [0x0x7ff71bcd86af]\nE       \t(No symbol) [0x0x7ff71bd00dbe]\nE       \t(No symbol) [0x0x7ff71bcd8443]\nE       \t(No symbol) [0x0x7ff71bca1311]\nE       \t(No symbol) [0x0x7ff71bca20a3]\nE       \tGetHandleVerifier [0x0x7ff71c17e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff71c178993+2903715]\nE       \tGetHandleVerifier [0x0x7ff71c196aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff71bee16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff71bee96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71becfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71becfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff71beb64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe68f47374+20]\nE       \tRtlUserThreadStart [0x0x7ffe691dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"b07a0dc7c0a6d366","name":"test_operationPlan_selectfail3_failure","source":"b07a0dc7c0a6d366.png","type":"image/png","size":102260},{"uid":"f8ca95ecaa2fede3","name":"test_operationPlan_selectfail3_source","source":"f8ca95ecaa2fede3.html","type":"text/html","size":1174299},{"uid":"79e6bbf53f58b22c","name":"log","source":"79e6bbf53f58b22c.txt","type":"text/plain","size":1024}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_operationPlan::0","time":{"start":1760366018081,"stop":1760366020338,"duration":2257},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"勾选资源，不选择时间段，点击查询 不允许查询"},{"name":"feature","value":"工作指示发布表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_operationPlan"},{"name":"subSuite","value":"TestOperationPlanPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_operationPlan"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"63ce47cccd33172a.json","parameterValues":[]}