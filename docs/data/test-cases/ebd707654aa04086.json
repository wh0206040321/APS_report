{"uid":"ebd707654aa04086","name":"test_sched_attribute3","fullName":"Tests.test_material.test_qtProgrammeMan.TestSchedPage#test_sched_attribute3","historyId":"3a6e3fd80ba1a974f0588081c78fd8f1","time":{"start":1755188151333,"stop":1755188166824,"duration":15491},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //div[text()=\"预占料供应数据筛选 \"]/following-sibling::div; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","statusTrace":"self = <Pages.materialPage.qtProgrammeMan_page.SchedPage object at 0x00000199721B2B60>\nxpath_list = ['//div[text()=\"预占料供应数据筛选 \"]/following-sibling::div', '//div[text()=\"标准需求表数据筛选 \"]/following-sibling::div', '//div[text...bling::div', '//div[text()=\"标准供应表排序条件式 \"]/following-sibling::div', '//div[text()=\"供需分配有效条件式 \"]/following-sibling::div']\n\n    def expression_click(self, xpath_list):\n        for index, xpath in enumerate(xpath_list, 1):\n            try:\n                # 显式等待元素可见（最多等待10秒）\n                # element = WebDriverWait(self.driver, 10).until(\n                #     EC.visibility_of_element_located((\"xpath\", xpath))\n                # )\n                self.click_button(xpath)\n>               element = self.get_find_element_xpath('//tr[./td[2][.//span[text()=\"Abs\"]]]/td[2]')\n\nPages\\materialPage\\qtProgrammeMan_page.py:210: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\materialPage\\qtProgrammeMan_page.py:75: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"af3fef1fa6468700306d75c94586b206\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000199723039A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\nE       \t(No symbol) [0x0x7ff7f9b89dda]\nE       \t(No symbol) [0x0x7ff7f9be02ea]\nE       \t(No symbol) [0x0x7ff7f9be059c]\nE       \t(No symbol) [0x0x7ff7f9c33f37]\nE       \t(No symbol) [0x0x7ff7f9c086af]\nE       \t(No symbol) [0x0x7ff7f9c30dbe]\nE       \t(No symbol) [0x0x7ff7f9c08443]\nE       \t(No symbol) [0x0x7ff7f9bd1311]\nE       \t(No symbol) [0x0x7ff7f9bd20a3]\nE       \tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcd4147374+20]\nE       \tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_material.test_qtProgrammeMan.TestSchedPage object at 0x00000199717B9C30>\nlogin_to_sched = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"af3fef1fa6468700306d75c94586b206\")>\n\n    @allure.story(\"属性设置-齐套供需设置保存全部成功\")\n    # @pytest.mark.run(order=1)\n    def test_sched_attribute3(self, login_to_sched):\n        driver = login_to_sched  # WebDriver 实例\n        sched = SchedPage(driver)  # 用 driver 初始化 SchedPage\n        name = \"标准方案复制\"\n        # 选择排产方案(订单级)复制方案\n        sched.click_button(f'//ul[@visible=\"visible\"]//ul//span[text()=\"{name}\"]')\n        sched.click_attribute_button()\n        sleep(2)\n        # 批量修改表达式\n        expression_list = [\n            '//div[text()=\"预占料供应数据筛选 \"]/following-sibling::div',\n            '//div[text()=\"标准需求表数据筛选 \"]/following-sibling::div',\n            '//div[text()=\"标准供应表数据筛选 \"]/following-sibling::div',\n            '//div[text()=\"标准供应表排序条件式 \"]/following-sibling::div',\n            '//div[text()=\"供需分配有效条件式 \"]/following-sibling::div'\n        ]\n>       sched.expression_click(expression_list)\n\nTests\\test_material\\test_qtProgrammeMan.py:582: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.materialPage.qtProgrammeMan_page.SchedPage object at 0x00000199721B2B60>\nxpath_list = ['//div[text()=\"预占料供应数据筛选 \"]/following-sibling::div', '//div[text()=\"标准需求表数据筛选 \"]/following-sibling::div', '//div[text...bling::div', '//div[text()=\"标准供应表排序条件式 \"]/following-sibling::div', '//div[text()=\"供需分配有效条件式 \"]/following-sibling::div']\n\n    def expression_click(self, xpath_list):\n        for index, xpath in enumerate(xpath_list, 1):\n            try:\n                # 显式等待元素可见（最多等待10秒）\n                # element = WebDriverWait(self.driver, 10).until(\n                #     EC.visibility_of_element_located((\"xpath\", xpath))\n                # )\n                self.click_button(xpath)\n                element = self.get_find_element_xpath('//tr[./td[2][.//span[text()=\"Abs\"]]]/td[2]')\n                actions = ActionChains(self.driver)\n                # 双击命令\n                actions.double_click(element).perform()\n                self.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n                sleep(1)\n            except TimeoutException:\n>               raise NoSuchElementException(\n                    f\"元素未找到（XPath列表第{index}个）: {xpath}\"\n                )\nE               selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //div[text()=\"预占料供应数据筛选 \"]/following-sibling::div; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\n\nPages\\materialPage\\qtProgrammeMan_page.py:217: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_sched","time":{"start":1755187935006,"stop":1755187943243,"duration":8237},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //div[text()=\"预占料供应数据筛选 \"]/following-sibling::div; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","statusTrace":"self = <Pages.materialPage.qtProgrammeMan_page.SchedPage object at 0x00000199721B2B60>\nxpath_list = ['//div[text()=\"预占料供应数据筛选 \"]/following-sibling::div', '//div[text()=\"标准需求表数据筛选 \"]/following-sibling::div', '//div[text...bling::div', '//div[text()=\"标准供应表排序条件式 \"]/following-sibling::div', '//div[text()=\"供需分配有效条件式 \"]/following-sibling::div']\n\n    def expression_click(self, xpath_list):\n        for index, xpath in enumerate(xpath_list, 1):\n            try:\n                # 显式等待元素可见（最多等待10秒）\n                # element = WebDriverWait(self.driver, 10).until(\n                #     EC.visibility_of_element_located((\"xpath\", xpath))\n                # )\n                self.click_button(xpath)\n>               element = self.get_find_element_xpath('//tr[./td[2][.//span[text()=\"Abs\"]]]/td[2]')\n\nPages\\materialPage\\qtProgrammeMan_page.py:210: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\materialPage\\qtProgrammeMan_page.py:75: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"af3fef1fa6468700306d75c94586b206\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000199723039A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\nE       \t(No symbol) [0x0x7ff7f9b89dda]\nE       \t(No symbol) [0x0x7ff7f9be02ea]\nE       \t(No symbol) [0x0x7ff7f9be059c]\nE       \t(No symbol) [0x0x7ff7f9c33f37]\nE       \t(No symbol) [0x0x7ff7f9c086af]\nE       \t(No symbol) [0x0x7ff7f9c30dbe]\nE       \t(No symbol) [0x0x7ff7f9c08443]\nE       \t(No symbol) [0x0x7ff7f9bd1311]\nE       \t(No symbol) [0x0x7ff7f9bd20a3]\nE       \tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcd4147374+20]\nE       \tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_material.test_qtProgrammeMan.TestSchedPage object at 0x00000199717B9C30>\nlogin_to_sched = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"af3fef1fa6468700306d75c94586b206\")>\n\n    @allure.story(\"属性设置-齐套供需设置保存全部成功\")\n    # @pytest.mark.run(order=1)\n    def test_sched_attribute3(self, login_to_sched):\n        driver = login_to_sched  # WebDriver 实例\n        sched = SchedPage(driver)  # 用 driver 初始化 SchedPage\n        name = \"标准方案复制\"\n        # 选择排产方案(订单级)复制方案\n        sched.click_button(f'//ul[@visible=\"visible\"]//ul//span[text()=\"{name}\"]')\n        sched.click_attribute_button()\n        sleep(2)\n        # 批量修改表达式\n        expression_list = [\n            '//div[text()=\"预占料供应数据筛选 \"]/following-sibling::div',\n            '//div[text()=\"标准需求表数据筛选 \"]/following-sibling::div',\n            '//div[text()=\"标准供应表数据筛选 \"]/following-sibling::div',\n            '//div[text()=\"标准供应表排序条件式 \"]/following-sibling::div',\n            '//div[text()=\"供需分配有效条件式 \"]/following-sibling::div'\n        ]\n>       sched.expression_click(expression_list)\n\nTests\\test_material\\test_qtProgrammeMan.py:582: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.materialPage.qtProgrammeMan_page.SchedPage object at 0x00000199721B2B60>\nxpath_list = ['//div[text()=\"预占料供应数据筛选 \"]/following-sibling::div', '//div[text()=\"标准需求表数据筛选 \"]/following-sibling::div', '//div[text...bling::div', '//div[text()=\"标准供应表排序条件式 \"]/following-sibling::div', '//div[text()=\"供需分配有效条件式 \"]/following-sibling::div']\n\n    def expression_click(self, xpath_list):\n        for index, xpath in enumerate(xpath_list, 1):\n            try:\n                # 显式等待元素可见（最多等待10秒）\n                # element = WebDriverWait(self.driver, 10).until(\n                #     EC.visibility_of_element_located((\"xpath\", xpath))\n                # )\n                self.click_button(xpath)\n                element = self.get_find_element_xpath('//tr[./td[2][.//span[text()=\"Abs\"]]]/td[2]')\n                actions = ActionChains(self.driver)\n                # 双击命令\n                actions.double_click(element).perform()\n                self.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n                sleep(1)\n            except TimeoutException:\n>               raise NoSuchElementException(\n                    f\"元素未找到（XPath列表第{index}个）: {xpath}\"\n                )\nE               selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //div[text()=\"预占料供应数据筛选 \"]/following-sibling::div; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\n\nPages\\materialPage\\qtProgrammeMan_page.py:217: NoSuchElementException","steps":[],"attachments":[{"uid":"9f8af61da9b01649","name":"log","source":"9f8af61da9b01649.txt","type":"text/plain","size":1797}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"login_to_sched::0","time":{"start":1755188293403,"stop":1755188295554,"duration":2151},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"物控方案管理表测试用例"},{"name":"story","value":"属性设置-齐套供需设置保存全部成功"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_qtProgrammeMan"},{"name":"subSuite","value":"TestSchedPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"16980-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_qtProgrammeMan"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"616005fb1dc0dc33","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //div[text()=\"预占料供应数据筛选 \"]/following-sibling::div; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","time":{"start":1755188135849,"stop":1755188151291,"duration":15442}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"ebd707654aa04086.json","parameterValues":[]}