{"uid":"79035823838be3d1","name":"test_resourceAllocation_allocation1","fullName":"Tests.test_system.test_resourceAllocation.TestResourceAllocationPage#test_resourceAllocation_allocation1","historyId":"0bb172f3e3a34e295dd0bd2e42df4bab","time":{"start":1761075689177,"stop":1761075709877,"duration":20700},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"1测试A\"]","statusTrace":"self = <Pages.itemsPage.login_page.LoginPage object at 0x00000173A6C7E710>, by_or_element = 'xpath', value = '//li[text()=\"1测试A\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0585e3fa26d08a7b2e557a26c4b81771\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000173A8867520>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196602ea]\nE       \t(No symbol) [0x0x7ff71966059c]\nE       \t(No symbol) [0x0x7ff7196b3f37]\nE       \t(No symbol) [0x0x7ff7196886af]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_resourceAllocation.TestResourceAllocationPage object at 0x00000173A6915540>, login_to_resourceAllocation = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0585e3fa26d08a7b2e557a26c4b81771\")>\n\n    @allure.story(\"分配一个资源给另外一个用户成功\")\n    # @pytest.mark.run(order=1)\n    def test_resourceAllocation_allocation1(self, login_to_resourceAllocation):\n        driver = login_to_resourceAllocation  # WebDriver 实例\n        user = '1user1'\n        resource_ = '1测试资源同步数据1'\n        allocation = ResourceAllocationPage(driver)  # 用 driver 初始化 ResourceAllocationPage\n        allocation.select_input('用户代码', user)\n        allocation.click_button(f'//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"{user}\"]')\n        allocation.click_all_button(\"编辑\")\n        allocation.select_input('资源代码', resource_)\n        allocation.click_button(f'//table[@class=\"vxe-table--body\"]//tr[td[3]//span[text()=\"{resource_}\"]]/td[2]/div/span')\n        allocation.click_all_button(\"保存\")\n        message = allocation.get_find_message()\n>       allocation.log_out(name=\"1user1\", password=\"Qw123456\", module=\"1测试A\")\n\nTests\\test_system\\test_resourceAllocation.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\resourceAllocation_page.py:117: in log_out\n    page.login(name, password, module)\nPages\\itemsPage\\login_page.py:34: in login\n    self.select_planning_unit(planning_unit)\nPages\\itemsPage\\login_page.py:28: in select_planning_unit\n    self.click_button(f'//li[text()=\"{planning_unit}\"]')\nPages\\itemsPage\\login_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.login_page.LoginPage object at 0x00000173A6C7E710>, by_or_element = 'xpath', value = '//li[text()=\"1测试A\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"1测试A\"]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_resourceAllocation","time":{"start":1761075670748,"stop":1761075689176,"duration":18428},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"1测试A\"]","statusTrace":"self = <Pages.itemsPage.login_page.LoginPage object at 0x00000173A6C7E710>, by_or_element = 'xpath', value = '//li[text()=\"1测试A\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0585e3fa26d08a7b2e557a26c4b81771\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000173A8867520>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196602ea]\nE       \t(No symbol) [0x0x7ff71966059c]\nE       \t(No symbol) [0x0x7ff7196b3f37]\nE       \t(No symbol) [0x0x7ff7196886af]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_resourceAllocation.TestResourceAllocationPage object at 0x00000173A6915540>, login_to_resourceAllocation = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0585e3fa26d08a7b2e557a26c4b81771\")>\n\n    @allure.story(\"分配一个资源给另外一个用户成功\")\n    # @pytest.mark.run(order=1)\n    def test_resourceAllocation_allocation1(self, login_to_resourceAllocation):\n        driver = login_to_resourceAllocation  # WebDriver 实例\n        user = '1user1'\n        resource_ = '1测试资源同步数据1'\n        allocation = ResourceAllocationPage(driver)  # 用 driver 初始化 ResourceAllocationPage\n        allocation.select_input('用户代码', user)\n        allocation.click_button(f'//table[@class=\"vxe-table--body\"]//tr/td[2]//span[text()=\"{user}\"]')\n        allocation.click_all_button(\"编辑\")\n        allocation.select_input('资源代码', resource_)\n        allocation.click_button(f'//table[@class=\"vxe-table--body\"]//tr[td[3]//span[text()=\"{resource_}\"]]/td[2]/div/span')\n        allocation.click_all_button(\"保存\")\n        message = allocation.get_find_message()\n>       allocation.log_out(name=\"1user1\", password=\"Qw123456\", module=\"1测试A\")\n\nTests\\test_system\\test_resourceAllocation.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\resourceAllocation_page.py:117: in log_out\n    page.login(name, password, module)\nPages\\itemsPage\\login_page.py:34: in login\n    self.select_planning_unit(planning_unit)\nPages\\itemsPage\\login_page.py:28: in select_planning_unit\n    self.click_button(f'//li[text()=\"{planning_unit}\"]')\nPages\\itemsPage\\login_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.login_page.LoginPage object at 0x00000173A6C7E710>, by_or_element = 'xpath', value = '//li[text()=\"1测试A\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"1测试A\"]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"2b47dd8a7f0568e0","name":"test_resourceAllocation_allocation1_failure","source":"2b47dd8a7f0568e0.png","type":"image/png","size":249968},{"uid":"5d1eb9670cc8247c","name":"test_resourceAllocation_allocation1_source","source":"5d1eb9670cc8247c.html","type":"text/html","size":868253},{"uid":"287466d05bd669a2","name":"log","source":"287466d05bd669a2.txt","type":"text/plain","size":2036}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_resourceAllocation::0","time":{"start":1761075710615,"stop":1761075713084,"duration":2469},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"配置同步页用例"},{"name":"story","value":"分配一个资源给另外一个用户成功"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_resourceAllocation"},{"name":"subSuite","value":"TestResourceAllocationPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_resourceAllocation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"79035823838be3d1.json","parameterValues":[]}