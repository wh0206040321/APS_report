{"uid":"a8b537513f819f19","name":"test_shift_edittimesuccess","fullName":"Tests.test_items.test_shift.TestShiftPage#test_shift_edittimesuccess","historyId":"7a15cc361bed78e09030728ea52459bf","time":{"start":1755781684645,"stop":1755781702219,"duration":17574},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff696576f65+78965]\n\tGetHandleVerifier [0x0x7ff696576fc0+79056]\n\t(No symbol) [0x0x7ff696309dda]\n\t(No symbol) [0x0x7ff6963602ea]\n\t(No symbol) [0x0x7ff69636059c]\n\t(No symbol) [0x0x7ff6963b3f37]\n\t(No symbol) [0x0x7ff6963886af]\n\t(No symbol) [0x0x7ff6963b0dbe]\n\t(No symbol) [0x0x7ff696388443]\n\t(No symbol) [0x0x7ff696351311]\n\t(No symbol) [0x0x7ff6963520a3]\n\tGetHandleVerifier [0x0x7ff69682e26d+2926461]\n\tGetHandleVerifier [0x0x7ff696828993+2903715]\n\tGetHandleVerifier [0x0x7ff696846aed+3026941]\n\tGetHandleVerifier [0x0x7ff6965916fe+187406]\n\tGetHandleVerifier [0x0x7ff6965996ef+220159]\n\tGetHandleVerifier [0x0x7ff69657faf4+114692]\n\tGetHandleVerifier [0x0x7ff69657fca9+115129]\n\tGetHandleVerifier [0x0x7ff6965664d8+10728]\n\tBaseThreadInitThunk [0x0x7ffd35147374+20]\n\tRtlUserThreadStart [0x0x7ffd35bdcc91+33]","statusTrace":"self = <test_items.test_shift.TestShiftPage object at 0x000002470030A0E0>, login_to_shift = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"698c052a952d1649bba90e70c5ce7be5\")>\n\n    @allure.story(\"修改时间成功\")\n    # @pytest.mark.run(order=1)\n    def test_shift_edittimesuccess(self, login_to_shift):\n        driver = login_to_shift  # WebDriver 实例\n        shift = ShiftPage(driver)  # 用 driver 初始化 ShiftPage\n    \n        # 选中修改代码班次代码\n        shift.click_button('(//span[contains(text(),\"1修改代码\")])[1]')\n        # 点击修改按钮\n        shift.click_edi_button()\n        # 点击编辑按钮\n        shift.click_button('//span[text()=\"编辑\"]')\n        time1 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[1]//input'\n        )\n        time1.send_keys(Keys.CONTROL, \"a\")\n        time1.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[1]//input', \"5\"\n        )\n    \n        time2 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[2]//input'\n        )\n        time2.send_keys(Keys.CONTROL, \"a\")\n        time2.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[2]//input', \"5\"\n        )\n    \n        time3 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[3]//input'\n        )\n        time3.send_keys(Keys.CONTROL, \"a\")\n        time3.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[3]//input', \"5\"\n        )\n    \n        time4 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[4]//input'\n        )\n        time4.send_keys(Keys.CONTROL, \"a\")\n        time4.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[4]//input', \"8\"\n        )\n    \n        time5 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[5]//input'\n        )\n        time5.send_keys(Keys.CONTROL, \"a\")\n        time5.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[5]//input', \"5\"\n        )\n    \n        time6 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[6]//input'\n        )\n        time6.send_keys(Keys.CONTROL, \"a\")\n        time6.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[6]//input', \"5\"\n        )\n    \n        shift.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n        sleep(1)\n    \n        timedata = shift.get_find_element_xpath(\n            '(//span[text()=\"时间\"])[1]/ancestor::table/parent::div/parent::div/div[2]/table//tr[1]//td[2]//span'\n        ).text\n    \n        # 点击确定\n        shift.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n>       adddata = shift.get_find_element_xpath(\n            '(//span[text()=\"1修改代码\"])[1]/ancestor::tr[1]/td[3]'\n        ).text\n\nTests\\test_items\\test_shift.py:567: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\shift_page.py:45: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"698c052a952d1649bba90e70c5ce7be5\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002470075FE20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff696576f65+78965]\nE       \tGetHandleVerifier [0x0x7ff696576fc0+79056]\nE       \t(No symbol) [0x0x7ff696309dda]\nE       \t(No symbol) [0x0x7ff6963602ea]\nE       \t(No symbol) [0x0x7ff69636059c]\nE       \t(No symbol) [0x0x7ff6963b3f37]\nE       \t(No symbol) [0x0x7ff6963886af]\nE       \t(No symbol) [0x0x7ff6963b0dbe]\nE       \t(No symbol) [0x0x7ff696388443]\nE       \t(No symbol) [0x0x7ff696351311]\nE       \t(No symbol) [0x0x7ff6963520a3]\nE       \tGetHandleVerifier [0x0x7ff69682e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff696828993+2903715]\nE       \tGetHandleVerifier [0x0x7ff696846aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6965916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6965996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff69657faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff69657fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6965664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35147374+20]\nE       \tRtlUserThreadStart [0x0x7ffd35bdcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_shift","time":{"start":1755781676420,"stop":1755781684644,"duration":8224},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff696576f65+78965]\n\tGetHandleVerifier [0x0x7ff696576fc0+79056]\n\t(No symbol) [0x0x7ff696309dda]\n\t(No symbol) [0x0x7ff6963602ea]\n\t(No symbol) [0x0x7ff69636059c]\n\t(No symbol) [0x0x7ff6963b3f37]\n\t(No symbol) [0x0x7ff6963886af]\n\t(No symbol) [0x0x7ff6963b0dbe]\n\t(No symbol) [0x0x7ff696388443]\n\t(No symbol) [0x0x7ff696351311]\n\t(No symbol) [0x0x7ff6963520a3]\n\tGetHandleVerifier [0x0x7ff69682e26d+2926461]\n\tGetHandleVerifier [0x0x7ff696828993+2903715]\n\tGetHandleVerifier [0x0x7ff696846aed+3026941]\n\tGetHandleVerifier [0x0x7ff6965916fe+187406]\n\tGetHandleVerifier [0x0x7ff6965996ef+220159]\n\tGetHandleVerifier [0x0x7ff69657faf4+114692]\n\tGetHandleVerifier [0x0x7ff69657fca9+115129]\n\tGetHandleVerifier [0x0x7ff6965664d8+10728]\n\tBaseThreadInitThunk [0x0x7ffd35147374+20]\n\tRtlUserThreadStart [0x0x7ffd35bdcc91+33]","statusTrace":"self = <test_items.test_shift.TestShiftPage object at 0x000002470030A0E0>, login_to_shift = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"698c052a952d1649bba90e70c5ce7be5\")>\n\n    @allure.story(\"修改时间成功\")\n    # @pytest.mark.run(order=1)\n    def test_shift_edittimesuccess(self, login_to_shift):\n        driver = login_to_shift  # WebDriver 实例\n        shift = ShiftPage(driver)  # 用 driver 初始化 ShiftPage\n    \n        # 选中修改代码班次代码\n        shift.click_button('(//span[contains(text(),\"1修改代码\")])[1]')\n        # 点击修改按钮\n        shift.click_edi_button()\n        # 点击编辑按钮\n        shift.click_button('//span[text()=\"编辑\"]')\n        time1 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[1]//input'\n        )\n        time1.send_keys(Keys.CONTROL, \"a\")\n        time1.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[1]//input', \"5\"\n        )\n    \n        time2 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[2]//input'\n        )\n        time2.send_keys(Keys.CONTROL, \"a\")\n        time2.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[2]//input', \"5\"\n        )\n    \n        time3 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[3]//input'\n        )\n        time3.send_keys(Keys.CONTROL, \"a\")\n        time3.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[3]//input', \"5\"\n        )\n    \n        time4 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[4]//input'\n        )\n        time4.send_keys(Keys.CONTROL, \"a\")\n        time4.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[4]//input', \"8\"\n        )\n    \n        time5 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[5]//input'\n        )\n        time5.send_keys(Keys.CONTROL, \"a\")\n        time5.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[5]//input', \"5\"\n        )\n    \n        time6 = shift.get_find_element_xpath(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[6]//input'\n        )\n        time6.send_keys(Keys.CONTROL, \"a\")\n        time6.send_keys(Keys.BACK_SPACE)\n        shift.enter_texts(\n            '//div[@class=\"shift-time p-b-10 flex-j-c-between\"]/div[6]//input', \"5\"\n        )\n    \n        shift.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n        sleep(1)\n    \n        timedata = shift.get_find_element_xpath(\n            '(//span[text()=\"时间\"])[1]/ancestor::table/parent::div/parent::div/div[2]/table//tr[1]//td[2]//span'\n        ).text\n    \n        # 点击确定\n        shift.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n>       adddata = shift.get_find_element_xpath(\n            '(//span[text()=\"1修改代码\"])[1]/ancestor::tr[1]/td[3]'\n        ).text\n\nTests\\test_items\\test_shift.py:567: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\shift_page.py:45: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"698c052a952d1649bba90e70c5ce7be5\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002470075FE20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff696576f65+78965]\nE       \tGetHandleVerifier [0x0x7ff696576fc0+79056]\nE       \t(No symbol) [0x0x7ff696309dda]\nE       \t(No symbol) [0x0x7ff6963602ea]\nE       \t(No symbol) [0x0x7ff69636059c]\nE       \t(No symbol) [0x0x7ff6963b3f37]\nE       \t(No symbol) [0x0x7ff6963886af]\nE       \t(No symbol) [0x0x7ff6963b0dbe]\nE       \t(No symbol) [0x0x7ff696388443]\nE       \t(No symbol) [0x0x7ff696351311]\nE       \t(No symbol) [0x0x7ff6963520a3]\nE       \tGetHandleVerifier [0x0x7ff69682e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff696828993+2903715]\nE       \tGetHandleVerifier [0x0x7ff696846aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6965916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6965996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff69657faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff69657fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6965664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffd35147374+20]\nE       \tRtlUserThreadStart [0x0x7ffd35bdcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"b06cf1b4a57feaf2","name":"test_shift_edittimesuccess_failure","source":"b06cf1b4a57feaf2.png","type":"image/png","size":111264},{"uid":"3cf6b83f45d20e3d","name":"test_shift_edittimesuccess_source","source":"3cf6b83f45d20e3d.html","type":"text/html","size":1264614},{"uid":"c6424b0d8c55cc08","name":"log","source":"c6424b0d8c55cc08.txt","type":"text/plain","size":2568}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"login_to_shift::0","time":{"start":1755781702392,"stop":1755781704563,"duration":2171},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"feature","value":"班次表测试用例"},{"name":"story","value":"修改时间成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_shift"},{"name":"subSuite","value":"TestShiftPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21852-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_shift"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"a8b537513f819f19.json","parameterValues":[]}