{"uid":"fed8a642838070f5","name":"test_role_addtestdata","fullName":"Tests.test_system.test_role.TestRolePage#test_role_addtestdata","historyId":"5bd12ee090723db18dd87985e023b58d","time":{"start":1760982292604,"stop":1760982317524,"duration":24920},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\" 刷新\"]","statusTrace":"self = <Pages.systemPage.role_page.RolePage object at 0x0000014AE3136C20>, by_or_element = 'xpath', value = '//li[text()=\" 刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ae39ff047466375bc1b8ce1cd9e968fe\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000014AE4D4ADD0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_role.TestRolePage object at 0x0000014AE2F398D0>, login_to_role = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae39ff047466375bc1b8ce1cd9e968fe\")>\n\n    @allure.story(\"添加测试数据\")\n    # @pytest.mark.run(order=1)\n    def test_role_addtestdata(self, login_to_role):\n        driver = login_to_role  # WebDriver 实例\n        role = RolePage(driver)  # 用 driver 初始化 RolePage\n        date_driver = DateDriver()\n        name = \"1测试角色代码3\"\n        module = \"1测试计划单元CTB\"\n        role.add_role(name, module)\n        num = len(role.finds_elements(By.XPATH, '//div[@class=\"ivu-tree\"]//li/label/span'))\n        for i in range(1, num):\n            role.click_button(f'(//div[@class=\"ivu-tree\"]//li/label/span)[{i}]')\n        role.click_all_button(\"保存\")\n>       role.right_refresh()\n\nTests\\test_system\\test_role.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\role_page.py:56: in right_refresh\n    self.click_button('//li[text()=\" 刷新\"]')\nPages\\systemPage\\role_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.role_page.RolePage object at 0x0000014AE3136C20>, by_or_element = 'xpath', value = '//li[text()=\" 刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\" 刷新\"]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_role","time":{"start":1760982276006,"stop":1760982292602,"duration":16596},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\" 刷新\"]","statusTrace":"self = <Pages.systemPage.role_page.RolePage object at 0x0000014AE3136C20>, by_or_element = 'xpath', value = '//li[text()=\" 刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ae39ff047466375bc1b8ce1cd9e968fe\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000014AE4D4ADD0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_role.TestRolePage object at 0x0000014AE2F398D0>, login_to_role = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae39ff047466375bc1b8ce1cd9e968fe\")>\n\n    @allure.story(\"添加测试数据\")\n    # @pytest.mark.run(order=1)\n    def test_role_addtestdata(self, login_to_role):\n        driver = login_to_role  # WebDriver 实例\n        role = RolePage(driver)  # 用 driver 初始化 RolePage\n        date_driver = DateDriver()\n        name = \"1测试角色代码3\"\n        module = \"1测试计划单元CTB\"\n        role.add_role(name, module)\n        num = len(role.finds_elements(By.XPATH, '//div[@class=\"ivu-tree\"]//li/label/span'))\n        for i in range(1, num):\n            role.click_button(f'(//div[@class=\"ivu-tree\"]//li/label/span)[{i}]')\n        role.click_all_button(\"保存\")\n>       role.right_refresh()\n\nTests\\test_system\\test_role.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\role_page.py:56: in right_refresh\n    self.click_button('//li[text()=\" 刷新\"]')\nPages\\systemPage\\role_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.role_page.RolePage object at 0x0000014AE3136C20>, by_or_element = 'xpath', value = '//li[text()=\" 刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\" 刷新\"]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"4ef082fed7097892","name":"test_role_addtestdata_failure","source":"4ef082fed7097892.png","type":"image/png","size":140534},{"uid":"6e415ddbf1940e07","name":"test_role_addtestdata_source","source":"6e415ddbf1940e07.html","type":"text/html","size":1177807},{"uid":"b962b82d7eaeb002","name":"log","source":"b962b82d7eaeb002.txt","type":"text/plain","size":4265}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_role::0","time":{"start":1760982318419,"stop":1760982320931,"duration":2512},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"添加测试数据"},{"name":"feature","value":"角色管理页用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_role"},{"name":"subSuite","value":"TestRolePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_role"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"fed8a642838070f5.json","parameterValues":[]}