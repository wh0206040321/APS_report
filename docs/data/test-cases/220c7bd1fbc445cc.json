{"uid":"220c7bd1fbc445cc","name":"test_setting_display3","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_display3","historyId":"3deae6071907e8094661c28a8d9d3078","time":{"start":1758724560280,"stop":1758724563460,"duration":3180},"status":"failed","statusMessage":"AssertionError: assert ('物料种类' != '物料种类')","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x00000271F3499870>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"580768d79a606c78d2d9513f8eafc9dd\")>\n\n    @allure.story(\"设置表格布局-设置物料组代码自定义显示为测试物料组代码\")\n    # @pytest.mark.run(order=1)\n    def test_setting_display3(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        # 查找包含物料代码的表格，并获取相关文本\n        after_text = setting.get_find_element_xpath(\n            '//table[.//th[.//p[text()=\"物料代码\"]]]//th[4]//p'\n        ).text\n        # 点击设置按钮，进入显示设置界面\n        setting.click_setting_button()\n        setting.click_button('//div[text()=\" 显示设置 \"]')\n        input_text = setting.get_find_element_xpath(\n            '//tr[./td[3][.//span[text()=\"物料组代码\"]]]/td[4]//input'\n        )\n        input_text.send_keys(Keys.CONTROL, \"a\")\n        input_text.send_keys(Keys.DELETE)\n        input_text.send_keys(\"测试物料组代码\")\n    \n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n        sleep(1)\n        before_text = setting.get_find_element_xpath(\n            '//table[.//th[.//p[text()=\"物料代码\"]]]//th[4]//p'\n        ).text\n>       assert before_text != after_text and before_text == \"测试物料组代码\"\nE       AssertionError: assert ('物料种类' != '物料种类')\n\nTests\\test_items\\test_setting.py:643: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1758724551896,"stop":1758724560279,"duration":8383},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('物料种类' != '物料种类')","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x00000271F3499870>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"580768d79a606c78d2d9513f8eafc9dd\")>\n\n    @allure.story(\"设置表格布局-设置物料组代码自定义显示为测试物料组代码\")\n    # @pytest.mark.run(order=1)\n    def test_setting_display3(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        # 查找包含物料代码的表格，并获取相关文本\n        after_text = setting.get_find_element_xpath(\n            '//table[.//th[.//p[text()=\"物料代码\"]]]//th[4]//p'\n        ).text\n        # 点击设置按钮，进入显示设置界面\n        setting.click_setting_button()\n        setting.click_button('//div[text()=\" 显示设置 \"]')\n        input_text = setting.get_find_element_xpath(\n            '//tr[./td[3][.//span[text()=\"物料组代码\"]]]/td[4]//input'\n        )\n        input_text.send_keys(Keys.CONTROL, \"a\")\n        input_text.send_keys(Keys.DELETE)\n        input_text.send_keys(\"测试物料组代码\")\n    \n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n        sleep(1)\n        before_text = setting.get_find_element_xpath(\n            '//table[.//th[.//p[text()=\"物料代码\"]]]//th[4]//p'\n        ).text\n>       assert before_text != after_text and before_text == \"测试物料组代码\"\nE       AssertionError: assert ('物料种类' != '物料种类')\n\nTests\\test_items\\test_setting.py:643: AssertionError","steps":[],"attachments":[{"uid":"53936397dceb7e93","name":"test_setting_display3_failure","source":"53936397dceb7e93.png","type":"image/png","size":120939},{"uid":"47f22574f3b78445","name":"test_setting_display3_source","source":"47f22574f3b78445.html","type":"text/html","size":1481653},{"uid":"4f697292c69c399","name":"log","source":"4f697292c69c399.txt","type":"text/plain","size":1640}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_setting::0","time":{"start":1758724563721,"stop":1758724565892,"duration":2171},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"设置表格布局-设置物料组代码自定义显示为测试物料组代码"},{"name":"feature","value":"标准应用设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"15904-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"220c7bd1fbc445cc.json","parameterValues":[]}