{"uid":"7f8ebd4d7a7224a","name":"test_itemgroup_selectcodesuccess","fullName":"Tests.test_items.test_itemgroup.TestItemGroupPage#test_itemgroup_selectcodesuccess","historyId":"41c6cbc8820e0c84e3a3ef8800bead37","time":{"start":1761137079682,"stop":1761137091586,"duration":11904},"status":"failed","statusMessage":"AssertionError: assert ('111' == '1测试A'\n  \n  \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_itemgroup.TestItemGroupPage object at 0x0000027FE58E8820>, login_to_itemgroup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"01ef8f53f44e6285120f76261e51c214\")>\n\n    @allure.story(\"查询物料组代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_itemgroup_selectcodesuccess(self, login_to_itemgroup):\n        driver = login_to_itemgroup  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n        sleep(3)\n        name = \"1测试A\"\n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料代码\n        item.click_button('//div[text()=\"物料组代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 定位第一行是否为1测试A\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        itemcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert itemcode == name and len(itemcode2) == 0\nE       AssertionError: assert ('111' == '1测试A'\nE         \nE         \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_itemgroup.py:536: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_itemgroup","time":{"start":1761137068909,"stop":1761137079681,"duration":10772},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('111' == '1测试A'\n  \n  \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_itemgroup.TestItemGroupPage object at 0x0000027FE58E8820>, login_to_itemgroup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"01ef8f53f44e6285120f76261e51c214\")>\n\n    @allure.story(\"查询物料组代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_itemgroup_selectcodesuccess(self, login_to_itemgroup):\n        driver = login_to_itemgroup  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n        sleep(3)\n        name = \"1测试A\"\n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料代码\n        item.click_button('//div[text()=\"物料组代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 定位第一行是否为1测试A\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        itemcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert itemcode == name and len(itemcode2) == 0\nE       AssertionError: assert ('111' == '1测试A'\nE         \nE         \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_itemgroup.py:536: AssertionError","steps":[],"attachments":[{"uid":"f6a0c3c0affaf3c7","name":"test_itemgroup_selectcodesuccess_failure","source":"f6a0c3c0affaf3c7.png","type":"image/png","size":137057},{"uid":"ffcad72dafdf7e1f","name":"test_itemgroup_selectcodesuccess_source","source":"ffcad72dafdf7e1f.html","type":"text/html","size":1435367},{"uid":"91de94660b494655","name":"log","source":"91de94660b494655.txt","type":"text/plain","size":1567}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_itemgroup::0","time":{"start":1761137091788,"stop":1761137094010,"duration":2222},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"物料组表测试用例"},{"name":"story","value":"查询物料组代码成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_itemgroup"},{"name":"subSuite","value":"TestItemGroupPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"25856-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_itemgroup"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"7f8ebd4d7a7224a.json","parameterValues":[]}