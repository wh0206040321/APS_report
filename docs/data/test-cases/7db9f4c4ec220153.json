{"uid":"7db9f4c4ec220153","name":"test_production_addfail2","fullName":"Tests.test_items.test_production.TestProductionPage#test_production_addfail2","historyId":"7c75055ce6be8e01587a34d3da8a9ff5","time":{"start":1755700919176,"stop":1755700931370,"duration":12194},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]","statusTrace":"self = <Pages.itemsPage.production_page.ProductionPage object at 0x000001FBD9F2FAF0>, by_or_element = 'xpath'\nvalue = '//table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1da433f74b6672079bc5933e46cb09e0\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001FBDA18A170>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff65f826f65+78965]\nE       \tGetHandleVerifier [0x0x7ff65f826fc0+79056]\nE       \t(No symbol) [0x0x7ff65f5b9dda]\nE       \t(No symbol) [0x0x7ff65f6102ea]\nE       \t(No symbol) [0x0x7ff65f61059c]\nE       \t(No symbol) [0x0x7ff65f663f37]\nE       \t(No symbol) [0x0x7ff65f6386af]\nE       \t(No symbol) [0x0x7ff65f660dbe]\nE       \t(No symbol) [0x0x7ff65f638443]\nE       \t(No symbol) [0x0x7ff65f601311]\nE       \t(No symbol) [0x0x7ff65f6020a3]\nE       \tGetHandleVerifier [0x0x7ff65fade26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff65fad8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff65faf6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff65f8416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff65f8496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff65f82faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff65f82fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff65f8164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff81e357374+20]\nE       \tRtlUserThreadStart [0x0x7ff82035cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_production.TestProductionPage object at 0x000001FBD9ABDC00>\nlogin_to_production = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1da433f74b6672079bc5933e46cb09e0\")>\n\n    @allure.story(\"添加工作代码 不填写报告数量 不允许提交\")\n    # @pytest.mark.run(order=1)\n    def test_production_addfail2(self, login_to_production):\n        driver = login_to_production  # WebDriver 实例\n        production = ProductionPage(driver)  # 用 driver 初始化 ProductionPage\n        production.click_add_button()\n    \n        # 点击工作代码对话框\n        production.click_button('//label[text()=\"工作代码\"]/following-sibling::div//i')\n        # 在订单代码输入框中输入“1测试C订单”\n        production.enter_texts(\n            '(//div[./p[text()=\"订单代码\"]])[2]/parent::div//input',\n            \"1测试C订单\",\n        )\n        # 选择搜索到的第一个订单“1测试C订单”\n>       production.click_button(\n            '//table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]'\n        )\n\nTests\\test_items\\test_production.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\production_page.py:39: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.production_page.ProductionPage object at 0x000001FBD9F2FAF0>, by_or_element = 'xpath'\nvalue = '//table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_production","time":{"start":1755700911014,"stop":1755700919176,"duration":8162},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]","statusTrace":"self = <Pages.itemsPage.production_page.ProductionPage object at 0x000001FBD9F2FAF0>, by_or_element = 'xpath'\nvalue = '//table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1da433f74b6672079bc5933e46cb09e0\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001FBDA18A170>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff65f826f65+78965]\nE       \tGetHandleVerifier [0x0x7ff65f826fc0+79056]\nE       \t(No symbol) [0x0x7ff65f5b9dda]\nE       \t(No symbol) [0x0x7ff65f6102ea]\nE       \t(No symbol) [0x0x7ff65f61059c]\nE       \t(No symbol) [0x0x7ff65f663f37]\nE       \t(No symbol) [0x0x7ff65f6386af]\nE       \t(No symbol) [0x0x7ff65f660dbe]\nE       \t(No symbol) [0x0x7ff65f638443]\nE       \t(No symbol) [0x0x7ff65f601311]\nE       \t(No symbol) [0x0x7ff65f6020a3]\nE       \tGetHandleVerifier [0x0x7ff65fade26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff65fad8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff65faf6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff65f8416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff65f8496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff65f82faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff65f82fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff65f8164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff81e357374+20]\nE       \tRtlUserThreadStart [0x0x7ff82035cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_production.TestProductionPage object at 0x000001FBD9ABDC00>\nlogin_to_production = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1da433f74b6672079bc5933e46cb09e0\")>\n\n    @allure.story(\"添加工作代码 不填写报告数量 不允许提交\")\n    # @pytest.mark.run(order=1)\n    def test_production_addfail2(self, login_to_production):\n        driver = login_to_production  # WebDriver 实例\n        production = ProductionPage(driver)  # 用 driver 初始化 ProductionPage\n        production.click_add_button()\n    \n        # 点击工作代码对话框\n        production.click_button('//label[text()=\"工作代码\"]/following-sibling::div//i')\n        # 在订单代码输入框中输入“1测试C订单”\n        production.enter_texts(\n            '(//div[./p[text()=\"订单代码\"]])[2]/parent::div//input',\n            \"1测试C订单\",\n        )\n        # 选择搜索到的第一个订单“1测试C订单”\n>       production.click_button(\n            '//table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]'\n        )\n\nTests\\test_items\\test_production.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\production_page.py:39: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.production_page.ProductionPage object at 0x000001FBD9F2FAF0>, by_or_element = 'xpath'\nvalue = '//table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"c801ecc115523f35","name":"test_production_addfail2_failure","source":"c801ecc115523f35.png","type":"image/png","size":104644},{"uid":"b02776cd7b55a112","name":"test_production_addfail2_source","source":"b02776cd7b55a112.html","type":"text/html","size":1296758},{"uid":"656b41acc58bd544","name":"log","source":"656b41acc58bd544.txt","type":"text/plain","size":1379}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_production::0","time":{"start":1755700931538,"stop":1755700933703,"duration":2165},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"生产报工测试用例"},{"name":"story","value":"添加工作代码 不填写报告数量 不允许提交"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_production"},{"name":"subSuite","value":"TestProductionPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"9264-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_production"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"7db9f4c4ec220153.json","parameterValues":[]}