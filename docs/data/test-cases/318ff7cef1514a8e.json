{"uid":"318ff7cef1514a8e","name":"test_resource_editcodesuccess","fullName":"Tests.test_items.test_resource.TestResourcePage#test_resource_editcodesuccess","historyId":"3b4ce984ebb9359ca1fd55a485b64af9","time":{"start":1760963942218,"stop":1760963946835,"duration":4617},"status":"failed","statusMessage":"AssertionError: 预期1测试A\nassert '1测试A' == '1测试A1'\n  \n  \u001B[0m\u001B[91m- 1测试A1\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?     -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_resource.TestResourcePage object at 0x0000014AE2E93C70>, login_to_resource = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8311fb040488b845e587f6565903490c\")>\n\n    @allure.story(\"修改资源代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_resource_editcodesuccess(self, login_to_resource):\n        driver = login_to_resource  # WebDriver 实例\n        resource = ResourcePage(driver)  # 用 driver 初始化 resourcePage\n        name = \"1测试A\"\n        resource.click_button(f'(//span[text()=\"{name}\"])[1]')\n        # 点击修改按钮\n        resource.click_edi_button()\n        sleep(1)\n        # 生成随机数\n        random_int = random.randint(1, 10)\n        text = name + f\"{random_int}\"\n        # 资源代码输入\n        resource.enter_texts(\n            '(//label[text()=\"资源代码\"])[1]/parent::div//input', f\"{text}\"\n        )\n        # 点击确定\n        resource.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        # 定位表格内容\n        resourcedata = resource.get_find_element_xpath(\n            f'(//span[contains(text(),\"{name}\")])[1]'\n        ).text\n>       assert resourcedata == text, f\"预期{resourcedata}\"\nE       AssertionError: 预期1测试A\nE       assert '1测试A' == '1测试A1'\nE         \nE         \u001B[0m\u001B[91m- 1测试A1\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?     -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_resource.py:353: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_resource","time":{"start":1760963929859,"stop":1760963942217,"duration":12358},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期1测试A\nassert '1测试A' == '1测试A1'\n  \n  \u001B[0m\u001B[91m- 1测试A1\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?     -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_resource.TestResourcePage object at 0x0000014AE2E93C70>, login_to_resource = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8311fb040488b845e587f6565903490c\")>\n\n    @allure.story(\"修改资源代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_resource_editcodesuccess(self, login_to_resource):\n        driver = login_to_resource  # WebDriver 实例\n        resource = ResourcePage(driver)  # 用 driver 初始化 resourcePage\n        name = \"1测试A\"\n        resource.click_button(f'(//span[text()=\"{name}\"])[1]')\n        # 点击修改按钮\n        resource.click_edi_button()\n        sleep(1)\n        # 生成随机数\n        random_int = random.randint(1, 10)\n        text = name + f\"{random_int}\"\n        # 资源代码输入\n        resource.enter_texts(\n            '(//label[text()=\"资源代码\"])[1]/parent::div//input', f\"{text}\"\n        )\n        # 点击确定\n        resource.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        # 定位表格内容\n        resourcedata = resource.get_find_element_xpath(\n            f'(//span[contains(text(),\"{name}\")])[1]'\n        ).text\n>       assert resourcedata == text, f\"预期{resourcedata}\"\nE       AssertionError: 预期1测试A\nE       assert '1测试A' == '1测试A1'\nE         \nE         \u001B[0m\u001B[91m- 1测试A1\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?     -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_resource.py:353: AssertionError","steps":[],"attachments":[{"uid":"23d81d3bca0826c2","name":"test_resource_editcodesuccess_failure","source":"23d81d3bca0826c2.png","type":"image/png","size":119689},{"uid":"96e2629b1d4dfeef","name":"test_resource_editcodesuccess_source","source":"96e2629b1d4dfeef.html","type":"text/html","size":1513806},{"uid":"20c9d27f0073f1ea","name":"log","source":"20c9d27f0073f1ea.txt","type":"text/plain","size":1248}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_resource::0","time":{"start":1760963947193,"stop":1760963949419,"duration":2226},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"资源表测试用例"},{"name":"story","value":"修改资源代码成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_resource"},{"name":"subSuite","value":"TestResourcePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_resource"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"318ff7cef1514a8e.json","parameterValues":[]}