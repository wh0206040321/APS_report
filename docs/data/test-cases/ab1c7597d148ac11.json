{"uid":"ab1c7597d148ac11","name":"test_setting_select_seleinput","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_select_seleinput","historyId":"862372d93344a6eb1d6da4610508f5e3","time":{"start":1761241547046,"stop":1761241585251,"duration":38205},"status":"failed","statusMessage":"AssertionError: assert ('\\u5b8c\\u6210\\u54c1' == '\\u5b8c\\u6210\\u54c1'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 完成品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '\\u5b8c\\u6210\\u54c1' == '\\u5b8c\\u6210\\u54c1'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 完成品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '中间品' == '原材料'\n  \n  \u001B[0m\u001B[91m- 原材料\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 中间品\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x000001FC18DA3130>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"20065240ac74f77b6fe8e9754adcff9c\")>\n\n    @allure.story(\"设置表格布局-物料种类快速查询-下拉框\")\n    # @pytest.mark.run(order=1)\n    def test_setting_select_seleinput(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        code = \"物料种类\"\n        # 点击设置按钮，进入显示设置界面\n        setting.click_setting_button()\n        # 点击快速查询按钮\n        setting.click_button('//div[text()=\" 快速查询 \"]')\n    \n        # 点击特定代码的行以选择\n        setting.click_button(\n            f'//tr[./td[3][.//span[text()=\"{code}\"]]]/td[4]//input[@placeholder=\"请选择\"]'\n        )\n    \n        # 打开下拉框\n        setting.click_button('//div[text()=\"下拉框\"]')\n    \n        # 点击物料种类图标以展开选项\n        setting.click_button(\n            '//tr[./td[3][.//span[text()=\"物料种类\"]]]/td[4]//i[@class=\"ivu-icon ivu-icon-md-albums\"]'\n        )\n    \n        # 选择表/视图选项\n        setting.click_button('//div[text()=\"表/视图\"]')\n    \n        # 输入并选择APS_Item\n        setting.enter_texts(\n            '//div[text()=\" 表/视图 \"]/following-sibling::div//input[@placeholder=\"请选择\"]',\n            \"APS_Item\",\n        )\n        setting.click_button('//li[text()=\"APS_Item \"]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 输入并选择Type\n        setting.enter_texts(\n            '//div[text()=\" key \"]/following-sibling::div//input[@placeholder=\"请选择\"]',\n            \"Type\",\n        )\n        setting.click_button('(//li[text()=\"Type\"])[1]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 再次输入并选择Type\n        setting.enter_texts(\n            '//div[text()=\" name \"]/following-sibling::div//input[@placeholder=\"请选择\"]',\n            \"Type\",\n        )\n        setting.click_button('(//li[text()=\"Type\"])[2]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 点击确定按钮\n        setting.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n    \n        # 点击确认按钮\n        setting.click_confirm_button()\n    \n        # 为特定代码选择P选项\n        setting.click_button(\n            f'//div[text()=\"{code}\"]/following-sibling::div//input[@placeholder=\"请选择\"]'\n        )\n        setting.click_button('//ul[@class=\"ivu-select-dropdown-list\"]/li[text()=\"P\"]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 展开物料种类下拉框\n        setting.click_button(\n            '//div[text()=\"物料种类\"]/following-sibling::div//i[@class=\"ivu-icon ivu-icon-ios-arrow-down ivu-select-arrow\"]'\n        )\n    \n        # 点击查询按钮\n        setting.click_button('//div[@class=\"queryBtn\"]/button[1]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 获取并记录P选项的结果\n        Ptext1 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[1]/td[5]'\n        ).text\n    \n        # 等待加载\n        sleep(1)\n    \n        Ptext2 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[2]/td[5]'\n        ).text\n    \n        # 点击重置按钮\n        setting.click_button('//div[@class=\"queryBtn\"]/button[2]')\n    \n        # 为特定代码选择I选项\n        setting.click_button(\n            f'//div[text()=\"{code}\"]/following-sibling::div//input[@placeholder=\"请选择\"]'\n        )\n        setting.click_button('//ul[@class=\"ivu-select-dropdown-list\"]/li[text()=\"I\"]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 展开物料种类下拉框\n        setting.click_button(\n            '//div[text()=\"物料种类\"]/following-sibling::div//i[@class=\"ivu-icon ivu-icon-ios-arrow-down ivu-select-arrow\"]'\n        )\n    \n        # 点击查询按钮\n        setting.click_button('//div[@class=\"queryBtn\"]/button[1]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 获取并记录I选项的结果\n        Itext1 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[1]/td[5]'\n        ).text\n    \n        # 等待加载\n        sleep(1)\n    \n        Itext2 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[2]/td[5]'\n        ).text\n    \n        # 点击重置按钮\n        setting.click_button('//div[@class=\"queryBtn\"]/button[2]')\n    \n        # 为特定代码选择M选项\n        setting.click_button(\n            f'//div[text()=\"{code}\"]/following-sibling::div//input[@placeholder=\"请选择\"]'\n        )\n        setting.click_button('//ul[@class=\"ivu-select-dropdown-list\"]/li[text()=\"M\"]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 展开物料种类下拉框\n        setting.click_button(\n            '//div[text()=\"物料种类\"]/following-sibling::div//i[@class=\"ivu-icon ivu-icon-ios-arrow-down ivu-select-arrow\"]'\n        )\n    \n        # 点击查询按钮\n        setting.click_button('//div[@class=\"queryBtn\"]/button[1]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 获取并记录M选项的结果\n        Mtext1 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[1]/td[5]'\n        ).text\n    \n        # 等待加载\n        sleep(1)\n    \n        Mtext2 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[2]/td[5]'\n        ).text\n    \n        # 断言所有结果一致且符合预期\n>       assert (\n            Ptext1 == Ptext2\n            and Itext1 == Itext2\n            and Mtext1 == Mtext2\n            and Ptext1 == \"完成品\"\n            and Itext1 == \"中间品\"\n            and Mtext1 == \"原材料\"\n        )\nE       AssertionError: assert ('\\u5b8c\\u6210\\u54c1' == '\\u5b8c\\u6210\\u54c1'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 完成品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '\\u5b8c\\u6210\\u54c1' == '\\u5b8c\\u6210\\u54c1'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 完成品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '中间品' == '原材料'\nE         \nE         \u001B[0m\u001B[91m- 原材料\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 中间品\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_setting.py:1065: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1761241525406,"stop":1761241547042,"duration":21636},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('\\u5b8c\\u6210\\u54c1' == '\\u5b8c\\u6210\\u54c1'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 完成品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '\\u5b8c\\u6210\\u54c1' == '\\u5b8c\\u6210\\u54c1'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 完成品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '中间品' == '原材料'\n  \n  \u001B[0m\u001B[91m- 原材料\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 中间品\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x000001FC18DA3130>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"20065240ac74f77b6fe8e9754adcff9c\")>\n\n    @allure.story(\"设置表格布局-物料种类快速查询-下拉框\")\n    # @pytest.mark.run(order=1)\n    def test_setting_select_seleinput(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        code = \"物料种类\"\n        # 点击设置按钮，进入显示设置界面\n        setting.click_setting_button()\n        # 点击快速查询按钮\n        setting.click_button('//div[text()=\" 快速查询 \"]')\n    \n        # 点击特定代码的行以选择\n        setting.click_button(\n            f'//tr[./td[3][.//span[text()=\"{code}\"]]]/td[4]//input[@placeholder=\"请选择\"]'\n        )\n    \n        # 打开下拉框\n        setting.click_button('//div[text()=\"下拉框\"]')\n    \n        # 点击物料种类图标以展开选项\n        setting.click_button(\n            '//tr[./td[3][.//span[text()=\"物料种类\"]]]/td[4]//i[@class=\"ivu-icon ivu-icon-md-albums\"]'\n        )\n    \n        # 选择表/视图选项\n        setting.click_button('//div[text()=\"表/视图\"]')\n    \n        # 输入并选择APS_Item\n        setting.enter_texts(\n            '//div[text()=\" 表/视图 \"]/following-sibling::div//input[@placeholder=\"请选择\"]',\n            \"APS_Item\",\n        )\n        setting.click_button('//li[text()=\"APS_Item \"]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 输入并选择Type\n        setting.enter_texts(\n            '//div[text()=\" key \"]/following-sibling::div//input[@placeholder=\"请选择\"]',\n            \"Type\",\n        )\n        setting.click_button('(//li[text()=\"Type\"])[1]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 再次输入并选择Type\n        setting.enter_texts(\n            '//div[text()=\" name \"]/following-sibling::div//input[@placeholder=\"请选择\"]',\n            \"Type\",\n        )\n        setting.click_button('(//li[text()=\"Type\"])[2]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 点击确定按钮\n        setting.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n    \n        # 点击确认按钮\n        setting.click_confirm_button()\n    \n        # 为特定代码选择P选项\n        setting.click_button(\n            f'//div[text()=\"{code}\"]/following-sibling::div//input[@placeholder=\"请选择\"]'\n        )\n        setting.click_button('//ul[@class=\"ivu-select-dropdown-list\"]/li[text()=\"P\"]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 展开物料种类下拉框\n        setting.click_button(\n            '//div[text()=\"物料种类\"]/following-sibling::div//i[@class=\"ivu-icon ivu-icon-ios-arrow-down ivu-select-arrow\"]'\n        )\n    \n        # 点击查询按钮\n        setting.click_button('//div[@class=\"queryBtn\"]/button[1]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 获取并记录P选项的结果\n        Ptext1 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[1]/td[5]'\n        ).text\n    \n        # 等待加载\n        sleep(1)\n    \n        Ptext2 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[2]/td[5]'\n        ).text\n    \n        # 点击重置按钮\n        setting.click_button('//div[@class=\"queryBtn\"]/button[2]')\n    \n        # 为特定代码选择I选项\n        setting.click_button(\n            f'//div[text()=\"{code}\"]/following-sibling::div//input[@placeholder=\"请选择\"]'\n        )\n        setting.click_button('//ul[@class=\"ivu-select-dropdown-list\"]/li[text()=\"I\"]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 展开物料种类下拉框\n        setting.click_button(\n            '//div[text()=\"物料种类\"]/following-sibling::div//i[@class=\"ivu-icon ivu-icon-ios-arrow-down ivu-select-arrow\"]'\n        )\n    \n        # 点击查询按钮\n        setting.click_button('//div[@class=\"queryBtn\"]/button[1]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 获取并记录I选项的结果\n        Itext1 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[1]/td[5]'\n        ).text\n    \n        # 等待加载\n        sleep(1)\n    \n        Itext2 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[2]/td[5]'\n        ).text\n    \n        # 点击重置按钮\n        setting.click_button('//div[@class=\"queryBtn\"]/button[2]')\n    \n        # 为特定代码选择M选项\n        setting.click_button(\n            f'//div[text()=\"{code}\"]/following-sibling::div//input[@placeholder=\"请选择\"]'\n        )\n        setting.click_button('//ul[@class=\"ivu-select-dropdown-list\"]/li[text()=\"M\"]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 展开物料种类下拉框\n        setting.click_button(\n            '//div[text()=\"物料种类\"]/following-sibling::div//i[@class=\"ivu-icon ivu-icon-ios-arrow-down ivu-select-arrow\"]'\n        )\n    \n        # 点击查询按钮\n        setting.click_button('//div[@class=\"queryBtn\"]/button[1]')\n    \n        # 等待加载\n        sleep(1)\n    \n        # 获取并记录M选项的结果\n        Mtext1 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[1]/td[5]'\n        ).text\n    \n        # 等待加载\n        sleep(1)\n    \n        Mtext2 = setting.get_find_element_xpath(\n            '(//div[@class=\"vxe-table--body-wrapper body--wrapper\"])[2]/table//tr[2]/td[5]'\n        ).text\n    \n        # 断言所有结果一致且符合预期\n>       assert (\n            Ptext1 == Ptext2\n            and Itext1 == Itext2\n            and Mtext1 == Mtext2\n            and Ptext1 == \"完成品\"\n            and Itext1 == \"中间品\"\n            and Mtext1 == \"原材料\"\n        )\nE       AssertionError: assert ('\\u5b8c\\u6210\\u54c1' == '\\u5b8c\\u6210\\u54c1'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 完成品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '\\u5b8c\\u6210\\u54c1' == '\\u5b8c\\u6210\\u54c1'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 完成品\u001B[90m\u001B[39;49;00m and '\\u4e2d\\u95f4\\u54c1' == '\\u4e2d\\u95f4\\u54c1'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 中间品\u001B[90m\u001B[39;49;00m and '中间品' == '原材料'\nE         \nE         \u001B[0m\u001B[91m- 原材料\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 中间品\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_setting.py:1065: AssertionError","steps":[],"attachments":[{"uid":"6dd1dd0f02efb128","name":"test_setting_select_seleinput_failure","source":"6dd1dd0f02efb128.png","type":"image/png","size":99796},{"uid":"500a0b4f493d6d2e","name":"test_setting_select_seleinput_source","source":"500a0b4f493d6d2e.html","type":"text/html","size":1400503},{"uid":"b0ef224974c73043","name":"log","source":"b0ef224974c73043.txt","type":"text/plain","size":5060}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"login_to_setting::0","time":{"start":1761241586243,"stop":1761241588798,"duration":2555},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"feature","value":"标准应用设置测试用例"},{"name":"story","value":"设置表格布局-物料种类快速查询-下拉框"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21764-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"ab1c7597d148ac11.json","parameterValues":[]}