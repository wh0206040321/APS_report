{"uid":"40ab071a433b9b8f","name":"test_order_selectcodesuccess","fullName":"Tests.test_items.test_order.TestOrderPage#test_order_selectcodesuccess","historyId":"422eb74f0c5bdbef3fe02db88d5e10d6","time":{"start":1761233715655,"stop":1761233729789,"duration":14134},"status":"failed","statusMessage":"AssertionError: assert ('111' == '1测试A'\n  \n  \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x000001FC1903A140>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7d28b383235f36b702c51f38c05babc3\")>\n\n    @allure.story(\"查询制造订单代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_order_selectcodesuccess(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        name = \"1测试A\"\n    \n        # 点击查询\n        order.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击制造订单代码\n        order.click_button('//div[text()=\"订单代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        order.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        order.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n        sleep(1)\n    \n        # 点击确认\n        order.click_button(\n            '(//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 定位第一行是否为1A\n        ordercode = order.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        ordercode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert ordercode == name and len(ordercode2) == 0\nE       AssertionError: assert ('111' == '1测试A'\nE         \nE         \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_order.py:639: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_order","time":{"start":1761233700609,"stop":1761233715652,"duration":15043},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('111' == '1测试A'\n  \n  \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x000001FC1903A140>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7d28b383235f36b702c51f38c05babc3\")>\n\n    @allure.story(\"查询制造订单代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_order_selectcodesuccess(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        name = \"1测试A\"\n    \n        # 点击查询\n        order.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击制造订单代码\n        order.click_button('//div[text()=\"订单代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        order.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        order.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n        sleep(1)\n    \n        # 点击确认\n        order.click_button(\n            '(//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 定位第一行是否为1A\n        ordercode = order.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        ordercode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert ordercode == name and len(ordercode2) == 0\nE       AssertionError: assert ('111' == '1测试A'\nE         \nE         \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_order.py:639: AssertionError","steps":[],"attachments":[{"uid":"101a5169abd6994d","name":"test_order_selectcodesuccess_failure","source":"101a5169abd6994d.png","type":"image/png","size":150021},{"uid":"cbe8c85a5e96f317","name":"test_order_selectcodesuccess_source","source":"cbe8c85a5e96f317.html","type":"text/html","size":1447758},{"uid":"2445cc51707f8567","name":"log","source":"2445cc51707f8567.txt","type":"text/plain","size":1567}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_order::0","time":{"start":1761233730470,"stop":1761233732961,"duration":2491},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"制造订单表测试用例"},{"name":"story","value":"查询制造订单代码成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_order"},{"name":"subSuite","value":"TestOrderPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21764-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"40ab071a433b9b8f.json","parameterValues":[]}