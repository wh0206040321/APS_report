{"uid":"461fb67eb876e6cc","name":"test_order_selectsuccess2","fullName":"Tests.test_items.test_order.TestOrderPage#test_order_selectsuccess2","historyId":"37a9082be65cc0072eebe5fb451b9236","time":{"start":1761233959217,"stop":1761233985246,"duration":26029},"status":"failed","statusMessage":"AssertionError: assert (False)\n +  where False = all(<generator object TestOrderPage.test_order_selectsuccess2.<locals>.<genexpr> at 0x000001FC1ABA4350>)","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x000001FC19039570>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c9f6fb4110a469878f1dfea3e629c2a2\")>\n\n    @allure.story(\"查询订单代码包含1A并且计划数量>100\")\n    # @pytest.mark.run(order=1)\n    def test_order_selectsuccess2(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        name = \"1\"\n        num = 100\n        # 点击查询\n        order.click_sel_button()\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击制造订单名称\n        order.click_button('//div[text()=\"订单代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        order.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        order.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        order.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n    \n        # 点击（\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        order.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n    \n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        actions.double_click(double_click).perform()\n        # 定义and元素的XPath\n        and_xpath = '//div[text()=\"and\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击and元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, and_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            and_found = False\n    \n            while attempt < max_attempts and not and_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找and元素\n                    and_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, and_xpath))\n                    )\n                    and_element.click()\n                    and_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not and_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'and'元素\")\n    \n        # 点击（\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        order.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击这种数量\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        order.click_button('//div[text()=\"计划数量\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        order.click_button('//div[text()=\">\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        order.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            num,\n        )\n        # 点击（\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        order.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        order.click_button(\n            '(//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        eles1 = order.loop_judgment('(//table[@class=\"vxe-table--body\"])[2]//tr/td[10]')\n        eles2 = order.loop_judgment('(//table[@class=\"vxe-table--body\"])[2]//tr/td[2]')\n        assert len(eles1) > 0 and len(eles2) > 0\n>       assert all(int(ele) > num for ele in eles1) and all(name in ele for ele in eles2)\nE       assert (False)\nE        +  where False = all(<generator object TestOrderPage.test_order_selectsuccess2.<locals>.<genexpr> at 0x000001FC1ABA4350>)\n\nTests\\test_items\\test_order.py:1075: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_order","time":{"start":1761233942656,"stop":1761233959215,"duration":16559},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False)\n +  where False = all(<generator object TestOrderPage.test_order_selectsuccess2.<locals>.<genexpr> at 0x000001FC1ABA4350>)","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x000001FC19039570>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c9f6fb4110a469878f1dfea3e629c2a2\")>\n\n    @allure.story(\"查询订单代码包含1A并且计划数量>100\")\n    # @pytest.mark.run(order=1)\n    def test_order_selectsuccess2(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        name = \"1\"\n        num = 100\n        # 点击查询\n        order.click_sel_button()\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击制造订单名称\n        order.click_button('//div[text()=\"订单代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        order.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        order.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        order.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n    \n        # 点击（\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        order.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n    \n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        actions.double_click(double_click).perform()\n        # 定义and元素的XPath\n        and_xpath = '//div[text()=\"and\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击and元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, and_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            and_found = False\n    \n            while attempt < max_attempts and not and_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找and元素\n                    and_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, and_xpath))\n                    )\n                    and_element.click()\n                    and_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not and_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'and'元素\")\n    \n        # 点击（\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        order.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击这种数量\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        order.click_button('//div[text()=\"计划数量\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        order.click_button('//div[text()=\">\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        order.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            num,\n        )\n        # 点击（\n        order.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        order.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        order.click_button(\n            '(//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        eles1 = order.loop_judgment('(//table[@class=\"vxe-table--body\"])[2]//tr/td[10]')\n        eles2 = order.loop_judgment('(//table[@class=\"vxe-table--body\"])[2]//tr/td[2]')\n        assert len(eles1) > 0 and len(eles2) > 0\n>       assert all(int(ele) > num for ele in eles1) and all(name in ele for ele in eles2)\nE       assert (False)\nE        +  where False = all(<generator object TestOrderPage.test_order_selectsuccess2.<locals>.<genexpr> at 0x000001FC1ABA4350>)\n\nTests\\test_items\\test_order.py:1075: AssertionError","steps":[],"attachments":[{"uid":"8b8214ff92b4f557","name":"test_order_selectsuccess2_failure","source":"8b8214ff92b4f557.png","type":"image/png","size":150024},{"uid":"7aa7bad404bbc757","name":"test_order_selectsuccess2_source","source":"7aa7bad404bbc757.html","type":"text/html","size":1451824},{"uid":"25f417f6ce0430f9","name":"log","source":"25f417f6ce0430f9.txt","type":"text/plain","size":3272}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"login_to_order::0","time":{"start":1761233986363,"stop":1761233988842,"duration":2479},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"feature","value":"制造订单表测试用例"},{"name":"story","value":"查询订单代码包含1A并且计划数量>100"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_order"},{"name":"subSuite","value":"TestOrderPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21764-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"461fb67eb876e6cc.json","parameterValues":[]}