{"uid":"ca53cb56f04f4c1d","name":"test_warehouselocation_addfail","fullName":"Tests.test_material.test_materialVendors.TestItemPage#test_warehouselocation_addfail","historyId":"fd781fefe0282cbb73c9143f9fe276af","time":{"start":1753801593574,"stop":1753801596843,"duration":3269},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001DD82743070>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001DD82743070> = <test_material.test_materialVendors.TestItemPage object at 0x000001DD81F9B910>.item","statusTrace":"self = <test_material.test_materialVendors.TestItemPage object at 0x000001DD81F9B910>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e13af4654b59e971fcb5f4c92d6ced0c\")>\n\n    @allure.story(\"添加供应商信息 不填写数据点击确认 不允许提交\")\n    # @pytest.mark.run(order=1)\n    def test_warehouselocation_addfail(self, login_to_item):\n        self.item.click_add_button()\n        # 供应商代码xpath\n        input_box = self.item.get_find_element_xpath(\n            \"//div[@id='tx0gv6lt-z2dv']//input\"\n        )\n        # 联系人xpath\n        inputname_box = self.item.get_find_element_xpath(\n            \"//div[@id='e4589osf-fgn3']//input\"\n        )\n        # 电话xpath\n        whs_code_box = self.item.get_find_element_xpath(\n            \"//div[@id='tnkc4719-huz5']//input\"\n        )\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        # 断言边框颜色是否为红色（可以根据实际RGB值调整）\n        sleep(1)\n        border_color = input_box.value_of_css_property(\"border-color\")\n        bordername_color = inputname_box.value_of_css_property(\"border-color\")\n        whs_code_color = whs_code_box.value_of_css_property(\"border-color\")\n        expected_color = \"rgb(255, 0, 0)\"  # 红色的 rgb 值\n        assert (\n            border_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{border_color}\"\n        assert (\n            bordername_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{bordername_color}\"\n        assert (\n                whs_code_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{whs_code_color}\"\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001DD82743070>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001DD82743070> = <test_material.test_materialVendors.TestItemPage object at 0x000001DD81F9B910>.item\n\nTests\\test_material\\test_materialVendors.py:78: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1753801584139,"stop":1753801593362,"duration":9223},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1753801593362,"stop":1753801593574,"duration":212},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001DD82743070>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001DD82743070> = <test_material.test_materialVendors.TestItemPage object at 0x000001DD81F9B910>.item","statusTrace":"self = <test_material.test_materialVendors.TestItemPage object at 0x000001DD81F9B910>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e13af4654b59e971fcb5f4c92d6ced0c\")>\n\n    @allure.story(\"添加供应商信息 不填写数据点击确认 不允许提交\")\n    # @pytest.mark.run(order=1)\n    def test_warehouselocation_addfail(self, login_to_item):\n        self.item.click_add_button()\n        # 供应商代码xpath\n        input_box = self.item.get_find_element_xpath(\n            \"//div[@id='tx0gv6lt-z2dv']//input\"\n        )\n        # 联系人xpath\n        inputname_box = self.item.get_find_element_xpath(\n            \"//div[@id='e4589osf-fgn3']//input\"\n        )\n        # 电话xpath\n        whs_code_box = self.item.get_find_element_xpath(\n            \"//div[@id='tnkc4719-huz5']//input\"\n        )\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        # 断言边框颜色是否为红色（可以根据实际RGB值调整）\n        sleep(1)\n        border_color = input_box.value_of_css_property(\"border-color\")\n        bordername_color = inputname_box.value_of_css_property(\"border-color\")\n        whs_code_color = whs_code_box.value_of_css_property(\"border-color\")\n        expected_color = \"rgb(255, 0, 0)\"  # 红色的 rgb 值\n        assert (\n            border_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{border_color}\"\n        assert (\n            bordername_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{bordername_color}\"\n        assert (\n                whs_code_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{whs_code_color}\"\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001DD82743070>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001DD82743070> = <test_material.test_materialVendors.TestItemPage object at 0x000001DD81F9B910>.item\n\nTests\\test_material\\test_materialVendors.py:78: AssertionError","steps":[],"attachments":[{"uid":"64ce938a554b59ef","name":"test_warehouselocation_addfail_failure","source":"64ce938a554b59ef.png","type":"image/png","size":101842},{"uid":"42996a28f4b0a43c","name":"test_warehouselocation_addfail_source","source":"42996a28f4b0a43c.html","type":"text/html","size":1235268},{"uid":"9ef008fc300933b3","name":"log","source":"9ef008fc300933b3.txt","type":"text/plain","size":3062}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_item::0","time":{"start":1753801597035,"stop":1753801599244,"duration":2209},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"供应商信息测试用例"},{"name":"story","value":"添加供应商信息 不填写数据点击确认 不允许提交"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialVendors"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"45800-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialVendors"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"70afb904b00825eb","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001DD82ACB250>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001DD82ACB250> = <test_material.test_materialVendors.TestItemPage object at 0x000001DD81F9B910>.item","time":{"start":1753801579520,"stop":1753801581753,"duration":2233}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"ca53cb56f04f4c1d.json","parameterValues":[]}