{"uid":"142b0b083545405c","name":"test_chart_deletelayout","fullName":"Tests.test_items.test_chart.TestChartPage#test_chart_deletelayout","historyId":"de07e9ebf85c15f4093b2987f9f08a58","time":{"start":1755786396554,"stop":1755786408748,"duration":12194},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_items.test_chart.TestChartPage object at 0x0000024700162740>, login_to_chart = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"83575f96acc696ebbff90ad6af9dbb45\")>\n\n    @allure.story(\"删除布局名称成功\")\n    # @pytest.mark.run(order=1)\n    def test_chart_deletelayout(self, login_to_chart):\n        driver = login_to_chart  # WebDriver 实例\n        chart = ChartPage(driver)  # 用 driver 初始化 ChartPage\n        chart.click_button(\n            '//div[@class=\"el-tabs__nav is-top\"]/div[@role=\"tab\" and text()=\"测试布局修改\"]'\n        )\n>       chart.wait_for_loading_to_disappear()\n\nTests\\test_items\\test_chart.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\chart_page.py:46: in wait_for_loading_to_disappear\n    WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"83575f96acc696ebbff90ad6af9dbb45\")>\nmethod = <function invisibility_of_element_located.<locals>._predicate at 0x0000024700A3F640>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_chart","time":{"start":1755786382487,"stop":1755786396553,"duration":14066},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_items.test_chart.TestChartPage object at 0x0000024700162740>, login_to_chart = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"83575f96acc696ebbff90ad6af9dbb45\")>\n\n    @allure.story(\"删除布局名称成功\")\n    # @pytest.mark.run(order=1)\n    def test_chart_deletelayout(self, login_to_chart):\n        driver = login_to_chart  # WebDriver 实例\n        chart = ChartPage(driver)  # 用 driver 初始化 ChartPage\n        chart.click_button(\n            '//div[@class=\"el-tabs__nav is-top\"]/div[@role=\"tab\" and text()=\"测试布局修改\"]'\n        )\n>       chart.wait_for_loading_to_disappear()\n\nTests\\test_items\\test_chart.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\chart_page.py:46: in wait_for_loading_to_disappear\n    WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"83575f96acc696ebbff90ad6af9dbb45\")>\nmethod = <function invisibility_of_element_located.<locals>._predicate at 0x0000024700A3F640>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"1a6c4f78f8dcdf88","name":"test_chart_deletelayout_failure","source":"1a6c4f78f8dcdf88.png","type":"image/png","size":93312},{"uid":"9dca4f32a2ffee06","name":"test_chart_deletelayout_source","source":"9dca4f32a2ffee06.html","type":"text/html","size":1128625},{"uid":"69816acda2d77b96","name":"log","source":"69816acda2d77b96.txt","type":"text/plain","size":1038}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_chart::0","time":{"start":1755786408943,"stop":1755786411104,"duration":2161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"资源甘特图测试用例"},{"name":"story","value":"删除布局名称成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_chart"},{"name":"subSuite","value":"TestChartPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21852-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_chart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"142b0b083545405c.json","parameterValues":[]}