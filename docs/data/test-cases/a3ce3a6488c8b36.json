{"uid":"a3ce3a6488c8b36","name":"test_item_addsuccess","fullName":"Tests.test_material.test_unpickedMaterialDetails.TestItemPage#test_item_addsuccess","historyId":"6fb14524fa860afbac26e68753bf579c","time":{"start":1754933748467,"stop":1754933762529,"duration":14062},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF6972B0>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF6972B0> = <test_material.test_unpickedMaterialDetails.TestItemPage object at 0x000001C1DECC5300>.item","statusTrace":"self = <test_material.test_unpickedMaterialDetails.TestItemPage object at 0x000001C1DECC5300>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a84485c65295960b42cb5a9883d2ef7a\")>\n\n    @allure.story(\"添加必填数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_addsuccess(self, login_to_item):\n    \n        self.item.click_add_button()  # 检查点击添加\n        # 输入框要修改的值\n        text_str = \"111\"\n        date_str = \"2025/07/23 00:00:00\"\n        sleep(1)\n        # 批量修改输入框\n        self.item.batch_modify_input(self.req_input_add_xpath_list, text_str)\n        self.item.batch_modify_input(self.req_date_add_xpath_list, date_str)\n    \n        sleep(1)\n        # 点击确定\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n        # 选中新增行\n        self.item.click_button('//tr[./td[2][.//span[text()=\"111\"]]]/td[2]')\n        # 点击编辑按钮\n        self.item.click_edi_button()\n        sleep(1)\n        # 批量获取输入框的value\n        input_values = self.item.batch_acquisition_input(self.req_input_edit_xpath_list, text_str)\n        # 批量获取日期选择框的value\n        input_values2 = self.item.batch_acquisition_input(self.req_date_edit_xpath_list, date_str)\n    \n        sleep(1)\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"取消\"])[4]')\n        assert (\n                len(self.req_input_add_xpath_list) == len(input_values) and\n                len(self.req_date_add_xpath_list) == len(input_values2)\n        )\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF6972B0>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF6972B0> = <test_material.test_unpickedMaterialDetails.TestItemPage object at 0x000001C1DECC5300>.item\n\nTests\\test_material\\test_unpickedMaterialDetails.py:206: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1754933700690,"stop":1754933709522,"duration":8832},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"setup","time":{"start":1754933748465,"stop":1754933748467,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF6972B0>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF6972B0> = <test_material.test_unpickedMaterialDetails.TestItemPage object at 0x000001C1DECC5300>.item","statusTrace":"self = <test_material.test_unpickedMaterialDetails.TestItemPage object at 0x000001C1DECC5300>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a84485c65295960b42cb5a9883d2ef7a\")>\n\n    @allure.story(\"添加必填数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_addsuccess(self, login_to_item):\n    \n        self.item.click_add_button()  # 检查点击添加\n        # 输入框要修改的值\n        text_str = \"111\"\n        date_str = \"2025/07/23 00:00:00\"\n        sleep(1)\n        # 批量修改输入框\n        self.item.batch_modify_input(self.req_input_add_xpath_list, text_str)\n        self.item.batch_modify_input(self.req_date_add_xpath_list, date_str)\n    \n        sleep(1)\n        # 点击确定\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n        # 选中新增行\n        self.item.click_button('//tr[./td[2][.//span[text()=\"111\"]]]/td[2]')\n        # 点击编辑按钮\n        self.item.click_edi_button()\n        sleep(1)\n        # 批量获取输入框的value\n        input_values = self.item.batch_acquisition_input(self.req_input_edit_xpath_list, text_str)\n        # 批量获取日期选择框的value\n        input_values2 = self.item.batch_acquisition_input(self.req_date_edit_xpath_list, date_str)\n    \n        sleep(1)\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"取消\"])[4]')\n        assert (\n                len(self.req_input_add_xpath_list) == len(input_values) and\n                len(self.req_date_add_xpath_list) == len(input_values2)\n        )\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF6972B0>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF6972B0> = <test_material.test_unpickedMaterialDetails.TestItemPage object at 0x000001C1DECC5300>.item\n\nTests\\test_material\\test_unpickedMaterialDetails.py:206: AssertionError","steps":[],"attachments":[{"uid":"23bd532df2b27dba","name":"log","source":"23bd532df2b27dba.txt","type":"text/plain","size":1212}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_item::0","time":{"start":1754934105880,"stop":1754934108047,"duration":2167},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"story","value":"添加必填数据成功"},{"name":"feature","value":"未领料明细测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_unpickedMaterialDetails"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"24412-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_unpickedMaterialDetails"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"a3ce3a6488c8b36.json","parameterValues":[]}