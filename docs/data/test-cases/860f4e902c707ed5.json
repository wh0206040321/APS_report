{"uid":"860f4e902c707ed5","name":"test_operationPlan_success","fullName":"Tests.test_items.test_operationPlan.TestOperationPlanPage#test_operationPlan_success","historyId":"17baab8dc104c938e55e598eac4453b4","time":{"start":1755096256050,"stop":1755096268817,"duration":12767},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@style=\"width: 140px; margin-top: 0px;\"]//tr[1]/td[2]//span[1]/span","statusTrace":"self = <Pages.itemsPage.operationPlan_page.operationPlanPage object at 0x0000023BD4233880>, by_or_element = 'xpath'\nvalue = '//table[@style=\"width: 140px; margin-top: 0px;\"]//tr[1]/td[2]//span[1]/span', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"dc54fce66de65b4cdbfca8ddffa7e544\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000023BD45CFBE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff634466f65+78965]\nE       \tGetHandleVerifier [0x0x7ff634466fc0+79056]\nE       \t(No symbol) [0x0x7ff6341f9dda]\nE       \t(No symbol) [0x0x7ff6342502ea]\nE       \t(No symbol) [0x0x7ff63425059c]\nE       \t(No symbol) [0x0x7ff6342a3f37]\nE       \t(No symbol) [0x0x7ff6342786af]\nE       \t(No symbol) [0x0x7ff6342a0dbe]\nE       \t(No symbol) [0x0x7ff634278443]\nE       \t(No symbol) [0x0x7ff634241311]\nE       \t(No symbol) [0x0x7ff6342420a3]\nE       \tGetHandleVerifier [0x0x7ff63471e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff634718993+2903715]\nE       \tGetHandleVerifier [0x0x7ff634736aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6344816fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6344896ef+220159]\nE       \tGetHandleVerifier [0x0x7ff63446faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff63446fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6344564d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff992b87374+20]\nE       \tRtlUserThreadStart [0x0x7ff99357cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_operationPlan.TestOperationPlanPage object at 0x0000023BD3C9E560>\nlogin_to_operationPlan = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc54fce66de65b4cdbfca8ddffa7e544\")>\n\n    @allure.story(\"勾选资源，勾选时间段，点击查询 查询成功,发布指示成功\")\n    # @pytest.mark.run(order=1)\n    def test_operationPlan_success(self, login_to_operationPlan):\n        driver = login_to_operationPlan  # WebDriver 实例\n        operationPlan = operationPlanPage(\n            driver\n        )  # 用 operationPlan 初始化 operationPlanPage\n        shared_data = SharedDataUtil.load_data()\n        resource1 = shared_data.get(\"master_res1\")\n        resource2 = shared_data.get(\"master_res2\")\n        sleep(1)\n        # 搜索框输入资源代码\n        operationPlan.enter_texts(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]',\n            f\"{resource1}\",\n        )\n        # 勾选资源\n        sleep(1)\n        row_number = driver.execute_script(\n            \"return document.evaluate(\"\n            f'\"count(//tr[.//span[text()=\\\\\"{resource1}\\\\\"]]/preceding-sibling::tr) + 1\",'\n            \"document, null, XPathResult.NUMBER_TYPE, null\"\n            \").numberValue;\"\n        )\n        print(f\"行号: {int(row_number)}\")\n>       operationPlan.click_button(\n            f'//table[@style=\"width: 140px; margin-top: 0px;\"]//tr[{int(row_number)}]/td[2]//span[1]/span'\n        )\n\nTests\\test_items\\test_operationPlan.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\operationPlan_page.py:17: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.operationPlan_page.operationPlanPage object at 0x0000023BD4233880>, by_or_element = 'xpath'\nvalue = '//table[@style=\"width: 140px; margin-top: 0px;\"]//tr[1]/td[2]//span[1]/span', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@style=\"width: 140px; margin-top: 0px;\"]//tr[1]/td[2]//span[1]/span\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_operationPlan","time":{"start":1755096246992,"stop":1755096256050,"duration":9058},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@style=\"width: 140px; margin-top: 0px;\"]//tr[1]/td[2]//span[1]/span","statusTrace":"self = <Pages.itemsPage.operationPlan_page.operationPlanPage object at 0x0000023BD4233880>, by_or_element = 'xpath'\nvalue = '//table[@style=\"width: 140px; margin-top: 0px;\"]//tr[1]/td[2]//span[1]/span', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"dc54fce66de65b4cdbfca8ddffa7e544\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000023BD45CFBE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff634466f65+78965]\nE       \tGetHandleVerifier [0x0x7ff634466fc0+79056]\nE       \t(No symbol) [0x0x7ff6341f9dda]\nE       \t(No symbol) [0x0x7ff6342502ea]\nE       \t(No symbol) [0x0x7ff63425059c]\nE       \t(No symbol) [0x0x7ff6342a3f37]\nE       \t(No symbol) [0x0x7ff6342786af]\nE       \t(No symbol) [0x0x7ff6342a0dbe]\nE       \t(No symbol) [0x0x7ff634278443]\nE       \t(No symbol) [0x0x7ff634241311]\nE       \t(No symbol) [0x0x7ff6342420a3]\nE       \tGetHandleVerifier [0x0x7ff63471e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff634718993+2903715]\nE       \tGetHandleVerifier [0x0x7ff634736aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6344816fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6344896ef+220159]\nE       \tGetHandleVerifier [0x0x7ff63446faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff63446fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6344564d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ff992b87374+20]\nE       \tRtlUserThreadStart [0x0x7ff99357cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_operationPlan.TestOperationPlanPage object at 0x0000023BD3C9E560>\nlogin_to_operationPlan = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dc54fce66de65b4cdbfca8ddffa7e544\")>\n\n    @allure.story(\"勾选资源，勾选时间段，点击查询 查询成功,发布指示成功\")\n    # @pytest.mark.run(order=1)\n    def test_operationPlan_success(self, login_to_operationPlan):\n        driver = login_to_operationPlan  # WebDriver 实例\n        operationPlan = operationPlanPage(\n            driver\n        )  # 用 operationPlan 初始化 operationPlanPage\n        shared_data = SharedDataUtil.load_data()\n        resource1 = shared_data.get(\"master_res1\")\n        resource2 = shared_data.get(\"master_res2\")\n        sleep(1)\n        # 搜索框输入资源代码\n        operationPlan.enter_texts(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]',\n            f\"{resource1}\",\n        )\n        # 勾选资源\n        sleep(1)\n        row_number = driver.execute_script(\n            \"return document.evaluate(\"\n            f'\"count(//tr[.//span[text()=\\\\\"{resource1}\\\\\"]]/preceding-sibling::tr) + 1\",'\n            \"document, null, XPathResult.NUMBER_TYPE, null\"\n            \").numberValue;\"\n        )\n        print(f\"行号: {int(row_number)}\")\n>       operationPlan.click_button(\n            f'//table[@style=\"width: 140px; margin-top: 0px;\"]//tr[{int(row_number)}]/td[2]//span[1]/span'\n        )\n\nTests\\test_items\\test_operationPlan.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\operationPlan_page.py:17: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.operationPlan_page.operationPlanPage object at 0x0000023BD4233880>, by_or_element = 'xpath'\nvalue = '//table[@style=\"width: 140px; margin-top: 0px;\"]//tr[1]/td[2]//span[1]/span', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@style=\"width: 140px; margin-top: 0px;\"]//tr[1]/td[2]//span[1]/span\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"a588555dd06b51d0","name":"test_operationPlan_success_failure","source":"a588555dd06b51d0.png","type":"image/png","size":86220},{"uid":"7983cef81c368dcf","name":"test_operationPlan_success_source","source":"7983cef81c368dcf.html","type":"text/html","size":1138668},{"uid":"7437d9ea37e8266f","name":"log","source":"7437d9ea37e8266f.txt","type":"text/plain","size":2235}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_operationPlan::0","time":{"start":1755096268989,"stop":1755096271165,"duration":2176},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"勾选资源，勾选时间段，点击查询 查询成功,发布指示成功"},{"name":"feature","value":"工作指示发布表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_operationPlan"},{"name":"subSuite","value":"TestOperationPlanPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_operationPlan"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"860f4e902c707ed5.json","parameterValues":[]}