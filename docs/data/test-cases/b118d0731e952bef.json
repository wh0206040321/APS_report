{"uid":"b118d0731e952bef","name":"test_item_addall","fullName":"Tests.test_items.test_item.TestItemPage#test_item_addall","historyId":"75c5e7035234a10dea40dd1b814d2f7f","time":{"start":1756179779348,"stop":1756179903459,"duration":124111},"status":"broken","statusMessage":"ValueError: invalid literal for int() with base 10: ''","statusTrace":"self = <test_items.test_item.TestItemPage object at 0x000002205A886AD0>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1e0162380cd9cfdd981cbefe651469e4\")>\n\n    @allure.story(\"输入全部数据，添加保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_addall(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n        adds = AddsPages(driver)\n        input_value = '11测试全部数据'\n        item.click_add_button()\n        custom_xpath_list = [\n            f'//label[text()=\"自定义字符{i}\"]/following-sibling::div//input'\n            for i in range(1, 21)\n        ]\n        text_list = [\n            '//label[text()=\"物料代码\"]/following-sibling::div//input',\n            '//label[text()=\"物料名称\"]/following-sibling::div//input',\n            '//label[text()=\"工作分割比率\"]/following-sibling::div//input',\n            '//label[text()=\"备注\"]/following-sibling::div//input',\n        ]\n        text_list.extend(custom_xpath_list)\n        adds.batch_modify_input(text_list, input_value)\n    \n    \n        value_bos = '//div[@class=\"vxe-modal--body\"]//table[@class=\"vxe-table--body\"]//tr[1]/td[3]'\n        spe_xpath_list = [\n            f'//label[text()=\"生产特征{i}\"]/following-sibling::div//i'\n            for i in range(1, 11)\n        ]\n        box_list = [\n            '//label[text()=\"物料组代码\"]/following-sibling::div//i',\n            '//label[text()=\"BASE物料\"]/following-sibling::div//i',\n            '//label[text()=\"资源\"]/following-sibling::div//i',\n            '//label[text()=\"物料切换对象\"]/following-sibling::div//i',\n        ]\n        box_list.extend(spe_xpath_list)\n        adds.batch_modify_dialog_box(box_list, value_bos)\n    \n    \n        code_value = '//span[text()=\"AdvanceAlongResourceWorkingTime\"]'\n        code_list = [\n            '//label[text()=\"关联条件\"]/following-sibling::div//i',\n            '//label[text()=\"关联时工作输出指令排序表达式\"]/following-sibling::div//i',\n            '//label[text()=\"关联时工作输入指令排序表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存MIN2日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存MIN3日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"目标库存MIN日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存有效期限\"]/following-sibling::div//i',\n        ]\n        adds.batch_modify_code_box(code_list, code_value)\n    \n        select_list = [\n            {\"select\": '//label[text()=\"物料种类\"]/following-sibling::div//i', \"value\": '//li[text()=\"原材料\"]'},\n            {\"select\": '//label[text()=\"自动补充标志\"]/following-sibling::div//i', \"value\": '//li[text()=\"是(库存+1对1制造)\"]'},\n            {\"select\": '//label[text()=\"备料方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"采购优先\"]'},\n            {\"select\": '//label[text()=\"显示颜色\"]/following-sibling::div//i', \"value\": '//span[text()=\"RGB(128,128,255)\"]'},\n            {\"select\": '//label[text()=\"物料切换方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"混存\"]'},\n            {\"select\": '//label[text()=\"物料制约标志\"]/following-sibling::div//i', \"value\": '//label[text()=\"物料制约标志\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"是\"]'},\n            {\"select\": '//label[text()=\"库存增减方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"线形/梯形\"]'},\n            {\"select\": '//label[text()=\"制造批量大小计算方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"均等\"]'},\n            {\"select\": '//label[text()=\"制造批量尾数为末尾\"]/following-sibling::div//i', \"value\": '//label[text()=\"制造批量尾数为末尾\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"否\"]'},\n            {\"select\": '//label[text()=\"采购批量计算方法\"]/following-sibling::div//i', \"value\": '//label[text()=\"采购批量计算方法\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"均等\"]'},\n            {\"select\": '//label[text()=\"采购批量尾数为末尾\"]/following-sibling::div//i', \"value\": '//label[text()=\"采购批量尾数为末尾\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"否\"]'},\n        ]\n        adds.batch_modify_select_input(select_list)\n    \n        input_num_value = '1'\n        num_xpath_list1 = [\n            f'//label[text()=\"数值特征{i}\"]/following-sibling::div//input'\n            for i in range(1, 6)\n        ]\n        num_xpath_list2 = [\n            f'//label[text()=\"自定义数字{i}\"]/following-sibling::div//input'\n            for i in range(1, 21)\n        ]\n        num_xpath_list3 = [\n            f'//label[text()=\"{label}{i}\"]/following-sibling::div//input'\n            for i in range(1, 8)\n            for label in [\"单批上限\", \"合批上限\", \"合批期间\"]\n        ]\n    \n        num_list = [\n            '//label[text()=\"物料优先度\"]/following-sibling::div//input',\n            '//label[text()=\"单价\"]/following-sibling::div//input',\n            '//label[text()=\"制造效率\"]/following-sibling::div//input',\n            '//label[text()=\"显示顺序\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN2\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN3\"]/following-sibling::div//input',\n            '//label[text()=\"预留\"]/following-sibling::div//input',\n            '//label[text()=\"目标库存MIN\"]/following-sibling::div//input',\n            '//label[text()=\"库存MAX\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量单位\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量单位\"]/following-sibling::div//input',\n            '//label[text()=\"工作分割数量\"]/following-sibling::div//input',\n            '//label[text()=\"工作并行数量\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量单位\"]/following-sibling::div//input',\n        ]\n        num_list.extend(num_xpath_list1 + num_xpath_list2 + num_xpath_list3)\n        adds.batch_modify_input(num_list, input_num_value)\n    \n    \n        time_xpath_list = [\n            f'//label[text()=\"自定义日期{i}\"]/following-sibling::div//input'\n            for i in range(1, 11)\n        ]\n        adds.batch_modify_time_input(time_xpath_list)\n    \n        box_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in box_list]\n        code_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in code_list]\n        select_input_list = [item[\"select\"].replace(\"//i\", \"//input\") for item in select_list]\n        all_value = text_list + box_input_list + code_input_list + select_input_list + num_list + time_xpath_list\n        len_num = len(all_value)\n        before_all_value = adds.batch_acquisition_input(all_value)\n        item.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        sleep(1)\n        driver.refresh()\n        sleep(3)\n        num = adds.go_settings_page()\n        sleep(2)\n        item.enter_texts(\n            '//p[text()=\"物料代码\"]/ancestor::div[2]//input', input_value\n        )\n        sleep(1)\n        item.click_button(\n            f'(//div[@class=\"vxe-table--main-wrapper\"])[2]//table[@class=\"vxe-table--body\"]//tr/td[2][.//span[text()=\"{input_value}\"]]')\n        sleep(1)\n        item.click_edi_button()\n        after_all_value = adds.batch_acquisition_input(all_value)\n        username = item.get_find_element_xpath('//label[text()=\"更新者\"]/following-sibling::div//input').get_attribute(\"value\")\n        updatatime = item.get_find_element_xpath('//label[text()=\"更新时间\"]/following-sibling::div//input').get_attribute(\"value\")\n        today_str = date.today().strftime('%Y/%m/%d')\n>       assert before_all_value == after_all_value and username == DateDriver().username and today_str in updatatime and int(num) == (int(len_num) + 2)\nE       ValueError: invalid literal for int() with base 10: ''\n\nTests\\test_items\\test_item.py:1078: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"login_to_item","time":{"start":1756179771181,"stop":1756179779348,"duration":8167},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"ValueError: invalid literal for int() with base 10: ''","statusTrace":"self = <test_items.test_item.TestItemPage object at 0x000002205A886AD0>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1e0162380cd9cfdd981cbefe651469e4\")>\n\n    @allure.story(\"输入全部数据，添加保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_addall(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n        adds = AddsPages(driver)\n        input_value = '11测试全部数据'\n        item.click_add_button()\n        custom_xpath_list = [\n            f'//label[text()=\"自定义字符{i}\"]/following-sibling::div//input'\n            for i in range(1, 21)\n        ]\n        text_list = [\n            '//label[text()=\"物料代码\"]/following-sibling::div//input',\n            '//label[text()=\"物料名称\"]/following-sibling::div//input',\n            '//label[text()=\"工作分割比率\"]/following-sibling::div//input',\n            '//label[text()=\"备注\"]/following-sibling::div//input',\n        ]\n        text_list.extend(custom_xpath_list)\n        adds.batch_modify_input(text_list, input_value)\n    \n    \n        value_bos = '//div[@class=\"vxe-modal--body\"]//table[@class=\"vxe-table--body\"]//tr[1]/td[3]'\n        spe_xpath_list = [\n            f'//label[text()=\"生产特征{i}\"]/following-sibling::div//i'\n            for i in range(1, 11)\n        ]\n        box_list = [\n            '//label[text()=\"物料组代码\"]/following-sibling::div//i',\n            '//label[text()=\"BASE物料\"]/following-sibling::div//i',\n            '//label[text()=\"资源\"]/following-sibling::div//i',\n            '//label[text()=\"物料切换对象\"]/following-sibling::div//i',\n        ]\n        box_list.extend(spe_xpath_list)\n        adds.batch_modify_dialog_box(box_list, value_bos)\n    \n    \n        code_value = '//span[text()=\"AdvanceAlongResourceWorkingTime\"]'\n        code_list = [\n            '//label[text()=\"关联条件\"]/following-sibling::div//i',\n            '//label[text()=\"关联时工作输出指令排序表达式\"]/following-sibling::div//i',\n            '//label[text()=\"关联时工作输入指令排序表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存MIN2日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存MIN3日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"目标库存MIN日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存有效期限\"]/following-sibling::div//i',\n        ]\n        adds.batch_modify_code_box(code_list, code_value)\n    \n        select_list = [\n            {\"select\": '//label[text()=\"物料种类\"]/following-sibling::div//i', \"value\": '//li[text()=\"原材料\"]'},\n            {\"select\": '//label[text()=\"自动补充标志\"]/following-sibling::div//i', \"value\": '//li[text()=\"是(库存+1对1制造)\"]'},\n            {\"select\": '//label[text()=\"备料方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"采购优先\"]'},\n            {\"select\": '//label[text()=\"显示颜色\"]/following-sibling::div//i', \"value\": '//span[text()=\"RGB(128,128,255)\"]'},\n            {\"select\": '//label[text()=\"物料切换方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"混存\"]'},\n            {\"select\": '//label[text()=\"物料制约标志\"]/following-sibling::div//i', \"value\": '//label[text()=\"物料制约标志\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"是\"]'},\n            {\"select\": '//label[text()=\"库存增减方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"线形/梯形\"]'},\n            {\"select\": '//label[text()=\"制造批量大小计算方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"均等\"]'},\n            {\"select\": '//label[text()=\"制造批量尾数为末尾\"]/following-sibling::div//i', \"value\": '//label[text()=\"制造批量尾数为末尾\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"否\"]'},\n            {\"select\": '//label[text()=\"采购批量计算方法\"]/following-sibling::div//i', \"value\": '//label[text()=\"采购批量计算方法\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"均等\"]'},\n            {\"select\": '//label[text()=\"采购批量尾数为末尾\"]/following-sibling::div//i', \"value\": '//label[text()=\"采购批量尾数为末尾\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"否\"]'},\n        ]\n        adds.batch_modify_select_input(select_list)\n    \n        input_num_value = '1'\n        num_xpath_list1 = [\n            f'//label[text()=\"数值特征{i}\"]/following-sibling::div//input'\n            for i in range(1, 6)\n        ]\n        num_xpath_list2 = [\n            f'//label[text()=\"自定义数字{i}\"]/following-sibling::div//input'\n            for i in range(1, 21)\n        ]\n        num_xpath_list3 = [\n            f'//label[text()=\"{label}{i}\"]/following-sibling::div//input'\n            for i in range(1, 8)\n            for label in [\"单批上限\", \"合批上限\", \"合批期间\"]\n        ]\n    \n        num_list = [\n            '//label[text()=\"物料优先度\"]/following-sibling::div//input',\n            '//label[text()=\"单价\"]/following-sibling::div//input',\n            '//label[text()=\"制造效率\"]/following-sibling::div//input',\n            '//label[text()=\"显示顺序\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN2\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN3\"]/following-sibling::div//input',\n            '//label[text()=\"预留\"]/following-sibling::div//input',\n            '//label[text()=\"目标库存MIN\"]/following-sibling::div//input',\n            '//label[text()=\"库存MAX\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量单位\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量单位\"]/following-sibling::div//input',\n            '//label[text()=\"工作分割数量\"]/following-sibling::div//input',\n            '//label[text()=\"工作并行数量\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量单位\"]/following-sibling::div//input',\n        ]\n        num_list.extend(num_xpath_list1 + num_xpath_list2 + num_xpath_list3)\n        adds.batch_modify_input(num_list, input_num_value)\n    \n    \n        time_xpath_list = [\n            f'//label[text()=\"自定义日期{i}\"]/following-sibling::div//input'\n            for i in range(1, 11)\n        ]\n        adds.batch_modify_time_input(time_xpath_list)\n    \n        box_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in box_list]\n        code_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in code_list]\n        select_input_list = [item[\"select\"].replace(\"//i\", \"//input\") for item in select_list]\n        all_value = text_list + box_input_list + code_input_list + select_input_list + num_list + time_xpath_list\n        len_num = len(all_value)\n        before_all_value = adds.batch_acquisition_input(all_value)\n        item.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        sleep(1)\n        driver.refresh()\n        sleep(3)\n        num = adds.go_settings_page()\n        sleep(2)\n        item.enter_texts(\n            '//p[text()=\"物料代码\"]/ancestor::div[2]//input', input_value\n        )\n        sleep(1)\n        item.click_button(\n            f'(//div[@class=\"vxe-table--main-wrapper\"])[2]//table[@class=\"vxe-table--body\"]//tr/td[2][.//span[text()=\"{input_value}\"]]')\n        sleep(1)\n        item.click_edi_button()\n        after_all_value = adds.batch_acquisition_input(all_value)\n        username = item.get_find_element_xpath('//label[text()=\"更新者\"]/following-sibling::div//input').get_attribute(\"value\")\n        updatatime = item.get_find_element_xpath('//label[text()=\"更新时间\"]/following-sibling::div//input').get_attribute(\"value\")\n        today_str = date.today().strftime('%Y/%m/%d')\n>       assert before_all_value == after_all_value and username == DateDriver().username and today_str in updatatime and int(num) == (int(len_num) + 2)\nE       ValueError: invalid literal for int() with base 10: ''\n\nTests\\test_items\\test_item.py:1078: ValueError","steps":[],"attachments":[{"uid":"ec652f6b6b8fe2fe","name":"test_item_addall_failure","source":"ec652f6b6b8fe2fe.png","type":"image/png","size":92229},{"uid":"35141013193d22fc","name":"test_item_addall_source","source":"35141013193d22fc.html","type":"text/html","size":1434833},{"uid":"7ea1b399b80bda3e","name":"log","source":"7ea1b399b80bda3e.txt","type":"text/plain","size":53200}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_item::0","time":{"start":1756179903658,"stop":1756179905842,"duration":2184},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"输入全部数据，添加保存成功"},{"name":"feature","value":"物料表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_item"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14880-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_item"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"66093b31b43025c","status":"passed","time":{"start":1755778923123,"stop":1755779049274,"duration":126151}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"b118d0731e952bef.json","parameterValues":[]}