{"uid":"2c271c63d7ba9556","name":"test_changespec_addrepe","fullName":"Tests.test_items.test_changespec.TestChangeSpecPage#test_changespec_addrepe","historyId":"6b3b9cf06c83f23a3d47536b7373050d","time":{"start":1753707909997,"stop":1753707921532,"duration":11535},"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = len([])","statusTrace":"self = <test_items.test_changespec.TestChangeSpecPage object at 0x000002CDB7278FD0>\nlogin_to_changespec = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ef24ed41f0c3761ff3da91e7a4162435\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_changespec_addrepe(self, login_to_changespec):\n        driver = login_to_changespec  # WebDriver 实例\n        change = ChangeR(driver)  # 用 driver 初始化 ChangeR\n        code1 = \"11\"\n        code2 = \"22\"\n        change.click_add_button()\n        # 点击资源\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[1]'\n        )\n        # 勾选框\n        rows = driver.find_elements(By.XPATH, f\"//table[.//tr[td[3]//span[text()='{code1}']]]//tr\")\n        for index, row in enumerate(rows, start=1):\n            td3_text = row.find_elements(By.TAG_NAME, \"td\")[2].text.strip()\n            if f\"{code1}\" in td3_text:\n                print(f\"✅ 找到匹配行，行号为：{index}\")\n    \n                # 3. 使用这个行号 idx 构造另一个 XPath\n                target_xpath = f'(//table[.//tr[{index}]/td[2][contains(@class,\"col--checkbox\")]])[2]//tr[{index}]/td[2]/div/span'\n                target_element = change.get_find_element_xpath(target_xpath)\n    \n                # 4. 操作目标元素\n                target_element.click()\n                break  # 如果只处理第一个匹配行，可以 break\n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 点击前生产特征\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[2]'\n        )\n    \n        # 勾选框\n        rows = driver.find_elements(By.XPATH,\n                                    f'//div[@class=\"h-0px flex-grow1\"]//table[@class=\"vxe-table--body\" and .//tr[td[3] and .//span[text()=\"{code2}\"]]]//tr')\n        for index, row in enumerate(rows, start=1):\n            td3_text = row.find_elements(By.TAG_NAME, \"td\")[2].text.strip()\n            if f\"{code2}\" == td3_text:\n                print(f\"✅ 找到匹配行，行号为：{index}\")\n    \n                # 3. 使用这个行号 idx 构造另一个 XPath\n                target_xpath = f'//div[@class=\"h-0px flex-grow1\"]//table[@class=\"vxe-table--body\"]//tr[{index}]/td[2]//div/span'\n                # 点击前重新获取元素，防止 stale\n                try:\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n                except StaleElementReferenceException:\n                    print(\"⚠️ 元素过期，重新获取一次\")\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n    \n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 点击后生产特征\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[3]'\n        )\n        # 勾选框\n        change.click_button(\n            '//div[@class=\"h-0px flex-grow1\"]//table[@class=\"vxe-table--body\"]//tr[3]/td[2]//div/span')\n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n        sleep(1)\n        eles = driver.find_elements(By.XPATH, '//div[text()=\" 记录已存在,请检查！ \"]')\n>       assert len(eles) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\nTests\\test_items\\test_changespec.py:513: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_changespec","time":{"start":1753707901942,"stop":1753707909996,"duration":8054},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = len([])","statusTrace":"self = <test_items.test_changespec.TestChangeSpecPage object at 0x000002CDB7278FD0>\nlogin_to_changespec = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ef24ed41f0c3761ff3da91e7a4162435\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_changespec_addrepe(self, login_to_changespec):\n        driver = login_to_changespec  # WebDriver 实例\n        change = ChangeR(driver)  # 用 driver 初始化 ChangeR\n        code1 = \"11\"\n        code2 = \"22\"\n        change.click_add_button()\n        # 点击资源\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[1]'\n        )\n        # 勾选框\n        rows = driver.find_elements(By.XPATH, f\"//table[.//tr[td[3]//span[text()='{code1}']]]//tr\")\n        for index, row in enumerate(rows, start=1):\n            td3_text = row.find_elements(By.TAG_NAME, \"td\")[2].text.strip()\n            if f\"{code1}\" in td3_text:\n                print(f\"✅ 找到匹配行，行号为：{index}\")\n    \n                # 3. 使用这个行号 idx 构造另一个 XPath\n                target_xpath = f'(//table[.//tr[{index}]/td[2][contains(@class,\"col--checkbox\")]])[2]//tr[{index}]/td[2]/div/span'\n                target_element = change.get_find_element_xpath(target_xpath)\n    \n                # 4. 操作目标元素\n                target_element.click()\n                break  # 如果只处理第一个匹配行，可以 break\n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 点击前生产特征\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[2]'\n        )\n    \n        # 勾选框\n        rows = driver.find_elements(By.XPATH,\n                                    f'//div[@class=\"h-0px flex-grow1\"]//table[@class=\"vxe-table--body\" and .//tr[td[3] and .//span[text()=\"{code2}\"]]]//tr')\n        for index, row in enumerate(rows, start=1):\n            td3_text = row.find_elements(By.TAG_NAME, \"td\")[2].text.strip()\n            if f\"{code2}\" == td3_text:\n                print(f\"✅ 找到匹配行，行号为：{index}\")\n    \n                # 3. 使用这个行号 idx 构造另一个 XPath\n                target_xpath = f'//div[@class=\"h-0px flex-grow1\"]//table[@class=\"vxe-table--body\"]//tr[{index}]/td[2]//div/span'\n                # 点击前重新获取元素，防止 stale\n                try:\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n                except StaleElementReferenceException:\n                    print(\"⚠️ 元素过期，重新获取一次\")\n                    target_element = change.get_find_element_xpath(target_xpath)\n                    target_element.click()\n    \n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 点击后生产特征\n        change.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[3]'\n        )\n        # 勾选框\n        change.click_button(\n            '//div[@class=\"h-0px flex-grow1\"]//table[@class=\"vxe-table--body\"]//tr[3]/td[2]//div/span')\n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n        sleep(1)\n        eles = driver.find_elements(By.XPATH, '//div[text()=\" 记录已存在,请检查！ \"]')\n>       assert len(eles) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\nTests\\test_items\\test_changespec.py:513: AssertionError","steps":[],"attachments":[{"uid":"c27f00e9e2209e85","name":"test_changespec_addrepe_failure","source":"c27f00e9e2209e85.png","type":"image/png","size":101652},{"uid":"1e400fff053ba1f8","name":"test_changespec_addrepe_source","source":"1e400fff053ba1f8.html","type":"text/html","size":1237535},{"uid":"67ba01fc76522c4d","name":"log","source":"67ba01fc76522c4d.txt","type":"text/plain","size":2325}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_changespec::0","time":{"start":1753707921698,"stop":1753707923810,"duration":2112},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"添加数据重复"},{"name":"feature","value":"生产特征切换表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_changespec"},{"name":"subSuite","value":"TestChangeSpecPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26924-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_changespec"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"2c271c63d7ba9556.json","parameterValues":[]}