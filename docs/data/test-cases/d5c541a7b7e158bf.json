{"uid":"d5c541a7b7e158bf","name":"test_customer_textverify","fullName":"Tests.test_items.test_customer.TestCustomerPage#test_customer_textverify","historyId":"8bed9c6a207e33cb641d51d20be52b76","time":{"start":1761222826385,"stop":1761222834053,"duration":7668},"status":"failed","statusMessage":"AssertionError: 预期数据是111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111，实际得到111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\nassert ('111111111111...1111111111111' == '111111111111...1111111111111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\n  \n  \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?           -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_customer.TestCustomerPage object at 0x000001FC18FBEE60>, login_to_customer = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9ce63e0dbb16a8da9071dc222c28311c\")>\n\n    @allure.story(\"校验数字文本框和文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_customer_textverify(self, login_to_customer):\n        driver = login_to_customer  # WebDriver 实例\n        customer = CustomerPage(driver)  # 用 driver 初始化 CustomerPage\n        name = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        customer.add_test_data(name)\n        customer.enter_texts('//label[text()=\"显示顺序\"]/parent::div//input', name)\n        # 点击确定\n        customer.click_button(\n            '//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        adddata = customer.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]'\n        ).text\n        num_ = customer.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[5]'\n        ).text\n>       assert adddata == name and num_ == '99999999999', f\"预期数据是{name}，实际得到{adddata}\"\nE       AssertionError: 预期数据是111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111，实际得到111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\nE       assert ('111111111111...1111111111111' == '111111111111...1111111111111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\nE         \nE         \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?           -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_customer.py:203: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_customer","time":{"start":1761222815184,"stop":1761222826384,"duration":11200},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期数据是111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111，实际得到111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\nassert ('111111111111...1111111111111' == '111111111111...1111111111111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\n  \n  \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?           -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_customer.TestCustomerPage object at 0x000001FC18FBEE60>, login_to_customer = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9ce63e0dbb16a8da9071dc222c28311c\")>\n\n    @allure.story(\"校验数字文本框和文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_customer_textverify(self, login_to_customer):\n        driver = login_to_customer  # WebDriver 实例\n        customer = CustomerPage(driver)  # 用 driver 初始化 CustomerPage\n        name = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        customer.add_test_data(name)\n        customer.enter_texts('//label[text()=\"显示顺序\"]/parent::div//input', name)\n        # 点击确定\n        customer.click_button(\n            '//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        adddata = customer.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]'\n        ).text\n        num_ = customer.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[5]'\n        ).text\n>       assert adddata == name and num_ == '99999999999', f\"预期数据是{name}，实际得到{adddata}\"\nE       AssertionError: 预期数据是111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111，实际得到111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\nE       assert ('111111111111...1111111111111' == '111111111111...1111111111111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\nE         \nE         \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?           -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_customer.py:203: AssertionError","steps":[],"attachments":[{"uid":"ab1f04626f36dc16","name":"test_customer_textverify_failure","source":"ab1f04626f36dc16.png","type":"image/png","size":249464},{"uid":"2e69d694b5b7701a","name":"test_customer_textverify_source","source":"2e69d694b5b7701a.html","type":"text/html","size":869096},{"uid":"6a252e2f5ca88ef9","name":"test_customer_textverify_failure","source":"6a252e2f5ca88ef9.png","type":"image/png","size":249073},{"uid":"d728f3a9de148bd6","name":"test_customer_textverify_source","source":"d728f3a9de148bd6.html","type":"text/html","size":869096},{"uid":"f9e59567ee9c630","name":"test_customer_textverify_failure","source":"f9e59567ee9c630.png","type":"image/png","size":110680},{"uid":"7086123db50162d9","name":"test_customer_textverify_source","source":"7086123db50162d9.html","type":"text/html","size":1378932},{"uid":"86013589231c752f","name":"log","source":"86013589231c752f.txt","type":"text/plain","size":1460}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":7},"afterStages":[{"name":"login_to_customer::0","time":{"start":1761222834858,"stop":1761222837048,"duration":2190},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"校验数字文本框和文本框成功"},{"name":"feature","value":"客户表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_customer"},{"name":"subSuite","value":"TestCustomerPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21764-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"d5c541a7b7e158bf.json","parameterValues":[]}