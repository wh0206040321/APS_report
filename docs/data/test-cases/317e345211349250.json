{"uid":"317e345211349250","name":"test_calendar_numverify","fullName":"Tests.test_items.test_calendar.TestCalendarPage#test_calendar_numverify","historyId":"91d5b340e7e382f5c380feda99e61376","time":{"start":1758719228098,"stop":1758719237149,"duration":9051},"status":"failed","statusMessage":"AssertionError: assert ('0829' == '0829'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 0829\u001B[90m\u001B[39;49;00m and 'B\\u4e2d\\u73ed' == 'B\\u4e2d\\u73ed'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m B中班\u001B[90m\u001B[39;49;00m and '1000000000000000000' == '111111111111...1111111111111'\n  \n  \u001B[0m\u001B[91m- 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1000000000000000000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_calendar.TestCalendarPage object at 0x00000271F32B52A0>, login_to_calendar = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe67b0c4e08944e92b4380c8ca6fcb32\")>\n\n    @allure.story(\"校验数字文本框和文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_calendar_numverify(self, login_to_calendar):\n        driver = login_to_calendar  # WebDriver 实例\n        calendar = Calendar(driver)  # 用 driver 初始化 Calendar\n        num = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        calendar.click_add_button()\n        # 点击资源\n        calendar.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[1]'\n        )\n        # 勾选框\n        random_int = random.randint(1, 5)\n        sleep(1)\n        calendar.click_button(f'//table[@class=\"vxe-table--body\"]//tr[{random_int}]/td[2]/div/span/span')\n    \n        calendar.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n        sleep(1)\n        # 获取勾选的资源代码\n        resource = calendar.get_find_element_xpath(\n            '//label[text()=\"资源\"]/parent::div/div[1]//input[1]'\n        ).get_attribute(\"value\")\n    \n        # 点击班次\n        calendar.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[2]'\n        )\n        # 勾选框\n        random_int1 = random.randint(1, 2)\n        sleep(1)\n        calendar.click_button(\n            f'(//table[@class=\"vxe-table--body\"]//tr/td[2]//span[@class=\"vxe-cell--checkbox\"])[{random_int1}]')\n    \n        calendar.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n        sleep(1)\n        # 获取勾选的班次\n        resource1 = calendar.get_find_element_xpath(\n            '//label[text()=\"班次\"]/parent::div/div[1]//input[1]'\n        ).get_attribute(\"value\")\n        calendar.enter_texts('//label[text()=\"资源量\"]/parent::div/div[1]//input[1]', num)\n        calendar.enter_texts('//label[text()=\"备注\"]/parent::div/div[1]//input[1]', num)\n        # 点击第一个日期时间\n        calendar.click_button('(//input[@placeholder=\"请选择时间\"])[1]')\n    \n        calendar.click_button('(//em[text()=\"13\"])[1]')\n        # 点击第二个日期时间\n        calendar.click_button('(//input[@placeholder=\"请选择时间\"])[2]')\n    \n        calendar.click_button('(//em[text()=\"20\"])[2]')\n    \n        # 点击添加按钮\n        calendar.click_button('(//span[text()=\"添加\"])[1]')\n    \n        calendar.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n    \n        calendar.click_button(\n            '//p[text()=\"更新时间\"]/following-sibling::div'\n        )\n    \n        calendar.click_button(\n            '//p[text()=\"更新时间\"]/following-sibling::div'\n        )\n        adddata = calendar.get_find_element_xpath(\n            f'(//span[text()=\"{resource}\"])[1]/ancestor::tr[1]/td[2]'\n        ).text\n        addshift = calendar.get_find_element_xpath(\n            f'(//span[text()=\"{resource}\"])[1]/ancestor::tr[1]/td[4]'\n        ).text\n        addnum = calendar.get_find_element_xpath(\n            f'(//span[text()=\"{resource}\"])[1]/ancestor::tr[1]/td[6]'\n        ).text\n        addtext = calendar.get_find_element_xpath(\n            f'(//span[text()=\"{resource}\"])[1]/ancestor::tr[1]/td[7]'\n        ).text\n>       assert adddata == resource and addshift == resource1 and addnum == num and addtext == num\nE       AssertionError: assert ('0829' == '0829'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 0829\u001B[90m\u001B[39;49;00m and 'B\\u4e2d\\u73ed' == 'B\\u4e2d\\u73ed'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m B中班\u001B[90m\u001B[39;49;00m and '1000000000000000000' == '111111111111...1111111111111'\nE         \nE         \u001B[0m\u001B[91m- 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1000000000000000000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_calendar.py:453: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_calendar","time":{"start":1758719219763,"stop":1758719228097,"duration":8334},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('0829' == '0829'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 0829\u001B[90m\u001B[39;49;00m and 'B\\u4e2d\\u73ed' == 'B\\u4e2d\\u73ed'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m B中班\u001B[90m\u001B[39;49;00m and '1000000000000000000' == '111111111111...1111111111111'\n  \n  \u001B[0m\u001B[91m- 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1000000000000000000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_calendar.TestCalendarPage object at 0x00000271F32B52A0>, login_to_calendar = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fe67b0c4e08944e92b4380c8ca6fcb32\")>\n\n    @allure.story(\"校验数字文本框和文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_calendar_numverify(self, login_to_calendar):\n        driver = login_to_calendar  # WebDriver 实例\n        calendar = Calendar(driver)  # 用 driver 初始化 Calendar\n        num = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        calendar.click_add_button()\n        # 点击资源\n        calendar.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[1]'\n        )\n        # 勾选框\n        random_int = random.randint(1, 5)\n        sleep(1)\n        calendar.click_button(f'//table[@class=\"vxe-table--body\"]//tr[{random_int}]/td[2]/div/span/span')\n    \n        calendar.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n        sleep(1)\n        # 获取勾选的资源代码\n        resource = calendar.get_find_element_xpath(\n            '//label[text()=\"资源\"]/parent::div/div[1]//input[1]'\n        ).get_attribute(\"value\")\n    \n        # 点击班次\n        calendar.click_button(\n            '(//i[@class=\"ivu-icon ivu-icon-md-albums ivu-input-icon ivu-input-icon-normal\"])[2]'\n        )\n        # 勾选框\n        random_int1 = random.randint(1, 2)\n        sleep(1)\n        calendar.click_button(\n            f'(//table[@class=\"vxe-table--body\"]//tr/td[2]//span[@class=\"vxe-cell--checkbox\"])[{random_int1}]')\n    \n        calendar.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n        sleep(1)\n        # 获取勾选的班次\n        resource1 = calendar.get_find_element_xpath(\n            '//label[text()=\"班次\"]/parent::div/div[1]//input[1]'\n        ).get_attribute(\"value\")\n        calendar.enter_texts('//label[text()=\"资源量\"]/parent::div/div[1]//input[1]', num)\n        calendar.enter_texts('//label[text()=\"备注\"]/parent::div/div[1]//input[1]', num)\n        # 点击第一个日期时间\n        calendar.click_button('(//input[@placeholder=\"请选择时间\"])[1]')\n    \n        calendar.click_button('(//em[text()=\"13\"])[1]')\n        # 点击第二个日期时间\n        calendar.click_button('(//input[@placeholder=\"请选择时间\"])[2]')\n    \n        calendar.click_button('(//em[text()=\"20\"])[2]')\n    \n        # 点击添加按钮\n        calendar.click_button('(//span[text()=\"添加\"])[1]')\n    \n        calendar.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n    \n        calendar.click_button(\n            '//p[text()=\"更新时间\"]/following-sibling::div'\n        )\n    \n        calendar.click_button(\n            '//p[text()=\"更新时间\"]/following-sibling::div'\n        )\n        adddata = calendar.get_find_element_xpath(\n            f'(//span[text()=\"{resource}\"])[1]/ancestor::tr[1]/td[2]'\n        ).text\n        addshift = calendar.get_find_element_xpath(\n            f'(//span[text()=\"{resource}\"])[1]/ancestor::tr[1]/td[4]'\n        ).text\n        addnum = calendar.get_find_element_xpath(\n            f'(//span[text()=\"{resource}\"])[1]/ancestor::tr[1]/td[6]'\n        ).text\n        addtext = calendar.get_find_element_xpath(\n            f'(//span[text()=\"{resource}\"])[1]/ancestor::tr[1]/td[7]'\n        ).text\n>       assert adddata == resource and addshift == resource1 and addnum == num and addtext == num\nE       AssertionError: assert ('0829' == '0829'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 0829\u001B[90m\u001B[39;49;00m and 'B\\u4e2d\\u73ed' == 'B\\u4e2d\\u73ed'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m B中班\u001B[90m\u001B[39;49;00m and '1000000000000000000' == '111111111111...1111111111111'\nE         \nE         \u001B[0m\u001B[91m- 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1000000000000000000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_calendar.py:453: AssertionError","steps":[],"attachments":[{"uid":"796da1d7f4bee663","name":"test_calendar_numverify_failure","source":"796da1d7f4bee663.png","type":"image/png","size":76862},{"uid":"c3ed4b32c224c22","name":"test_calendar_numverify_source","source":"c3ed4b32c224c22.html","type":"text/html","size":1296260},{"uid":"dfa83a3dcaf40755","name":"log","source":"dfa83a3dcaf40755.txt","type":"text/plain","size":3432}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_calendar::0","time":{"start":1758719237339,"stop":1758719239542,"duration":2203},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"校验数字文本框和文本框成功"},{"name":"feature","value":"生产日历表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_calendar"},{"name":"subSuite","value":"TestCalendarPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"15904-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_calendar"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"317e345211349250.json","parameterValues":[]}