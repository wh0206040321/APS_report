{"uid":"1962f644988ca71e","name":"test_item_selectsuccess3","fullName":"Tests.test_items.test_item.TestItemPage#test_item_selectsuccess3","historyId":"6252ae76858d530b4279869fe0294473","time":{"start":1761048111854,"stop":1761048130520,"duration":18666},"status":"failed","statusMessage":"AssertionError: 第 6 行不符合：td3=2339-30, td8=0\nassert ('A' in '2339-30' or 0 >= 1)","statusTrace":"self = <test_items.test_item.TestItemPage object at 0x00000173A63ECC70>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aa44bd18fcf456eaff926c7976dced57\")>\n\n    @allure.story(\"查询物料名称包含A或物料优先度≥1\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectsuccess3(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n    \n        name = \"A\"\n        num = 1\n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料名称\n        item.click_button('//div[text()=\"物料名称\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        item.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        item.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n    \n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        item.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        sleep(1)\n        actions.double_click(double_click).perform()\n        # 定义or元素的XPath\n        or_xpath = '//div[text()=\"or\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击or元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, or_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            or_found = False\n    \n            while attempt < max_attempts and not or_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找or元素\n                    or_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, or_xpath))\n                    )\n                    or_element.click()\n                    or_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not or_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'or'元素\")\n    \n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        item.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击物料优先度\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        item.click_button('//div[text()=\"物料优先度\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        item.click_button('//div[text()=\"≥\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值0\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            num,\n        )\n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        item.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 获取目标表格第2个 vxe 表格中的所有数据行\n        xpath_rows = '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[contains(@class,\"vxe-body--row\")]'\n    \n        # 先拿到总行数\n        base_rows = driver.find_elements(By.XPATH, xpath_rows)\n        total = len(base_rows)\n    \n        valid_count = 0\n        for idx in range(total):\n            try:\n                # 每次都按索引重新定位这一行\n                row = driver.find_elements(By.XPATH, xpath_rows)[idx]\n                tds = row.find_elements(By.TAG_NAME, \"td\")\n                td3 = tds[2].text.strip()\n                td6_raw = tds[5].text.strip()\n                td6_raw = int(td6_raw) if td6_raw else 0\n    \n>               assert name in td3 or td6_raw >= num, f\"第 {idx + 1} 行不符合：td3={td3}, td8={td6_raw}\"\nE               AssertionError: 第 6 行不符合：td3=2339-30, td8=0\nE               assert ('A' in '2339-30' or 0 >= 1)\n\nTests\\test_items\\test_item.py:949: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1761048101369,"stop":1761048111853,"duration":10484},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 第 6 行不符合：td3=2339-30, td8=0\nassert ('A' in '2339-30' or 0 >= 1)","statusTrace":"self = <test_items.test_item.TestItemPage object at 0x00000173A63ECC70>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aa44bd18fcf456eaff926c7976dced57\")>\n\n    @allure.story(\"查询物料名称包含A或物料优先度≥1\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectsuccess3(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n    \n        name = \"A\"\n        num = 1\n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料名称\n        item.click_button('//div[text()=\"物料名称\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        item.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        item.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n    \n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        item.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        sleep(1)\n        actions.double_click(double_click).perform()\n        # 定义or元素的XPath\n        or_xpath = '//div[text()=\"or\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击or元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, or_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            or_found = False\n    \n            while attempt < max_attempts and not or_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找or元素\n                    or_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, or_xpath))\n                    )\n                    or_element.click()\n                    or_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not or_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'or'元素\")\n    \n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        item.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击物料优先度\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        item.click_button('//div[text()=\"物料优先度\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        item.click_button('//div[text()=\"≥\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值0\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            num,\n        )\n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        item.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 获取目标表格第2个 vxe 表格中的所有数据行\n        xpath_rows = '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[contains(@class,\"vxe-body--row\")]'\n    \n        # 先拿到总行数\n        base_rows = driver.find_elements(By.XPATH, xpath_rows)\n        total = len(base_rows)\n    \n        valid_count = 0\n        for idx in range(total):\n            try:\n                # 每次都按索引重新定位这一行\n                row = driver.find_elements(By.XPATH, xpath_rows)[idx]\n                tds = row.find_elements(By.TAG_NAME, \"td\")\n                td3 = tds[2].text.strip()\n                td6_raw = tds[5].text.strip()\n                td6_raw = int(td6_raw) if td6_raw else 0\n    \n>               assert name in td3 or td6_raw >= num, f\"第 {idx + 1} 行不符合：td3={td3}, td8={td6_raw}\"\nE               AssertionError: 第 6 行不符合：td3=2339-30, td8=0\nE               assert ('A' in '2339-30' or 0 >= 1)\n\nTests\\test_items\\test_item.py:949: AssertionError","steps":[],"attachments":[{"uid":"78963aa500ea8b23","name":"test_item_selectsuccess3_failure","source":"78963aa500ea8b23.png","type":"image/png","size":121308},{"uid":"b02204506aebf5aa","name":"test_item_selectsuccess3_source","source":"b02204506aebf5aa.html","type":"text/html","size":1440037},{"uid":"17c4f16da1a7afd6","name":"log","source":"17c4f16da1a7afd6.txt","type":"text/plain","size":3048}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_item::0","time":{"start":1761048130690,"stop":1761048132845,"duration":2155},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"查询物料名称包含A或物料优先度≥1"},{"name":"feature","value":"物料表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_item"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_item"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"1962f644988ca71e.json","parameterValues":[]}