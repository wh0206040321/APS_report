{"uid":"6884cef4d66dbb1f","name":"test_item_addsuccess1","fullName":"Tests.test_material.test_materialShift.TestItemPage#test_item_addsuccess1","historyId":"96199a03ba57323452745ac7390172bf","time":{"start":1754933460068,"stop":1754933476285,"duration":16217},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //label[text()=\"代码\"]/following-sibling::div//input; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","statusTrace":"self = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1E0B32EC0>, xpath_list = ['//label[text()=\"代码\"]/following-sibling::div//input']\ntext_value = '222'\n\n    def batch_acquisition_input(self, xpath_list=[], text_value=\"\"):\n        \"\"\"批量获取输入框\"\"\"\n        values = []\n        for index, xpath in enumerate(xpath_list, 1):\n            try:\n                # 显式等待元素可见（最多等待10秒）\n>               element = WebDriverWait(self.driver, 10).until(\n                    EC.visibility_of_element_located((\"xpath\", xpath))\n                )\n\nPages\\materialPage\\warehouseLocation_page.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"61dc22a81b3b8f0bb90dfad79673dbe8\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001C1E0DC9120>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_material.test_materialShift.TestItemPage object at 0x000001C1DEA92E60>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"61dc22a81b3b8f0bb90dfad79673dbe8\")>\n\n    @allure.story(\"添加测试数据\")\n    # @pytest.mark.run(order=1)\n    def test_item_addsuccess1(self, login_to_item):\n        self.item.click_add_button()  # 检查点击添加\n        # 输入框要修改的值\n        self.item.enter_texts(\n            \"//label[text()='代码']/following-sibling::div//input\", \"222\"\n        )\n    \n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n    \n        sleep(1)\n        # 点击修改按钮\n        self.item.click_edi_button()\n        sleep(1)\n        # 批量获取输入框的value\n>       input_values = self.item.batch_acquisition_input(['//label[text()=\"代码\"]/following-sibling::div//input'],\n                                                         \"222\")\n\nTests\\test_material\\test_materialShift.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1E0B32EC0>, xpath_list = ['//label[text()=\"代码\"]/following-sibling::div//input']\ntext_value = '222'\n\n    def batch_acquisition_input(self, xpath_list=[], text_value=\"\"):\n        \"\"\"批量获取输入框\"\"\"\n        values = []\n        for index, xpath in enumerate(xpath_list, 1):\n            try:\n                # 显式等待元素可见（最多等待10秒）\n                element = WebDriverWait(self.driver, 10).until(\n                    EC.visibility_of_element_located((\"xpath\", xpath))\n                )\n    \n                # 获取输入框的值\n                value = element.get_attribute(\"value\")\n                if value == text_value:\n                    values.append(value)\n    \n            except TimeoutException:\n>               raise NoSuchElementException(\n                    f\"元素未找到（XPath列表第{index}个）: {xpath}\"\n                )\nE               selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //label[text()=\"代码\"]/following-sibling::div//input; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\n\nPages\\materialPage\\warehouseLocation_page.py:146: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1754933399793,"stop":1754933408534,"duration":8741},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"setup","time":{"start":1754933460067,"stop":1754933460068,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //label[text()=\"代码\"]/following-sibling::div//input; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception","statusTrace":"self = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1E0B32EC0>, xpath_list = ['//label[text()=\"代码\"]/following-sibling::div//input']\ntext_value = '222'\n\n    def batch_acquisition_input(self, xpath_list=[], text_value=\"\"):\n        \"\"\"批量获取输入框\"\"\"\n        values = []\n        for index, xpath in enumerate(xpath_list, 1):\n            try:\n                # 显式等待元素可见（最多等待10秒）\n>               element = WebDriverWait(self.driver, 10).until(\n                    EC.visibility_of_element_located((\"xpath\", xpath))\n                )\n\nPages\\materialPage\\warehouseLocation_page.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"61dc22a81b3b8f0bb90dfad79673dbe8\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001C1E0DC9120>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_material.test_materialShift.TestItemPage object at 0x000001C1DEA92E60>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"61dc22a81b3b8f0bb90dfad79673dbe8\")>\n\n    @allure.story(\"添加测试数据\")\n    # @pytest.mark.run(order=1)\n    def test_item_addsuccess1(self, login_to_item):\n        self.item.click_add_button()  # 检查点击添加\n        # 输入框要修改的值\n        self.item.enter_texts(\n            \"//label[text()='代码']/following-sibling::div//input\", \"222\"\n        )\n    \n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n    \n        sleep(1)\n        # 点击修改按钮\n        self.item.click_edi_button()\n        sleep(1)\n        # 批量获取输入框的value\n>       input_values = self.item.batch_acquisition_input(['//label[text()=\"代码\"]/following-sibling::div//input'],\n                                                         \"222\")\n\nTests\\test_material\\test_materialShift.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1E0B32EC0>, xpath_list = ['//label[text()=\"代码\"]/following-sibling::div//input']\ntext_value = '222'\n\n    def batch_acquisition_input(self, xpath_list=[], text_value=\"\"):\n        \"\"\"批量获取输入框\"\"\"\n        values = []\n        for index, xpath in enumerate(xpath_list, 1):\n            try:\n                # 显式等待元素可见（最多等待10秒）\n                element = WebDriverWait(self.driver, 10).until(\n                    EC.visibility_of_element_located((\"xpath\", xpath))\n                )\n    \n                # 获取输入框的值\n                value = element.get_attribute(\"value\")\n                if value == text_value:\n                    values.append(value)\n    \n            except TimeoutException:\n>               raise NoSuchElementException(\n                    f\"元素未找到（XPath列表第{index}个）: {xpath}\"\n                )\nE               selenium.common.exceptions.NoSuchElementException: Message: 元素未找到（XPath列表第1个）: //label[text()=\"代码\"]/following-sibling::div//input; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\n\nPages\\materialPage\\warehouseLocation_page.py:146: NoSuchElementException","steps":[],"attachments":[{"uid":"b81c05a0eb26f85f","name":"log","source":"b81c05a0eb26f85f.txt","type":"text/plain","size":594}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_item::0","time":{"start":1754933698536,"stop":1754933700686,"duration":2150},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"story","value":"添加测试数据"},{"name":"feature","value":"收货班次测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialShift"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"24412-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialShift"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"6884cef4d66dbb1f.json","parameterValues":[]}