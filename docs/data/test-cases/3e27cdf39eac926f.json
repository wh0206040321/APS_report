{"uid":"3e27cdf39eac926f","name":"test_item_addrepeat","fullName":"Tests.test_items.test_item.TestItemPage#test_item_addrepeat","historyId":"5aed14f1a637502f81b7a2fb2ff14f67","time":{"start":1760962305773,"stop":1760962311903,"duration":6130},"status":"failed","statusMessage":"AssertionError: 预期数据是记录已存在,请检查，实际得到\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_item.TestItemPage object at 0x0000014AE2E59870>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8e50adbe941df0ef0d61d5ddba65063\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_item_addrepeat(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n    \n        name = \"111\"\n        item.add_test_item(name)\n        # 点击确定\n        item.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        # 获取重复弹窗文字\n        error_popup = item.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert (\n            error_popup == \"记录已存在,请检查！\"\n        ), f\"预期数据是记录已存在,请检查，实际得到{error_popup}\"\nE       AssertionError: 预期数据是记录已存在,请检查，实际得到\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_item.py:264: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1760962294276,"stop":1760962305773,"duration":11497},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期数据是记录已存在,请检查，实际得到\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_item.TestItemPage object at 0x0000014AE2E59870>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8e50adbe941df0ef0d61d5ddba65063\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_item_addrepeat(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n    \n        name = \"111\"\n        item.add_test_item(name)\n        # 点击确定\n        item.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        # 获取重复弹窗文字\n        error_popup = item.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert (\n            error_popup == \"记录已存在,请检查！\"\n        ), f\"预期数据是记录已存在,请检查，实际得到{error_popup}\"\nE       AssertionError: 预期数据是记录已存在,请检查，实际得到\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_item.py:264: AssertionError","steps":[],"attachments":[{"uid":"a75f4317fcc2b5","name":"test_item_addrepeat_failure","source":"a75f4317fcc2b5.png","type":"image/png","size":249179},{"uid":"2c11b1c69f4bdbd5","name":"test_item_addrepeat_source","source":"2c11b1c69f4bdbd5.html","type":"text/html","size":869096},{"uid":"9030ef370307b8c7","name":"test_item_addrepeat_failure","source":"9030ef370307b8c7.png","type":"image/png","size":112509},{"uid":"d47e2e8f9e37e8ab","name":"test_item_addrepeat_source","source":"d47e2e8f9e37e8ab.html","type":"text/html","size":1523361},{"uid":"63f4b1f515f43faf","name":"log","source":"63f4b1f515f43faf.txt","type":"text/plain","size":1149}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":5,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_item::0","time":{"start":1760962312456,"stop":1760962314660,"duration":2204},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"物料表测试用例"},{"name":"story","value":"添加数据重复"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_item"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_item"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"3e27cdf39eac926f.json","parameterValues":[]}