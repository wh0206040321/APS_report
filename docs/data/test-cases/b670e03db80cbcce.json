{"uid":"b670e03db80cbcce","name":"test_resource_editrepeat","fullName":"Tests.test_items.test_resource.TestResourcePage#test_resource_editrepeat","historyId":"42b4fb62ef87b1dd49f7e36e252d5993","time":{"start":1756114926401,"stop":1756114926401,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7fee56f65+78965]\n\tGetHandleVerifier [0x0x7ff7fee56fc0+79056]\n\t(No symbol) [0x0x7ff7febe9dda]\n\t(No symbol) [0x0x7ff7fec402ea]\n\t(No symbol) [0x0x7ff7fec4059c]\n\t(No symbol) [0x0x7ff7fec93f37]\n\t(No symbol) [0x0x7ff7fec686af]\n\t(No symbol) [0x0x7ff7fec90dbe]\n\t(No symbol) [0x0x7ff7fec68443]\n\t(No symbol) [0x0x7ff7fec31311]\n\t(No symbol) [0x0x7ff7fec320a3]\n\tGetHandleVerifier [0x0x7ff7ff10e26d+2926461]\n\tGetHandleVerifier [0x0x7ff7ff108993+2903715]\n\tGetHandleVerifier [0x0x7ff7ff126aed+3026941]\n\tGetHandleVerifier [0x0x7ff7fee716fe+187406]\n\tGetHandleVerifier [0x0x7ff7fee796ef+220159]\n\tGetHandleVerifier [0x0x7ff7fee5faf4+114692]\n\tGetHandleVerifier [0x0x7ff7fee5fca9+115129]\n\tGetHandleVerifier [0x0x7ff7fee464d8+10728]\n\tBaseThreadInitThunk [0x0x7ffe01a57374+20]\n\tRtlUserThreadStart [0x0x7ffe0239cc91+33]","statusTrace":"@pytest.fixture  # (scope=\"class\")这个参数表示整个测试类共用同一个浏览器，默认一个用例执行一次\n    def login_to_resource():\n        \"\"\"初始化并返回 driver\"\"\"\n        date_driver = DateDriver()\n        # 初始化 driver\n        driver = create_driver(date_driver.driver_path)\n        driver.implicitly_wait(3)\n    \n        # 初始化登录页面\n        page = LoginPage(driver)  # 初始化登录页面\n        url = date_driver.url\n        print(f\"[INFO] 正在导航到 URL: {url}\")\n        # 尝试访问 URL，捕获连接错误\n        for attempt in range(2):\n            try:\n                page.navigate_to(url)\n                break\n            except WebDriverException as e:\n                capture_screenshot(driver, f\"login_fail_{attempt + 1}\")\n                logging.warning(f\"第 {attempt + 1} 次连接失败: {e}\")\n                driver.refresh()\n                sleep(date_driver.URL_RETRY_WAIT)\n        else:\n            logging.error(\"连接失败多次，测试中止\")\n            safe_quit(driver)\n            raise RuntimeError(\"无法连接到登录页面\")\n    \n>       page.login(date_driver.username, date_driver.password, date_driver.planning)\n\nTests\\test_items\\test_resource.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\login_page.py:32: in login\n    self.enter_username(username)\nPages\\itemsPage\\login_page.py:16: in enter_username\n    self.enter_text(By.XPATH, '//input[@placeholder=\"请输入账户\"]', username)\nPages\\base_page.py:66: in enter_text\n    element = WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"313b9547f894706c96a44f5c30094670\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000027484C0D990>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7fee56f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7fee56fc0+79056]\nE       \t(No symbol) [0x0x7ff7febe9dda]\nE       \t(No symbol) [0x0x7ff7fec402ea]\nE       \t(No symbol) [0x0x7ff7fec4059c]\nE       \t(No symbol) [0x0x7ff7fec93f37]\nE       \t(No symbol) [0x0x7ff7fec686af]\nE       \t(No symbol) [0x0x7ff7fec90dbe]\nE       \t(No symbol) [0x0x7ff7fec68443]\nE       \t(No symbol) [0x0x7ff7fec31311]\nE       \t(No symbol) [0x0x7ff7fec320a3]\nE       \tGetHandleVerifier [0x0x7ff7ff10e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7ff108993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7ff126aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7fee716fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7fee796ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7fee5faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7fee5fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7fee464d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe01a57374+20]\nE       \tRtlUserThreadStart [0x0x7ffe0239cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_resource","time":{"start":1756114926402,"stop":1756114940566,"duration":14164},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7fee56f65+78965]\n\tGetHandleVerifier [0x0x7ff7fee56fc0+79056]\n\t(No symbol) [0x0x7ff7febe9dda]\n\t(No symbol) [0x0x7ff7fec402ea]\n\t(No symbol) [0x0x7ff7fec4059c]\n\t(No symbol) [0x0x7ff7fec93f37]\n\t(No symbol) [0x0x7ff7fec686af]\n\t(No symbol) [0x0x7ff7fec90dbe]\n\t(No symbol) [0x0x7ff7fec68443]\n\t(No symbol) [0x0x7ff7fec31311]\n\t(No symbol) [0x0x7ff7fec320a3]\n\tGetHandleVerifier [0x0x7ff7ff10e26d+2926461]\n\tGetHandleVerifier [0x0x7ff7ff108993+2903715]\n\tGetHandleVerifier [0x0x7ff7ff126aed+3026941]\n\tGetHandleVerifier [0x0x7ff7fee716fe+187406]\n\tGetHandleVerifier [0x0x7ff7fee796ef+220159]\n\tGetHandleVerifier [0x0x7ff7fee5faf4+114692]\n\tGetHandleVerifier [0x0x7ff7fee5fca9+115129]\n\tGetHandleVerifier [0x0x7ff7fee464d8+10728]\n\tBaseThreadInitThunk [0x0x7ffe01a57374+20]\n\tRtlUserThreadStart [0x0x7ffe0239cc91+33]\n\n","statusTrace":"  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\pluggy\\_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\pluggy\\_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\pluggy\\_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\_pytest\\fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\_pytest\\fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n  File \"D:\\PycharmProjects\\APS\\Tests\\test_items\\test_resource.py\", line 48, in login_to_resource\n    page.login(date_driver.username, date_driver.password, date_driver.planning)\n  File \"D:\\PycharmProjects\\APS\\Pages\\itemsPage\\login_page.py\", line 32, in login\n    self.enter_username(username)\n  File \"D:\\PycharmProjects\\APS\\Pages\\itemsPage\\login_page.py\", line 16, in enter_username\n    self.enter_text(By.XPATH, '//input[@placeholder=\"请输入账户\"]', username)\n  File \"D:\\PycharmProjects\\APS\\Pages\\base_page.py\", line 66, in enter_text\n    element = WebDriverWait(self.driver, wait_time).until(\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":true}],"afterStages":[],"labels":[{"name":"feature","value":"资源表测试用例"},{"name":"story","value":"修改资源代码重复"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_resource"},{"name":"subSuite","value":"TestResourcePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"6532-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_resource"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"b670e03db80cbcce.json","parameterValues":[]}