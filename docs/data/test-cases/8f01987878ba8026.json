{"uid":"8f01987878ba8026","name":"test_production_editnum1","fullName":"Tests.test_item.test_production.TestProductionPage#test_production_editnum1","historyId":"5bbd47f76a54c512b612f846e5c2ab94","time":{"start":1752828254873,"stop":1752828254873,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//span[text()=\"计划管理\"])[1]","statusTrace":"self = <Pages.login_page.LoginPage object at 0x00000264E3FABE20>, by_or_element = 'xpath', value = '(//span[text()=\"计划管理\"])[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f75a0af272ad70b31d7c28c6a64c8ab2\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000264E3F62DD0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7793d6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7793d6fc0+79056]\nE       \t(No symbol) [0x0x7ff779169dda]\nE       \t(No symbol) [0x0x7ff7791c02ea]\nE       \t(No symbol) [0x0x7ff7791c059c]\nE       \t(No symbol) [0x0x7ff779213f37]\nE       \t(No symbol) [0x0x7ff7791e86af]\nE       \t(No symbol) [0x0x7ff779210dbe]\nE       \t(No symbol) [0x0x7ff7791e8443]\nE       \t(No symbol) [0x0x7ff7791b1311]\nE       \t(No symbol) [0x0x7ff7791b20a3]\nE       \tGetHandleVerifier [0x0x7ff77968e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff779688993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7796a6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7793f16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7793f96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7793dfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7793dfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7793c64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffa099e7374+20]\nE       \tRtlUserThreadStart [0x0x7ffa0b89cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture  # (scope=\"class\")这个参数表示整个测试类共用同一个浏览器，默认一个用例执行一次\n    def login_to_production():\n        \"\"\"初始化并返回 driver\"\"\"\n        driver_path = DateDriver().driver_path\n        driver = create_driver(driver_path)\n        driver.implicitly_wait(3)\n    \n        # 初始化登录页面\n        page = LoginPage(driver)  # 初始化登录页面\n        page.navigate_to(DateDriver().url)  # 导航到登录页面\n        page.login(DateDriver().username, DateDriver().password, DateDriver().planning)\n>       page.click_button('(//span[text()=\"计划管理\"])[1]')  # 点击计划管理\n\nTests\\test_item\\test_production.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\login_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.login_page.LoginPage object at 0x00000264E3FABE20>, by_or_element = 'xpath', value = '(//span[text()=\"计划管理\"])[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//span[text()=\"计划管理\"])[1]\n\nPages\\base_page.py:48: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_production","time":{"start":1752828254874,"stop":1752828278813,"duration":23939},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//span[text()=\"计划管理\"])[1]\n\n","statusTrace":"  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\pluggy\\_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\pluggy\\_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\pluggy\\_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\_pytest\\fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\_pytest\\fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n  File \"D:\\PycharmProjects\\APS\\Tests\\test_item\\test_production.py\", line 32, in login_to_production\n    page.click_button('(//span[text()=\"计划管理\"])[1]')  # 点击计划管理\n  File \"D:\\PycharmProjects\\APS\\Pages\\login_page.py\", line 22, in click_button\n    self.click(By.XPATH, xpath)\n  File \"D:\\PycharmProjects\\APS\\Pages\\base_page.py\", line 48, in click\n    raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\n","steps":[],"attachments":[{"uid":"1640ecc8e2056e84","name":"test_click_timeout","source":"1640ecc8e2056e84.png","type":"image/png","size":66726}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//span[text()=\"计划管理\"])[1]","statusTrace":"self = <Pages.login_page.LoginPage object at 0x00000264E3FABE20>, by_or_element = 'xpath', value = '(//span[text()=\"计划管理\"])[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f75a0af272ad70b31d7c28c6a64c8ab2\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000264E3F62DD0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7793d6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7793d6fc0+79056]\nE       \t(No symbol) [0x0x7ff779169dda]\nE       \t(No symbol) [0x0x7ff7791c02ea]\nE       \t(No symbol) [0x0x7ff7791c059c]\nE       \t(No symbol) [0x0x7ff779213f37]\nE       \t(No symbol) [0x0x7ff7791e86af]\nE       \t(No symbol) [0x0x7ff779210dbe]\nE       \t(No symbol) [0x0x7ff7791e8443]\nE       \t(No symbol) [0x0x7ff7791b1311]\nE       \t(No symbol) [0x0x7ff7791b20a3]\nE       \tGetHandleVerifier [0x0x7ff77968e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff779688993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7796a6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7793f16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7793f96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7793dfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7793dfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7793c64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffa099e7374+20]\nE       \tRtlUserThreadStart [0x0x7ffa0b89cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.fixture  # (scope=\"class\")这个参数表示整个测试类共用同一个浏览器，默认一个用例执行一次\n    def login_to_production():\n        \"\"\"初始化并返回 driver\"\"\"\n        driver_path = DateDriver().driver_path\n        driver = create_driver(driver_path)\n        driver.implicitly_wait(3)\n    \n        # 初始化登录页面\n        page = LoginPage(driver)  # 初始化登录页面\n        page.navigate_to(DateDriver().url)  # 导航到登录页面\n        page.login(DateDriver().username, DateDriver().password, DateDriver().planning)\n>       page.click_button('(//span[text()=\"计划管理\"])[1]')  # 点击计划管理\n\nTests\\test_item\\test_production.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\login_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.login_page.LoginPage object at 0x00000264E3FABE20>, by_or_element = 'xpath', value = '(//span[text()=\"计划管理\"])[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//span[text()=\"计划管理\"])[1]\n\nPages\\base_page.py:48: TimeoutException","steps":[],"attachments":[{"uid":"c5366dde8d7b8bf8","name":"log","source":"c5366dde8d7b8bf8.txt","type":"text/plain","size":2508}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[],"labels":[{"name":"feature","value":"生产报工测试用例"},{"name":"story","value":"当报工数量小于实绩报工数量 修改报工数量成功"},{"name":"parentSuite","value":"Tests.test_item"},{"name":"suite","value":"test_production"},{"name":"subSuite","value":"TestProductionPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"27780-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_item.test_production"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"893cd33381f3e7f7","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7793d6f65+78965]\n\tGetHandleVerifier [0x0x7ff7793d6fc0+79056]\n\t(No symbol) [0x0x7ff779169dda]\n\t(No symbol) [0x0x7ff7791c02ea]\n\t(No symbol) [0x0x7ff7791c059c]\n\t(No symbol) [0x0x7ff779213f37]\n\t(No symbol) [0x0x7ff7791e86af]\n\t(No symbol) [0x0x7ff779210dbe]\n\t(No symbol) [0x0x7ff7791e8443]\n\t(No symbol) [0x0x7ff7791b1311]\n\t(No symbol) [0x0x7ff7791b20a3]\n\tGetHandleVerifier [0x0x7ff77968e26d+2926461]\n\tGetHandleVerifier [0x0x7ff779688993+2903715]\n\tGetHandleVerifier [0x0x7ff7796a6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7793f16fe+187406]\n\tGetHandleVerifier [0x0x7ff7793f96ef+220159]\n\tGetHandleVerifier [0x0x7ff7793dfaf4+114692]\n\tGetHandleVerifier [0x0x7ff7793dfca9+115129]\n\tGetHandleVerifier [0x0x7ff7793c64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffa099e7374+20]\n\tRtlUserThreadStart [0x0x7ffa0b89cc91+33]","time":{"start":1752828238521,"stop":1752828252583,"duration":14062}},{"uid":"227b9f6e3b249c21","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //tr[./td[2]//span[text()=\"1测试C订单:2\"]]/td[6]","time":{"start":1752760915087,"stop":1752760925282,"duration":10195}},{"uid":"407a510c677a9237","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //tr[./td[2]//span[text()=\"1测试C订单:2\"]]/td[6]","time":{"start":1752760894902,"stop":1752760905129,"duration":10227}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"8f01987878ba8026.json","parameterValues":[]}