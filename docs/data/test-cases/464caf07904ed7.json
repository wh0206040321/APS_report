{"uid":"464caf07904ed7","name":"test_setting_label_testsuccess","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_label_testsuccess","historyId":"0c8d67b3c835f7960fafd1fcefac738c","time":{"start":1755098863769,"stop":1755098867960,"duration":4191},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.itemsPage.setting_page.SettingPage object at 0x0000023BD44D0190>.has_fail_message","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000023BD3D47340>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4196c2cc70161fb8d7c3ec1a903353e7\")>\n\n    @allure.story(\"添加测试标签\")\n    # @pytest.mark.run(order=1)\n    def test_setting_label_testsuccess(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        setting.add_lable(\"标签2\")\n        setting.click_button('(//button[@class=\"ivu-btn ivu-btn-primary\"])[last()]')\n        ele = driver.find_elements(By.XPATH, '//div[@class=\"labelItem\"]')\n        sleep(1)\n        assert any(\"标签2\" in element.text for element in ele), \"没有找到包含'标签2'的标签项\"\n>       assert not setting.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.itemsPage.setting_page.SettingPage object at 0x0000023BD44D0190>.has_fail_message\n\nTests\\test_items\\test_setting.py:1955: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1755098853978,"stop":1755098863768,"duration":9790},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.itemsPage.setting_page.SettingPage object at 0x0000023BD44D0190>.has_fail_message","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000023BD3D47340>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4196c2cc70161fb8d7c3ec1a903353e7\")>\n\n    @allure.story(\"添加测试标签\")\n    # @pytest.mark.run(order=1)\n    def test_setting_label_testsuccess(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        setting.add_lable(\"标签2\")\n        setting.click_button('(//button[@class=\"ivu-btn ivu-btn-primary\"])[last()]')\n        ele = driver.find_elements(By.XPATH, '//div[@class=\"labelItem\"]')\n        sleep(1)\n        assert any(\"标签2\" in element.text for element in ele), \"没有找到包含'标签2'的标签项\"\n>       assert not setting.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.itemsPage.setting_page.SettingPage object at 0x0000023BD44D0190>.has_fail_message\n\nTests\\test_items\\test_setting.py:1955: AssertionError","steps":[],"attachments":[{"uid":"31d3afbd511a5484","name":"test_setting_label_testsuccess_failure","source":"31d3afbd511a5484.png","type":"image/png","size":81775},{"uid":"557f8edc5175817b","name":"test_setting_label_testsuccess_source","source":"557f8edc5175817b.html","type":"text/html","size":1369252},{"uid":"22014b9a75b26127","name":"log","source":"22014b9a75b26127.txt","type":"text/plain","size":2991}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_setting::0","time":{"start":1755098868237,"stop":1755098871967,"duration":3730},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"添加测试标签"},{"name":"feature","value":"标准应用设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b2c0fd30403b439a","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.itemsPage.setting_page.SettingPage object at 0x0000023BD44F8FD0>.has_fail_message","time":{"start":1755098847679,"stop":1755098851543,"duration":3864}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"464caf07904ed7.json","parameterValues":[]}