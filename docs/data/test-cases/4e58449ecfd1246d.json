{"uid":"4e58449ecfd1246d","name":"test_coverage_selectcodesuccess","fullName":"Tests.test_items.test_coverage.TestCoveragePage#test_coverage_selectcodesuccess","historyId":"9d9fad53d2ebd471644ad342c06aeade","time":{"start":1761052423880,"stop":1761052438225,"duration":14345},"status":"failed","statusMessage":"AssertionError: assert '1测试资源A' == 'A'\n  \n  \u001B[0m\u001B[91m- A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1测试资源A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_coverage.TestCoveragePage object at 0x00000173A635EF20>, login_to_coverage = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"85102d3ba076bdf906c0efde8cdd1d9a\")>\n\n    @allure.story(\"查询资源成功\")\n    # @pytest.mark.run(order=1)\n    def test_coverage_selectcodesuccess(self, login_to_coverage):\n        driver = login_to_coverage  # WebDriver 实例\n        coverage = Coverage(driver)  # 用 driver 初始化 Coverage\n    \n        resource = coverage.get_find_element_xpath('(//div[@id=\"canvasGird0\"]//table[@class=\"vxe-table--body\"])[1]//tr[2]/td[2]').text\n    \n        # 点击查询\n        coverage.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击覆盖日历代码\n        coverage.click_button('//div[text()=\"资源代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        coverage.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        coverage.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        coverage.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            resource,\n        )\n        sleep(3)\n    \n        # 点击确认\n        coverage.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(2)\n        # 定位第一行\n        coveragecode = coverage.get_find_element_xpath(\n            '(//div[@id=\"canvasGird0\"]//table[@class=\"vxe-table--body\"])[1]//tr[1]/td[2]'\n        ).text\n>       assert coveragecode == resource\nE       AssertionError: assert '1测试资源A' == 'A'\nE         \nE         \u001B[0m\u001B[91m- A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1测试资源A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_coverage.py:920: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_coverage","time":{"start":1761052410737,"stop":1761052423879,"duration":13142},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '1测试资源A' == 'A'\n  \n  \u001B[0m\u001B[91m- A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1测试资源A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_coverage.TestCoveragePage object at 0x00000173A635EF20>, login_to_coverage = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"85102d3ba076bdf906c0efde8cdd1d9a\")>\n\n    @allure.story(\"查询资源成功\")\n    # @pytest.mark.run(order=1)\n    def test_coverage_selectcodesuccess(self, login_to_coverage):\n        driver = login_to_coverage  # WebDriver 实例\n        coverage = Coverage(driver)  # 用 driver 初始化 Coverage\n    \n        resource = coverage.get_find_element_xpath('(//div[@id=\"canvasGird0\"]//table[@class=\"vxe-table--body\"])[1]//tr[2]/td[2]').text\n    \n        # 点击查询\n        coverage.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击覆盖日历代码\n        coverage.click_button('//div[text()=\"资源代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        coverage.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        coverage.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        coverage.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            resource,\n        )\n        sleep(3)\n    \n        # 点击确认\n        coverage.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(2)\n        # 定位第一行\n        coveragecode = coverage.get_find_element_xpath(\n            '(//div[@id=\"canvasGird0\"]//table[@class=\"vxe-table--body\"])[1]//tr[1]/td[2]'\n        ).text\n>       assert coveragecode == resource\nE       AssertionError: assert '1测试资源A' == 'A'\nE         \nE         \u001B[0m\u001B[91m- A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1测试资源A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_coverage.py:920: AssertionError","steps":[],"attachments":[{"uid":"3d7bf2a96cd3e171","name":"test_coverage_selectcodesuccess_failure","source":"3d7bf2a96cd3e171.png","type":"image/png","size":85395},{"uid":"d0b7d3dddaf15852","name":"test_coverage_selectcodesuccess_source","source":"d0b7d3dddaf15852.html","type":"text/html","size":1364788},{"uid":"8fbea9ec52d9a7d","name":"log","source":"8fbea9ec52d9a7d.txt","type":"text/plain","size":1681}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_coverage::0","time":{"start":1761052438461,"stop":1761052440672,"duration":2211},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"覆盖日历表测试用例"},{"name":"story","value":"查询资源成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_coverage"},{"name":"subSuite","value":"TestCoveragePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_coverage"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"4e58449ecfd1246d.json","parameterValues":[]}