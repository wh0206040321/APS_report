{"uid":"62a09c2025f74384","name":"test_item_selectnodatasuccess","fullName":"Tests.test_material.test_materialInventory.TestItemPage#test_item_selectnodatasuccess","historyId":"7873d6f993ba251fd71c0ea6e9b267e1","time":{"start":1754320791514,"stop":1754320800146,"duration":8632},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"ad8dcc4dfaa22586d08295a088aff852\", element=\"f.1EBEEE5080BDD3FFA0DE672AB47A0DB1.d.EA69B2404123F18AB3B14C8DFD27B2FA.e.209\")>])","statusTrace":"self = <test_material.test_materialInventory.TestItemPage object at 0x0000012C8E489810>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ad8dcc4dfaa22586d08295a088aff852\")>\n\n    @allure.story(\"没有数据时显示正常\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectnodatasuccess(self, login_to_item):\n    \n        # 点击查询\n        self.item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = self.driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(self.driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料代码\n        self.item.click_button('//div[text()=\"物料代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        self.item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        self.item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        self.item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"没有数据\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        self.item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        itemcode = self.driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]',\n        )\n>       assert len(itemcode) == 0\nE       assert 1 == 0\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"ad8dcc4dfaa22586d08295a088aff852\", element=\"f.1EBEEE5080BDD3FFA0DE672AB47A0DB1.d.EA69B2404123F18AB3B14C8DFD27B2FA.e.209\")>])\n\nTests\\test_material\\test_materialInventory.py:562: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1754320783956,"stop":1754320791510,"duration":7554},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"setup","time":{"start":1754320791510,"stop":1754320791513,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"ad8dcc4dfaa22586d08295a088aff852\", element=\"f.1EBEEE5080BDD3FFA0DE672AB47A0DB1.d.EA69B2404123F18AB3B14C8DFD27B2FA.e.209\")>])","statusTrace":"self = <test_material.test_materialInventory.TestItemPage object at 0x0000012C8E489810>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ad8dcc4dfaa22586d08295a088aff852\")>\n\n    @allure.story(\"没有数据时显示正常\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectnodatasuccess(self, login_to_item):\n    \n        # 点击查询\n        self.item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = self.driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(self.driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料代码\n        self.item.click_button('//div[text()=\"物料代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        self.item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        self.item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        self.item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"没有数据\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        self.item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        itemcode = self.driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]',\n        )\n>       assert len(itemcode) == 0\nE       assert 1 == 0\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"ad8dcc4dfaa22586d08295a088aff852\", element=\"f.1EBEEE5080BDD3FFA0DE672AB47A0DB1.d.EA69B2404123F18AB3B14C8DFD27B2FA.e.209\")>])\n\nTests\\test_material\\test_materialInventory.py:562: AssertionError","steps":[],"attachments":[{"uid":"9a8bc98a1c4d85d4","name":"test_item_selectnodatasuccess_failure","source":"9a8bc98a1c4d85d4.png","type":"image/png","size":93720},{"uid":"5c6bc07cabcc7860","name":"test_item_selectnodatasuccess_source","source":"5c6bc07cabcc7860.html","type":"text/html","size":1272935},{"uid":"e3676704d19fd86f","name":"log","source":"e3676704d19fd86f.txt","type":"text/plain","size":1428}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_item::0","time":{"start":1754320800309,"stop":1754320802465,"duration":2156},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"物料库存测试用例"},{"name":"story","value":"没有数据时显示正常"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialInventory"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialInventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"62a09c2025f74384.json","parameterValues":[]}