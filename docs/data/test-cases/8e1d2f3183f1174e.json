{"uid":"8e1d2f3183f1174e","name":"test_personal_openengine5","fullName":"Tests.test_items.test_personal.TestPersonalPage#test_personal_openengine5","historyId":"1982a5843263a14d40a89882edae6ad3","time":{"start":1761063330583,"stop":1761063443639,"duration":113056},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff719876f65+78965]\n\tGetHandleVerifier [0x0x7ff719876fc0+79056]\n\t(No symbol) [0x0x7ff719609dda]\n\t(No symbol) [0x0x7ff7196602ea]\n\t(No symbol) [0x0x7ff71966059c]\n\t(No symbol) [0x0x7ff7196b3f37]\n\t(No symbol) [0x0x7ff7196886af]\n\t(No symbol) [0x0x7ff7196b0dbe]\n\t(No symbol) [0x0x7ff719688443]\n\t(No symbol) [0x0x7ff719651311]\n\t(No symbol) [0x0x7ff7196520a3]\n\tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\n\tGetHandleVerifier [0x0x7ff719b28993+2903715]\n\tGetHandleVerifier [0x0x7ff719b46aed+3026941]\n\tGetHandleVerifier [0x0x7ff7198916fe+187406]\n\tGetHandleVerifier [0x0x7ff7198996ef+220159]\n\tGetHandleVerifier [0x0x7ff71987faf4+114692]\n\tGetHandleVerifier [0x0x7ff71987fca9+115129]\n\tGetHandleVerifier [0x0x7ff7198664d8+10728]\n\tBaseThreadInitThunk [0x0x7ffee1537374+20]\n\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]","statusTrace":"self = <test_items.test_personal.TestPersonalPage object at 0x00000173A649B850>, login_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c45c7aa4121a6193b0a53fdc146b8b44\")>\n\n    @allure.story(\"打开引擎为系统设置-IP\")\n    # @pytest.mark.run(order=1)\n    def test_personal_openengine5(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        wait = WebDriverWait(driver, 100)\n    \n        personal.go_setting_page()\n    \n        personal.click_button('//p[text()=\" 本地引擎打开方式: \"]/following-sibling::div//i')\n        personal.click_button('//li[text()=\"系统设置\"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n    \n        personal.go_engine_page(name='system_ip')\n        ele = driver.find_elements(By.XPATH, '//span[text()=\" 引擎启动方式:本地 \"]')\n        sleep(2)\n        personal.click_button('//button[@class=\"m-l-10 ivu-btn ivu-btn-primary\"]')\n        # 等待“完成”的文本出现\n>       success_element = wait.until(\n            EC.presence_of_element_located(\n                (By.XPATH, '(//div[@class=\"d-flex\"])[3]/p[text()=\" 完成 \"]')\n            )\n        )\n\nTests\\test_items\\test_personal.py:527: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c45c7aa4121a6193b0a53fdc146b8b44\")>, method = <function presence_of_element_located.<locals>._predicate at 0x00000173A70D6710>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196602ea]\nE       \t(No symbol) [0x0x7ff71966059c]\nE       \t(No symbol) [0x0x7ff7196b3f37]\nE       \t(No symbol) [0x0x7ff7196886af]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_personal","time":{"start":1761063320248,"stop":1761063330582,"duration":10334},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff719876f65+78965]\n\tGetHandleVerifier [0x0x7ff719876fc0+79056]\n\t(No symbol) [0x0x7ff719609dda]\n\t(No symbol) [0x0x7ff7196602ea]\n\t(No symbol) [0x0x7ff71966059c]\n\t(No symbol) [0x0x7ff7196b3f37]\n\t(No symbol) [0x0x7ff7196886af]\n\t(No symbol) [0x0x7ff7196b0dbe]\n\t(No symbol) [0x0x7ff719688443]\n\t(No symbol) [0x0x7ff719651311]\n\t(No symbol) [0x0x7ff7196520a3]\n\tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\n\tGetHandleVerifier [0x0x7ff719b28993+2903715]\n\tGetHandleVerifier [0x0x7ff719b46aed+3026941]\n\tGetHandleVerifier [0x0x7ff7198916fe+187406]\n\tGetHandleVerifier [0x0x7ff7198996ef+220159]\n\tGetHandleVerifier [0x0x7ff71987faf4+114692]\n\tGetHandleVerifier [0x0x7ff71987fca9+115129]\n\tGetHandleVerifier [0x0x7ff7198664d8+10728]\n\tBaseThreadInitThunk [0x0x7ffee1537374+20]\n\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]","statusTrace":"self = <test_items.test_personal.TestPersonalPage object at 0x00000173A649B850>, login_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c45c7aa4121a6193b0a53fdc146b8b44\")>\n\n    @allure.story(\"打开引擎为系统设置-IP\")\n    # @pytest.mark.run(order=1)\n    def test_personal_openengine5(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        wait = WebDriverWait(driver, 100)\n    \n        personal.go_setting_page()\n    \n        personal.click_button('//p[text()=\" 本地引擎打开方式: \"]/following-sibling::div//i')\n        personal.click_button('//li[text()=\"系统设置\"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n    \n        personal.go_engine_page(name='system_ip')\n        ele = driver.find_elements(By.XPATH, '//span[text()=\" 引擎启动方式:本地 \"]')\n        sleep(2)\n        personal.click_button('//button[@class=\"m-l-10 ivu-btn ivu-btn-primary\"]')\n        # 等待“完成”的文本出现\n>       success_element = wait.until(\n            EC.presence_of_element_located(\n                (By.XPATH, '(//div[@class=\"d-flex\"])[3]/p[text()=\" 完成 \"]')\n            )\n        )\n\nTests\\test_items\\test_personal.py:527: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c45c7aa4121a6193b0a53fdc146b8b44\")>, method = <function presence_of_element_located.<locals>._predicate at 0x00000173A70D6710>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196602ea]\nE       \t(No symbol) [0x0x7ff71966059c]\nE       \t(No symbol) [0x0x7ff7196b3f37]\nE       \t(No symbol) [0x0x7ff7196886af]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"6f5ef216465fabf5","name":"test_personal_openengine5_failure","source":"6f5ef216465fabf5.png","type":"image/png","size":110868},{"uid":"47f2832aec305d51","name":"test_personal_openengine5_source","source":"47f2832aec305d51.html","type":"text/html","size":2904214},{"uid":"aca0d6c2d8b04948","name":"log","source":"aca0d6c2d8b04948.txt","type":"text/plain","size":4631}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_personal::0","time":{"start":1761063444260,"stop":1761063446594,"duration":2334},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"打开引擎为系统设置-IP"},{"name":"feature","value":"个人设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_personal"},{"name":"subSuite","value":"TestPersonalPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_personal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5c7b473c2daddb71","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff719876f65+78965]\n\tGetHandleVerifier [0x0x7ff719876fc0+79056]\n\t(No symbol) [0x0x7ff719609dda]\n\t(No symbol) [0x0x7ff7196602ea]\n\t(No symbol) [0x0x7ff71966059c]\n\t(No symbol) [0x0x7ff7196b3f37]\n\t(No symbol) [0x0x7ff7196886af]\n\t(No symbol) [0x0x7ff7196b0dbe]\n\t(No symbol) [0x0x7ff719688443]\n\t(No symbol) [0x0x7ff719651311]\n\t(No symbol) [0x0x7ff7196520a3]\n\tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\n\tGetHandleVerifier [0x0x7ff719b28993+2903715]\n\tGetHandleVerifier [0x0x7ff719b46aed+3026941]\n\tGetHandleVerifier [0x0x7ff7198916fe+187406]\n\tGetHandleVerifier [0x0x7ff7198996ef+220159]\n\tGetHandleVerifier [0x0x7ff71987faf4+114692]\n\tGetHandleVerifier [0x0x7ff71987fca9+115129]\n\tGetHandleVerifier [0x0x7ff7198664d8+10728]\n\tBaseThreadInitThunk [0x0x7ffee1537374+20]\n\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]","time":{"start":1761063204123,"stop":1761063317228,"duration":113105}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"8e1d2f3183f1174e.json","parameterValues":[]}