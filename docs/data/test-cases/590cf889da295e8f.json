{"uid":"590cf889da295e8f","name":"test_item_selectcodesuccess","fullName":"Tests.test_material.test_materialDelUserMap.TestItemPage#test_item_selectcodesuccess","historyId":"328c25d033c09835d207ef321bdb11d2","time":{"start":1753975518660,"stop":1753975530301,"duration":11641},"status":"failed","statusMessage":"AssertionError: assert ('admin' == 'test111'\n  \n  \u001B[0m\u001B[91m- test111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ admin\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_material.test_materialDelUserMap.TestItemPage object at 0x00000203F0ED6FE0>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5513c56662a44e2c001f5e981d236c58\")>\n\n    @allure.story(\"查询物料员代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectcodesuccess(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击用户\n        item.click_button('//div[text()=\"用户\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"test111\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        # 定位第一行是否为产品A\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        itemcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert itemcode == \"test111\" and len(itemcode2) == 0\nE       AssertionError: assert ('admin' == 'test111'\nE         \nE         \u001B[0m\u001B[91m- test111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ admin\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_material\\test_materialDelUserMap.py:419: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1753975510806,"stop":1753975518656,"duration":7850},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"setup","time":{"start":1753975518656,"stop":1753975518659,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('admin' == 'test111'\n  \n  \u001B[0m\u001B[91m- test111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ admin\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_material.test_materialDelUserMap.TestItemPage object at 0x00000203F0ED6FE0>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5513c56662a44e2c001f5e981d236c58\")>\n\n    @allure.story(\"查询物料员代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectcodesuccess(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击用户\n        item.click_button('//div[text()=\"用户\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"test111\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        # 定位第一行是否为产品A\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        itemcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert itemcode == \"test111\" and len(itemcode2) == 0\nE       AssertionError: assert ('admin' == 'test111'\nE         \nE         \u001B[0m\u001B[91m- test111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ admin\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_material\\test_materialDelUserMap.py:419: AssertionError","steps":[],"attachments":[{"uid":"c6bc1bc39c83409f","name":"test_item_selectcodesuccess_failure","source":"c6bc1bc39c83409f.png","type":"image/png","size":82625},{"uid":"eb874e911a759073","name":"test_item_selectcodesuccess_source","source":"eb874e911a759073.html","type":"text/html","size":1233666},{"uid":"c0dcb558ec5ffba1","name":"log","source":"c0dcb558ec5ffba1.txt","type":"text/plain","size":3167}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_item::0","time":{"start":1753975530458,"stop":1753975532589,"duration":2131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"story","value":"查询物料员代码成功"},{"name":"feature","value":"用户与物料员测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialDelUserMap"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"62740-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialDelUserMap"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"383ac001ccbb77a2","status":"failed","statusDetails":"AssertionError: assert ('admin' == 'test111'\n  \n  \u001B[0m\u001B[91m- test111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ admin\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","time":{"start":1753975496802,"stop":1753975508458,"duration":11656}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"590cf889da295e8f.json","parameterValues":[]}