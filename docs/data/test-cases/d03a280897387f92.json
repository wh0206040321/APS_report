{"uid":"d03a280897387f92","name":"test_apps_selectsuccess2","fullName":"Tests.test_system.test_apps.TestSAppsPage#test_apps_selectsuccess2","historyId":"d2eff80806355bf24acdbfdd9b997c01","time":{"start":1761256355687,"stop":1761256382881,"duration":27194},"status":"failed","statusMessage":"AssertionError: assert (False)\n +  where False = all(<generator object TestSAppsPage.test_apps_selectsuccess2.<locals>.<genexpr> at 0x000001FC1AEF1C40>)","statusTrace":"self = <test_system.test_apps.TestSAppsPage object at 0x000001FC193E2800>, login_to_apps = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f46be7b0cb3d9add42a8763cd90b1014\")>\n\n    @allure.story(\"查询应用名称包含物料并且排序>3\")\n    # @pytest.mark.run(order=1)\n    def test_apps_selectsuccess2(self, login_to_apps):\n        driver = login_to_apps  # WebDriver 实例\n        apps = AppsPage(driver)  # 用 driver 初始化 ExpressionPage\n    \n        name = \"物料\"\n        num = 3\n        # 点击查询\n        apps.click_all_button(\"查询\")\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料名称\n        apps.click_button('//div[text()=\"应用名称\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        apps.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        apps.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        apps.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n    \n        # 点击（\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        apps.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        actions.double_click(double_click).perform()\n        # 定义and元素的XPath\n        and_xpath = '//div[text()=\"and\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击and元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, and_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            and_found = False\n    \n            while attempt < max_attempts and not and_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找and元素\n                    and_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, and_xpath))\n                    )\n                    and_element.click()\n                    and_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not and_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'and'元素\")\n    \n        # 点击（\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        apps.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击物料优先度\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        apps.click_button('//div[text()=\"排序\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        apps.click_button('//div[text()=\">\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        apps.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            num,\n        )\n        # 点击（\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        apps.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        apps.click_button(\n            '(//div[@class=\"demo-drawer-footer\"])[3]/button[2]'\n        )\n        sleep(2)\n        eles1 = apps.loop_judgment('(//table[@class=\"vxe-table--body\"])[2]//tr/td[8]')\n        eles2 = apps.loop_judgment('(//table[@class=\"vxe-table--body\"])[2]//tr/td[3]')\n        assert len(eles1) > 0 and len(eles2) > 0\n>       assert all(int(ele) > num for ele in eles1) and all(name in ele for ele in eles2)\nE       assert (False)\nE        +  where False = all(<generator object TestSAppsPage.test_apps_selectsuccess2.<locals>.<genexpr> at 0x000001FC1AEF1C40>)\n\nTests\\test_system\\test_apps.py:666: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_apps","time":{"start":1761256335711,"stop":1761256355685,"duration":19974},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False)\n +  where False = all(<generator object TestSAppsPage.test_apps_selectsuccess2.<locals>.<genexpr> at 0x000001FC1AEF1C40>)","statusTrace":"self = <test_system.test_apps.TestSAppsPage object at 0x000001FC193E2800>, login_to_apps = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f46be7b0cb3d9add42a8763cd90b1014\")>\n\n    @allure.story(\"查询应用名称包含物料并且排序>3\")\n    # @pytest.mark.run(order=1)\n    def test_apps_selectsuccess2(self, login_to_apps):\n        driver = login_to_apps  # WebDriver 实例\n        apps = AppsPage(driver)  # 用 driver 初始化 ExpressionPage\n    \n        name = \"物料\"\n        num = 3\n        # 点击查询\n        apps.click_all_button(\"查询\")\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料名称\n        apps.click_button('//div[text()=\"应用名称\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        apps.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        apps.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        apps.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            name,\n        )\n    \n        # 点击（\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        apps.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        actions.double_click(double_click).perform()\n        # 定义and元素的XPath\n        and_xpath = '//div[text()=\"and\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击and元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, and_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            and_found = False\n    \n            while attempt < max_attempts and not and_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找and元素\n                    and_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, and_xpath))\n                    )\n                    and_element.click()\n                    and_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not and_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'and'元素\")\n    \n        # 点击（\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        apps.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击物料优先度\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        apps.click_button('//div[text()=\"排序\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        apps.click_button('//div[text()=\">\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        apps.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            num,\n        )\n        # 点击（\n        apps.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        apps.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        apps.click_button(\n            '(//div[@class=\"demo-drawer-footer\"])[3]/button[2]'\n        )\n        sleep(2)\n        eles1 = apps.loop_judgment('(//table[@class=\"vxe-table--body\"])[2]//tr/td[8]')\n        eles2 = apps.loop_judgment('(//table[@class=\"vxe-table--body\"])[2]//tr/td[3]')\n        assert len(eles1) > 0 and len(eles2) > 0\n>       assert all(int(ele) > num for ele in eles1) and all(name in ele for ele in eles2)\nE       assert (False)\nE        +  where False = all(<generator object TestSAppsPage.test_apps_selectsuccess2.<locals>.<genexpr> at 0x000001FC1AEF1C40>)\n\nTests\\test_system\\test_apps.py:666: AssertionError","steps":[],"attachments":[{"uid":"b3464a43eeddb7e0","name":"test_apps_selectsuccess2_failure","source":"b3464a43eeddb7e0.png","type":"image/png","size":167802},{"uid":"eca8968b61fc12eb","name":"test_apps_selectsuccess2_source","source":"eca8968b61fc12eb.html","type":"text/html","size":1400103},{"uid":"a0e08d429123f8a5","name":"log","source":"a0e08d429123f8a5.txt","type":"text/plain","size":6685}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_apps::0","time":{"start":1761256383731,"stop":1761256386324,"duration":2593},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"应用管理页用例"},{"name":"story","value":"查询应用名称包含物料并且排序>3"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_apps"},{"name":"subSuite","value":"TestSAppsPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21764-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_apps"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6cd37bca912eec3c","status":"failed","statusDetails":"AssertionError: assert (False)\n +  where False = all(<generator object TestSAppsPage.test_apps_selectsuccess2.<locals>.<genexpr> at 0x000001FC1AD29C40>)","time":{"start":1761256305221,"stop":1761256332417,"duration":27196}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"d03a280897387f92.json","parameterValues":[]}