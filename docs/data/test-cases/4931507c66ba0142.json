{"uid":"4931507c66ba0142","name":"test_changespec_addfail","fullName":"Tests.test_items.test_changespec.TestChangeSpecPage#test_changespec_addfail","historyId":"499d23cf86440106a9e74b9967180657","time":{"start":1756819970097,"stop":1756819976189,"duration":6092},"status":"failed","statusMessage":"AssertionError: 预期边框颜色为rgb(237, 64, 20), 但得到rgb(220, 222, 226)\nassert 'rgb(220, 222, 226)' == 'rgb(237, 64, 20)'\n  \n  \u001B[0m\u001B[91m- rgb(237, 64, 20)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ rgb(220, 222, 226)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_changespec.TestChangeSpecPage object at 0x000001E265FD3400>\nlogin_to_changespec = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7ffc740d63fe37691b8bce39838073a9\")>\n\n    @allure.story(\"添加生产特征切换信息 不填写数据点击确认 不允许提交，添加新布局，\")\n    # @pytest.mark.run(order=1)\n    def test_changespec_addfail(self, login_to_changespec):\n        driver = login_to_changespec  # WebDriver 实例\n        change = ChangeR(driver)  # 用 driver 初始化 ChangeR\n    \n        layout = \"测试布局A\"\n        change.add_layout(layout)\n        # 获取布局名称的文本元素\n        name = change.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        ).text\n    \n        change.click_add_button()\n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n        # 资源\n        inputresource_box = change.get_find_element_xpath(\n            '(//label[text()=\"资源\"])[1]/parent::div//input'\n        )\n        # 前生产特征\n        inputitem_box1 = change.get_find_element_xpath(\n            '(//label[text()=\"前生产特征\"])[1]/parent::div//input'\n        )\n        # 后资源\n        inputitem_box2 = change.get_find_element_xpath(\n            '(//label[text()=\"后生产特征\"])[1]/parent::div//input'\n        )\n    \n        # 断言边框颜色是否为红色（可以根据实际RGB值调整）\n        sleep(1)\n        borderresource_color = inputresource_box.value_of_css_property(\"border-color\")\n        borderitem_color1 = inputitem_box1.value_of_css_property(\"border-color\")\n        borderitem_color2 = inputitem_box2.value_of_css_property(\"border-color\")\n        expected_color = \"rgb(237, 64, 20)\"  # 红色的 rgb 值\n>       assert (\n            borderresource_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{borderresource_color}\"\nE       AssertionError: 预期边框颜色为rgb(237, 64, 20), 但得到rgb(220, 222, 226)\nE       assert 'rgb(220, 222, 226)' == 'rgb(237, 64, 20)'\nE         \nE         \u001B[0m\u001B[91m- rgb(237, 64, 20)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ rgb(220, 222, 226)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_changespec.py:96: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_changespec","time":{"start":1756819961736,"stop":1756819970096,"duration":8360},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期边框颜色为rgb(237, 64, 20), 但得到rgb(220, 222, 226)\nassert 'rgb(220, 222, 226)' == 'rgb(237, 64, 20)'\n  \n  \u001B[0m\u001B[91m- rgb(237, 64, 20)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ rgb(220, 222, 226)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_changespec.TestChangeSpecPage object at 0x000001E265FD3400>\nlogin_to_changespec = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7ffc740d63fe37691b8bce39838073a9\")>\n\n    @allure.story(\"添加生产特征切换信息 不填写数据点击确认 不允许提交，添加新布局，\")\n    # @pytest.mark.run(order=1)\n    def test_changespec_addfail(self, login_to_changespec):\n        driver = login_to_changespec  # WebDriver 实例\n        change = ChangeR(driver)  # 用 driver 初始化 ChangeR\n    \n        layout = \"测试布局A\"\n        change.add_layout(layout)\n        # 获取布局名称的文本元素\n        name = change.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        ).text\n    \n        change.click_add_button()\n        change.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n        # 资源\n        inputresource_box = change.get_find_element_xpath(\n            '(//label[text()=\"资源\"])[1]/parent::div//input'\n        )\n        # 前生产特征\n        inputitem_box1 = change.get_find_element_xpath(\n            '(//label[text()=\"前生产特征\"])[1]/parent::div//input'\n        )\n        # 后资源\n        inputitem_box2 = change.get_find_element_xpath(\n            '(//label[text()=\"后生产特征\"])[1]/parent::div//input'\n        )\n    \n        # 断言边框颜色是否为红色（可以根据实际RGB值调整）\n        sleep(1)\n        borderresource_color = inputresource_box.value_of_css_property(\"border-color\")\n        borderitem_color1 = inputitem_box1.value_of_css_property(\"border-color\")\n        borderitem_color2 = inputitem_box2.value_of_css_property(\"border-color\")\n        expected_color = \"rgb(237, 64, 20)\"  # 红色的 rgb 值\n>       assert (\n            borderresource_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{borderresource_color}\"\nE       AssertionError: 预期边框颜色为rgb(237, 64, 20), 但得到rgb(220, 222, 226)\nE       assert 'rgb(220, 222, 226)' == 'rgb(237, 64, 20)'\nE         \nE         \u001B[0m\u001B[91m- rgb(237, 64, 20)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ rgb(220, 222, 226)\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_changespec.py:96: AssertionError","steps":[],"attachments":[{"uid":"1584e7d3e68cb6b3","name":"test_changespec_addfail_failure","source":"1584e7d3e68cb6b3.png","type":"image/png","size":276934},{"uid":"170198b49a4c30c1","name":"test_changespec_addfail_source","source":"170198b49a4c30c1.html","type":"text/html","size":863899},{"uid":"b358b5daa0b938cd","name":"test_changespec_addfail_failure","source":"b358b5daa0b938cd.png","type":"image/png","size":103622},{"uid":"651fd160face86a8","name":"test_changespec_addfail_source","source":"651fd160face86a8.html","type":"text/html","size":1324959},{"uid":"b6175e05738f87dd","name":"log","source":"b6175e05738f87dd.txt","type":"text/plain","size":2473}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":5},"afterStages":[{"name":"login_to_changespec::0","time":{"start":1756819976623,"stop":1756819978829,"duration":2206},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"生产特征切换表测试用例"},{"name":"story","value":"添加生产特征切换信息 不填写数据点击确认 不允许提交，添加新布局，"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_changespec"},{"name":"subSuite","value":"TestChangeSpecPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"31324-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_changespec"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"4931507c66ba0142.json","parameterValues":[]}