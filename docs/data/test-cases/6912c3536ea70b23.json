{"uid":"6912c3536ea70b23","name":"test_affairs_process_update4","fullName":"Tests.test_system.test_affairs.TestAffairsPage#test_affairs_process_update4","historyId":"1bea7198c26609aaf903e319adeb46dd","time":{"start":1761068336419,"stop":1761068347362,"duration":10943},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"测试流程8\"]]]/td[last()]//span[text()=\"编辑\"]","statusTrace":"self = <Pages.systemPage.affairs_page.AffairsPage object at 0x00000173A6FB4E80>, by_or_element = 'xpath', value = '//table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"测试流程8\"]]]/td[last()]//span[text()=\"编辑\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"60dc5d0c2bfaccb2392996084ebabcbd\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000173A736B640>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196602ea]\nE       \t(No symbol) [0x0x7ff71966059c]\nE       \t(No symbol) [0x0x7ff7196b3f37]\nE       \t(No symbol) [0x0x7ff7196886af]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_affairs.TestAffairsPage object at 0x00000173A66B7B50>, login_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"60dc5d0c2bfaccb2392996084ebabcbd\")>\n\n    @allure.story(\"我的流程-修改事务模版重复\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_process_update4(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        name = \"测试流程8\"\n        aff = \"添加全部模版成功\"\n        affairs.click_process()\n>       affairs.click_process_update(name)\n\nTests\\test_system\\test_affairs.py:1132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\affairs_page.py:169: in click_process_update\n    self.click_button(f'//table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"{name}\"]]]/td[last()]//span[text()=\"编辑\"]')\nPages\\systemPage\\affairs_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.affairs_page.AffairsPage object at 0x00000173A6FB4E80>, by_or_element = 'xpath', value = '//table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"测试流程8\"]]]/td[last()]//span[text()=\"编辑\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"测试流程8\"]]]/td[last()]//span[text()=\"编辑\"]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_affairs","time":{"start":1761068317959,"stop":1761068336418,"duration":18459},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"测试流程8\"]]]/td[last()]//span[text()=\"编辑\"]","statusTrace":"self = <Pages.systemPage.affairs_page.AffairsPage object at 0x00000173A6FB4E80>, by_or_element = 'xpath', value = '//table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"测试流程8\"]]]/td[last()]//span[text()=\"编辑\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"60dc5d0c2bfaccb2392996084ebabcbd\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000173A736B640>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196602ea]\nE       \t(No symbol) [0x0x7ff71966059c]\nE       \t(No symbol) [0x0x7ff7196b3f37]\nE       \t(No symbol) [0x0x7ff7196886af]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_affairs.TestAffairsPage object at 0x00000173A66B7B50>, login_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"60dc5d0c2bfaccb2392996084ebabcbd\")>\n\n    @allure.story(\"我的流程-修改事务模版重复\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_process_update4(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        name = \"测试流程8\"\n        aff = \"添加全部模版成功\"\n        affairs.click_process()\n>       affairs.click_process_update(name)\n\nTests\\test_system\\test_affairs.py:1132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\affairs_page.py:169: in click_process_update\n    self.click_button(f'//table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"{name}\"]]]/td[last()]//span[text()=\"编辑\"]')\nPages\\systemPage\\affairs_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.affairs_page.AffairsPage object at 0x00000173A6FB4E80>, by_or_element = 'xpath', value = '//table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"测试流程8\"]]]/td[last()]//span[text()=\"编辑\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"测试流程8\"]]]/td[last()]//span[text()=\"编辑\"]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"e04f4d1c5efe059d","name":"test_affairs_process_update4_failure","source":"e04f4d1c5efe059d.png","type":"image/png","size":109330},{"uid":"f0c1310c537fe915","name":"test_affairs_process_update4_source","source":"f0c1310c537fe915.html","type":"text/html","size":1134084},{"uid":"2893571a24640e08","name":"log","source":"2893571a24640e08.txt","type":"text/plain","size":2527}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_affairs::0","time":{"start":1761068348039,"stop":1761068350454,"duration":2415},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"我的流程-修改事务模版重复"},{"name":"feature","value":"事务管理页用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_affairs"},{"name":"subSuite","value":"TestAffairsPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_affairs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"63a055166a3eeaec","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@class=\"el-table__body\"]//tr[td[2][div[text()=\"测试流程8\"]]]/td[last()]//span[text()=\"编辑\"]","time":{"start":1761068303753,"stop":1761068314676,"duration":10923}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"6912c3536ea70b23.json","parameterValues":[]}