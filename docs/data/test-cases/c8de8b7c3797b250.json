{"uid":"c8de8b7c3797b250","name":"test_home_default_boot4","fullName":"Tests.test_system.test_home.TestHomePage#test_home_default_boot4","historyId":"025305a0d0cf5f8a9aca67a42fa588a1","time":{"start":1754323168506,"stop":1754323184449,"duration":15943},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"d-flex m-b-7 toolBar\"]//button)[1]","statusTrace":"self = <Pages.systemPage.homepage_page.HomePage object at 0x0000012C8F2C0550>, by_or_element = 'xpath', value = '(//div[@class=\"d-flex m-b-7 toolBar\"]//button)[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eb5a38160e8ac4aab4244353419a06ad\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000012C90C28F70>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_home.TestHomePage object at 0x0000012C8ED3C280>, login_to_home = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb5a38160e8ac4aab4244353419a06ad\")>\n\n    @allure.story(\"主页模版中没有改模版不会显示该模版\")\n    # @pytest.mark.run(order=1)\n    def test_home_default_boot4(self, login_to_home):\n        driver = login_to_home  # WebDriver 实例\n        home = HomePage(driver)  # 用 driver 初始化 HomePage\n        home.click_template()\n        sty = home.get_find_element_xpath(\n            '//div[span[text()=\" 测试模版2confirm \"]]/span[text()=\" 加载模板 \"]').get_attribute(\"style\")\n        if sty != \"display: none;\":\n            home.click_button('//div[span[text()=\" 测试模版2confirm \"]]/span[text()=\" 加载模板 \"]')\n            home.click_button('//button[.//span[text()=\"切换不保存\"]]')\n            home.wait_for_loading_to_disappear()\n        num = home.count_div_elements()\n>       home.click_save_button()\n\nTests\\test_system\\test_home.py:413: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\homepage_page.py:70: in click_save_button\n    self.click_button('(//div[@class=\"d-flex m-b-7 toolBar\"]//button)[1]')\nPages\\systemPage\\homepage_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.homepage_page.HomePage object at 0x0000012C8F2C0550>, by_or_element = 'xpath', value = '(//div[@class=\"d-flex m-b-7 toolBar\"]//button)[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"d-flex m-b-7 toolBar\"]//button)[1]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_home","time":{"start":1754323160769,"stop":1754323168505,"duration":7736},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"d-flex m-b-7 toolBar\"]//button)[1]","statusTrace":"self = <Pages.systemPage.homepage_page.HomePage object at 0x0000012C8F2C0550>, by_or_element = 'xpath', value = '(//div[@class=\"d-flex m-b-7 toolBar\"]//button)[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eb5a38160e8ac4aab4244353419a06ad\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000012C90C28F70>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_home.TestHomePage object at 0x0000012C8ED3C280>, login_to_home = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eb5a38160e8ac4aab4244353419a06ad\")>\n\n    @allure.story(\"主页模版中没有改模版不会显示该模版\")\n    # @pytest.mark.run(order=1)\n    def test_home_default_boot4(self, login_to_home):\n        driver = login_to_home  # WebDriver 实例\n        home = HomePage(driver)  # 用 driver 初始化 HomePage\n        home.click_template()\n        sty = home.get_find_element_xpath(\n            '//div[span[text()=\" 测试模版2confirm \"]]/span[text()=\" 加载模板 \"]').get_attribute(\"style\")\n        if sty != \"display: none;\":\n            home.click_button('//div[span[text()=\" 测试模版2confirm \"]]/span[text()=\" 加载模板 \"]')\n            home.click_button('//button[.//span[text()=\"切换不保存\"]]')\n            home.wait_for_loading_to_disappear()\n        num = home.count_div_elements()\n>       home.click_save_button()\n\nTests\\test_system\\test_home.py:413: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\homepage_page.py:70: in click_save_button\n    self.click_button('(//div[@class=\"d-flex m-b-7 toolBar\"]//button)[1]')\nPages\\systemPage\\homepage_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.homepage_page.HomePage object at 0x0000012C8F2C0550>, by_or_element = 'xpath', value = '(//div[@class=\"d-flex m-b-7 toolBar\"]//button)[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//div[@class=\"d-flex m-b-7 toolBar\"]//button)[1]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"68b83e43f28d571b","name":"test_home_default_boot4_failure","source":"68b83e43f28d571b.png","type":"image/png","size":74751},{"uid":"23ac1ffd611a4b22","name":"test_home_default_boot4_source","source":"23ac1ffd611a4b22.html","type":"text/html","size":1696077},{"uid":"37b858bab796a9b1","name":"log","source":"37b858bab796a9b1.txt","type":"text/plain","size":1652}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"login_to_home::0","time":{"start":1754323184629,"stop":1754323186792,"duration":2163},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"主页设置页用例"},{"name":"story","value":"主页模版中没有改模版不会显示该模版"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_home"},{"name":"subSuite","value":"TestHomePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_home"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"c8de8b7c3797b250.json","parameterValues":[]}