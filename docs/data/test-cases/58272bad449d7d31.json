{"uid":"58272bad449d7d31","name":"test_personal_loginsuccess","fullName":"Tests.test_item.test_personal.TestPersonalPage#test_personal_loginsuccess","historyId":"aa26c1849332b9d3f060b74ea880a42f","time":{"start":1752764692462,"stop":1752764696527,"duration":4065},"status":"failed","statusMessage":"AssertionError: assert '' == '用户名或密码无效'\n  \n  \u001B[0m\u001B[91m- 用户名或密码无效\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_item.test_personal.TestPersonalPage object at 0x000001FF37859DE0>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf52595c9b2a4f3215620eee7e1a7b42\")>\n\n    @allure.story(\"注销成功，使用旧密码登录，登录失败\")\n    # @pytest.mark.run(order=1)\n    def test_personal_loginsuccess(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        personal.click_button('//div[@class=\"flex-alignItems-center\"]')\n        personal.click_button('//div[text()=\" 注销 \"]')\n        personal.enter_username(f\"{DateDriver().username}\")  # 输入用户名\n        personal.enter_password(f\"{DateDriver().password}\")  # 输入密码\n        personal.click_button('(//input[@type=\"text\"])[2]')  # 点击下拉框\n        personal.click_button(f'//li[text()=\"{DateDriver().planning}\"]')  # 点击计划单元\n        personal.click_button(\n            '//button[@type=\"button\" and @class=\"ivu-btn ivu-btn-primary ivu-btn-long ivu-btn-large\"]'\n        )  # 点击登录按钮\n        element = personal.get_find_element('//div[text()=\" 用户名或密码无效 \"]')\n>       assert element.text == \"用户名或密码无效\"\nE       AssertionError: assert '' == '用户名或密码无效'\nE         \nE         \u001B[0m\u001B[91m- 用户名或密码无效\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_item\\test_personal.py:207: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_personal","time":{"start":1752764685321,"stop":1752764692461,"duration":7140},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '' == '用户名或密码无效'\n  \n  \u001B[0m\u001B[91m- 用户名或密码无效\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_item.test_personal.TestPersonalPage object at 0x000001FF37859DE0>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf52595c9b2a4f3215620eee7e1a7b42\")>\n\n    @allure.story(\"注销成功，使用旧密码登录，登录失败\")\n    # @pytest.mark.run(order=1)\n    def test_personal_loginsuccess(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        personal.click_button('//div[@class=\"flex-alignItems-center\"]')\n        personal.click_button('//div[text()=\" 注销 \"]')\n        personal.enter_username(f\"{DateDriver().username}\")  # 输入用户名\n        personal.enter_password(f\"{DateDriver().password}\")  # 输入密码\n        personal.click_button('(//input[@type=\"text\"])[2]')  # 点击下拉框\n        personal.click_button(f'//li[text()=\"{DateDriver().planning}\"]')  # 点击计划单元\n        personal.click_button(\n            '//button[@type=\"button\" and @class=\"ivu-btn ivu-btn-primary ivu-btn-long ivu-btn-large\"]'\n        )  # 点击登录按钮\n        element = personal.get_find_element('//div[text()=\" 用户名或密码无效 \"]')\n>       assert element.text == \"用户名或密码无效\"\nE       AssertionError: assert '' == '用户名或密码无效'\nE         \nE         \u001B[0m\u001B[91m- 用户名或密码无效\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_item\\test_personal.py:207: AssertionError","steps":[],"attachments":[{"uid":"e57e4d08a71f2ddb","name":"test_personal_loginsuccess_failure","source":"e57e4d08a71f2ddb.png","type":"image/png","size":275487},{"uid":"5cb46a9815208283","name":"test_personal_loginsuccess_source","source":"5cb46a9815208283.html","type":"text/html","size":846807},{"uid":"5dfd9e62e75b55c2","name":"log","source":"5dfd9e62e75b55c2.txt","type":"text/plain","size":2279}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_personal::0","time":{"start":1752764696797,"stop":1752764698928,"duration":2131},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"个人设置测试用例"},{"name":"story","value":"注销成功，使用旧密码登录，登录失败"},{"name":"parentSuite","value":"Tests.test_item"},{"name":"suite","value":"test_personal"},{"name":"subSuite","value":"TestPersonalPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"11236-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_item.test_personal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bd6fcca74ec74e25","status":"failed","statusDetails":"AssertionError: assert '' == '用户名或密码无效'\n  \n  \u001B[0m\u001B[91m- 用户名或密码无效\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","time":{"start":1752764677449,"stop":1752764682899,"duration":5450}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"58272bad449d7d31.json","parameterValues":[]}