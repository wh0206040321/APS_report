{"uid":"de0da4e8951c85de","name":"test_setting_label_addsuccess","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_label_addsuccess","historyId":"7743bc1591b5fd2a298fc9b25196bad7","time":{"start":1755098830752,"stop":1755098834576,"duration":3824},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.itemsPage.setting_page.SettingPage object at 0x0000023BD41757E0>.has_fail_message","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000023BD3D47160>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b27b63ea0b6de1bdeef3a810b341acaa\")>\n\n    @allure.story(\"标签列表添加名称成功\")\n    # @pytest.mark.run(order=1)\n    def test_setting_label_addsuccess(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        setting.add_lable(\"标签1\")\n        setting.click_button('(//button[@class=\"ivu-btn ivu-btn-primary\"])[last()]')\n        ele = driver.find_elements(By.XPATH, '//div[@class=\"labelItem\"]')\n        sleep(1)\n        assert any(\"标签1\" in element.text for element in ele), \"没有找到包含'标签1'的标签项\"\n>       assert not setting.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.itemsPage.setting_page.SettingPage object at 0x0000023BD41757E0>.has_fail_message\n\nTests\\test_items\\test_setting.py:1941: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1755098822229,"stop":1755098830751,"duration":8522},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.itemsPage.setting_page.SettingPage object at 0x0000023BD41757E0>.has_fail_message","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000023BD3D47160>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b27b63ea0b6de1bdeef3a810b341acaa\")>\n\n    @allure.story(\"标签列表添加名称成功\")\n    # @pytest.mark.run(order=1)\n    def test_setting_label_addsuccess(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        setting.add_lable(\"标签1\")\n        setting.click_button('(//button[@class=\"ivu-btn ivu-btn-primary\"])[last()]')\n        ele = driver.find_elements(By.XPATH, '//div[@class=\"labelItem\"]')\n        sleep(1)\n        assert any(\"标签1\" in element.text for element in ele), \"没有找到包含'标签1'的标签项\"\n>       assert not setting.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.itemsPage.setting_page.SettingPage object at 0x0000023BD41757E0>.has_fail_message\n\nTests\\test_items\\test_setting.py:1941: AssertionError","steps":[],"attachments":[{"uid":"73a0cf64ede72ce3","name":"test_setting_label_addsuccess_failure","source":"73a0cf64ede72ce3.png","type":"image/png","size":81783},{"uid":"91292b6a998878d8","name":"test_setting_label_addsuccess_source","source":"91292b6a998878d8.html","type":"text/html","size":1369249},{"uid":"448e648e1f0b5474","name":"log","source":"448e648e1f0b5474.txt","type":"text/plain","size":2991}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"login_to_setting::0","time":{"start":1755098834840,"stop":1755098837014,"duration":2174},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"标准应用设置测试用例"},{"name":"story","value":"标签列表添加名称成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e4197070cb762d04","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.itemsPage.setting_page.SettingPage object at 0x0000023BD4723B20>.has_fail_message","time":{"start":1755098815880,"stop":1755098819714,"duration":3834}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"de0da4e8951c85de.json","parameterValues":[]}