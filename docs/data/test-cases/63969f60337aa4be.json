{"uid":"63969f60337aa4be","name":"test_personal_expand1","fullName":"Tests.test_items.test_personal.TestPersonalPage#test_personal_expand1","historyId":"cdf4e6407e397b508acf680860ee4701","time":{"start":1761062302335,"stop":1761062307781,"duration":5446},"status":"failed","statusMessage":"AssertionError: before_width:256,after_width:256\nassert (256 != 256)","statusTrace":"self = <test_items.test_personal.TestPersonalPage object at 0x00000173A649A230>, login_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"624a91941f343c72ff092dc7143ef065\")>\n\n    @allure.story(\"设置菜单展开方式为悬浮\")\n    # @pytest.mark.run(order=1)\n    def test_personal_expand1(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        # 获取设置前宽度\n        before_width = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]').size['width']\n    \n        personal.go_setting_page()\n    \n        # 获取 “悬浮” 的 checkbox\n        checkbox = personal.get_find_element('//label[text()=\"悬浮\"]//input')\n    \n        # 如果已经是悬浮状态，为了保证断言逻辑成立，可以先切换为默认展开，然后再切换回悬浮\n        if checkbox.is_selected():\n            personal.click_button('//label[text()=\"展开(默认)\"]/span')\n            personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n            sleep(2)\n            before_element = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]')\n            before_width = before_element.size['width']\n            personal.go_setting_page()\n    \n        # 设置为默认展开并确认\n        personal.click_button('//label[text()=\"悬浮\"]/span')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n        sleep(2)\n        after_element = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]')\n        after_width = after_element.size['width']\n>       assert before_width != after_width and int(before_width) > int(after_width), f\"before_width:{before_width},after_width:{after_width}\"\nE       AssertionError: before_width:256,after_width:256\nE       assert (256 != 256)\n\nTests\\test_items\\test_personal.py:335: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_personal","time":{"start":1761062290494,"stop":1761062302333,"duration":11839},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: before_width:256,after_width:256\nassert (256 != 256)","statusTrace":"self = <test_items.test_personal.TestPersonalPage object at 0x00000173A649A230>, login_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"624a91941f343c72ff092dc7143ef065\")>\n\n    @allure.story(\"设置菜单展开方式为悬浮\")\n    # @pytest.mark.run(order=1)\n    def test_personal_expand1(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        # 获取设置前宽度\n        before_width = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]').size['width']\n    \n        personal.go_setting_page()\n    \n        # 获取 “悬浮” 的 checkbox\n        checkbox = personal.get_find_element('//label[text()=\"悬浮\"]//input')\n    \n        # 如果已经是悬浮状态，为了保证断言逻辑成立，可以先切换为默认展开，然后再切换回悬浮\n        if checkbox.is_selected():\n            personal.click_button('//label[text()=\"展开(默认)\"]/span')\n            personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n            sleep(2)\n            before_element = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]')\n            before_width = before_element.size['width']\n            personal.go_setting_page()\n    \n        # 设置为默认展开并确认\n        personal.click_button('//label[text()=\"悬浮\"]/span')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n        sleep(2)\n        after_element = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]')\n        after_width = after_element.size['width']\n>       assert before_width != after_width and int(before_width) > int(after_width), f\"before_width:{before_width},after_width:{after_width}\"\nE       AssertionError: before_width:256,after_width:256\nE       assert (256 != 256)\n\nTests\\test_items\\test_personal.py:335: AssertionError","steps":[],"attachments":[{"uid":"809716a855b69d48","name":"test_personal_expand1_failure","source":"809716a855b69d48.png","type":"image/png","size":88397},{"uid":"f06937698f443e63","name":"test_personal_expand1_source","source":"f06937698f443e63.html","type":"text/html","size":2927267},{"uid":"b424bfa4c07756e1","name":"log","source":"b424bfa4c07756e1.txt","type":"text/plain","size":1188}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_personal::0","time":{"start":1761062308423,"stop":1761062310738,"duration":2315},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"个人设置测试用例"},{"name":"story","value":"设置菜单展开方式为悬浮"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_personal"},{"name":"subSuite","value":"TestPersonalPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_personal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"63969f60337aa4be.json","parameterValues":[]}