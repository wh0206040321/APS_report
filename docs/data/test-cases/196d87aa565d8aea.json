{"uid":"196d87aa565d8aea","name":"test_master_edititem","fullName":"Tests.test_items.test_master.TestMasterPage#test_master_edititem","historyId":"e1aea05aeddd39ce79bcd9a86cf7e294","time":{"start":1753103327714,"stop":1753103339024,"duration":11310},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i","statusTrace":"self = <Pages.itemsPage.master_page.MasterPage object at 0x0000024D1F822920>, by_or_element = 'xpath'\nvalue = '(//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b3b71ad8ab31913bd55f23b047a77ebc\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000024D1FFCFBE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff77a1f6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff77a1f6fc0+79056]\nE       \t(No symbol) [0x0x7ff779f89dda]\nE       \t(No symbol) [0x0x7ff779fe02ea]\nE       \t(No symbol) [0x0x7ff779fe059c]\nE       \t(No symbol) [0x0x7ff77a033f37]\nE       \t(No symbol) [0x0x7ff77a0086af]\nE       \t(No symbol) [0x0x7ff77a030dbe]\nE       \t(No symbol) [0x0x7ff77a008443]\nE       \t(No symbol) [0x0x7ff779fd1311]\nE       \t(No symbol) [0x0x7ff779fd20a3]\nE       \tGetHandleVerifier [0x0x7ff77a4ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff77a4a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff77a4c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff77a2116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff77a2196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff77a1ffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff77a1ffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff77a1e64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff79487374+20]\nE       \tRtlUserThreadStart [0x0x7fff7967cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_master.TestMasterPage object at 0x0000024D1FA08C10>\nlogin_to_master = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b3b71ad8ab31913bd55f23b047a77ebc\")>\n\n    @allure.story(\"修改工艺产能输入物料\")\n    # @pytest.mark.run(order=1)\n    def test_master_edititem(self, login_to_master):\n        driver = login_to_master  # WebDriver 实例\n        master = MasterPage(driver)  # 用 driver 初始化 MasterPage\n    \n        # 选中物料代码点击编辑\n        master.click_button('//tr[.//span[text()=\"2339\"]]/td[2]//span[text()=\"2339\"]')\n        master.click_edi_button()\n    \n        # 获取物料名称\n>       master.click_button(\n            '(//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i'\n        )\n\nTests\\test_items\\test_master.py:1100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\master_page.py:43: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.master_page.MasterPage object at 0x0000024D1F822920>, by_or_element = 'xpath'\nvalue = '(//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i\n\nPages\\base_page.py:48: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_master","time":{"start":1753103319856,"stop":1753103327713,"duration":7857},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i","statusTrace":"self = <Pages.itemsPage.master_page.MasterPage object at 0x0000024D1F822920>, by_or_element = 'xpath'\nvalue = '(//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b3b71ad8ab31913bd55f23b047a77ebc\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000024D1FFCFBE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff77a1f6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff77a1f6fc0+79056]\nE       \t(No symbol) [0x0x7ff779f89dda]\nE       \t(No symbol) [0x0x7ff779fe02ea]\nE       \t(No symbol) [0x0x7ff779fe059c]\nE       \t(No symbol) [0x0x7ff77a033f37]\nE       \t(No symbol) [0x0x7ff77a0086af]\nE       \t(No symbol) [0x0x7ff77a030dbe]\nE       \t(No symbol) [0x0x7ff77a008443]\nE       \t(No symbol) [0x0x7ff779fd1311]\nE       \t(No symbol) [0x0x7ff779fd20a3]\nE       \tGetHandleVerifier [0x0x7ff77a4ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff77a4a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff77a4c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff77a2116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff77a2196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff77a1ffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff77a1ffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff77a1e64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff79487374+20]\nE       \tRtlUserThreadStart [0x0x7fff7967cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_master.TestMasterPage object at 0x0000024D1FA08C10>\nlogin_to_master = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b3b71ad8ab31913bd55f23b047a77ebc\")>\n\n    @allure.story(\"修改工艺产能输入物料\")\n    # @pytest.mark.run(order=1)\n    def test_master_edititem(self, login_to_master):\n        driver = login_to_master  # WebDriver 实例\n        master = MasterPage(driver)  # 用 driver 初始化 MasterPage\n    \n        # 选中物料代码点击编辑\n        master.click_button('//tr[.//span[text()=\"2339\"]]/td[2]//span[text()=\"2339\"]')\n        master.click_edi_button()\n    \n        # 获取物料名称\n>       master.click_button(\n            '(//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i'\n        )\n\nTests\\test_items\\test_master.py:1100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\master_page.py:43: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.master_page.MasterPage object at 0x0000024D1F822920>, by_or_element = 'xpath'\nvalue = '(//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//table[.//div[@class=\"vxe-input type--number size--mini\"]])[2]//tr[1]/td[2]//i\n\nPages\\base_page.py:48: TimeoutException","steps":[],"attachments":[{"uid":"f59fb67a801f7e1b","name":"test_click_timeout","source":"f59fb67a801f7e1b.png","type":"image/png","size":131724},{"uid":"adecd3fbccb7682c","name":"log","source":"adecd3fbccb7682c.txt","type":"text/plain","size":1502}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"login_to_master::0","time":{"start":1753103339052,"stop":1753103341184,"duration":2132},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"story","value":"修改工艺产能输入物料"},{"name":"feature","value":"工艺产能表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_master"},{"name":"subSuite","value":"TestMasterPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26464-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_master"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"196d87aa565d8aea.json","parameterValues":[]}