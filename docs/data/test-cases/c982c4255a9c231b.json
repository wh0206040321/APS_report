{"uid":"c982c4255a9c231b","name":"test_item_addall","fullName":"Tests.test_items.test_item.TestItemPage#test_item_addall","historyId":"75c5e7035234a10dea40dd1b814d2f7f","time":{"start":1760358246832,"stop":1760358377489,"duration":130657},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//i[@class=\"icon-wrapper el-tooltip font21 line-height-15 m-r-12\"])[1]","statusTrace":"self = <Pages.itemsPage.adds_page.AddsPages object at 0x00000216A27582E0>, by_or_element = 'xpath', value = '(//i[@class=\"icon-wrapper el-tooltip font21 line-height-15 m-r-12\"])[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2a10feaebcf9faad114beb7f7de8a1a6\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000216A2A34CA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff71bec6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff71bec6fc0+79056]\nE       \t(No symbol) [0x0x7ff71bc59dda]\nE       \t(No symbol) [0x0x7ff71bcb02ea]\nE       \t(No symbol) [0x0x7ff71bcb059c]\nE       \t(No symbol) [0x0x7ff71bd03f37]\nE       \t(No symbol) [0x0x7ff71bcd86af]\nE       \t(No symbol) [0x0x7ff71bd00dbe]\nE       \t(No symbol) [0x0x7ff71bcd8443]\nE       \t(No symbol) [0x0x7ff71bca1311]\nE       \t(No symbol) [0x0x7ff71bca20a3]\nE       \tGetHandleVerifier [0x0x7ff71c17e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff71c178993+2903715]\nE       \tGetHandleVerifier [0x0x7ff71c196aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff71bee16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff71bee96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71becfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71becfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff71beb64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe68f47374+20]\nE       \tRtlUserThreadStart [0x0x7ffe691dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_item.TestItemPage object at 0x00000216A20D6F20>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a10feaebcf9faad114beb7f7de8a1a6\")>\n\n    @allure.story(\"输入全部数据，添加保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_addall(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n        adds = AddsPages(driver)\n        input_value = '11测试全部数据'\n        item.click_add_button()\n        custom_xpath_list = [\n            f'//label[text()=\"自定义字符{i}\"]/following-sibling::div//input'\n            for i in range(1, 21)\n        ]\n        text_list = [\n            '//label[text()=\"物料代码\"]/following-sibling::div//input',\n            '//label[text()=\"物料名称\"]/following-sibling::div//input',\n            '//label[text()=\"工作分割比率\"]/following-sibling::div//input',\n            '//label[text()=\"备注\"]/following-sibling::div//input',\n        ]\n        text_list.extend(custom_xpath_list)\n        adds.batch_modify_input(text_list, input_value)\n    \n    \n        value_bos = '//div[@class=\"vxe-modal--body\"]//table[@class=\"vxe-table--body\"]//tr[1]/td[3]'\n        spe_xpath_list = [\n            f'//label[text()=\"生产特征{i}\"]/following-sibling::div//i'\n            for i in range(1, 11)\n        ]\n        box_list = [\n            '//label[text()=\"物料组代码\"]/following-sibling::div//i',\n            '//label[text()=\"BASE物料\"]/following-sibling::div//i',\n            '//label[text()=\"资源\"]/following-sibling::div//i',\n            '//label[text()=\"物料切换对象\"]/following-sibling::div//i',\n        ]\n        box_list.extend(spe_xpath_list)\n        adds.batch_modify_dialog_box(box_list, value_bos)\n    \n    \n        code_value = '//span[text()=\"AdvanceAlongResourceWorkingTime\"]'\n        code_list = [\n            '//label[text()=\"关联条件\"]/following-sibling::div//i',\n            '//label[text()=\"关联时工作输出指令排序表达式\"]/following-sibling::div//i',\n            '//label[text()=\"关联时工作输入指令排序表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存MIN2日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存MIN3日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"目标库存MIN日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存有效期限\"]/following-sibling::div//i',\n        ]\n        adds.batch_modify_code_box(code_list, code_value)\n    \n        select_list = [\n            {\"select\": '//label[text()=\"物料种类\"]/following-sibling::div//i', \"value\": '//li[text()=\"原材料\"]'},\n            {\"select\": '//label[text()=\"自动补充标志\"]/following-sibling::div//i', \"value\": '//li[text()=\"是(库存+1对1制造)\"]'},\n            {\"select\": '//label[text()=\"备料方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"采购优先\"]'},\n            {\"select\": '//label[text()=\"显示颜色\"]/following-sibling::div//i', \"value\": '//span[text()=\"RGB(128,128,255)\"]'},\n            {\"select\": '//label[text()=\"物料切换方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"混存\"]'},\n            {\"select\": '//label[text()=\"物料制约标志\"]/following-sibling::div//i', \"value\": '//label[text()=\"物料制约标志\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"是\"]'},\n            {\"select\": '//label[text()=\"库存增减方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"线形/梯形\"]'},\n            {\"select\": '//label[text()=\"制造批量大小计算方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"均等\"]'},\n            {\"select\": '//label[text()=\"制造批量尾数为末尾\"]/following-sibling::div//i', \"value\": '//label[text()=\"制造批量尾数为末尾\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"否\"]'},\n            {\"select\": '//label[text()=\"采购批量计算方法\"]/following-sibling::div//i', \"value\": '//label[text()=\"采购批量计算方法\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"均等\"]'},\n            {\"select\": '//label[text()=\"采购批量尾数为末尾\"]/following-sibling::div//i', \"value\": '//label[text()=\"采购批量尾数为末尾\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"否\"]'},\n        ]\n        adds.batch_modify_select_input(select_list)\n    \n        input_num_value = '1'\n        num_xpath_list1 = [\n            f'//label[text()=\"数值特征{i}\"]/following-sibling::div//input'\n            for i in range(1, 6)\n        ]\n        num_xpath_list2 = [\n            f'//label[text()=\"自定义数值{i}\"]/following-sibling::div//input'\n            for i in range(1, 21)\n        ]\n        num_xpath_list3 = [\n            f'//label[text()=\"{label}{i}\"]/following-sibling::div//input'\n            for i in range(1, 8)\n            for label in [\"单批上限\", \"合批上限\", \"合批期间\"]\n        ]\n    \n        num_list = [\n            '//label[text()=\"物料优先度\"]/following-sibling::div//input',\n            '//label[text()=\"单价\"]/following-sibling::div//input',\n            '//label[text()=\"制造效率\"]/following-sibling::div//input',\n            '//label[text()=\"显示顺序\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN2\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN3\"]/following-sibling::div//input',\n            '//label[text()=\"预留\"]/following-sibling::div//input',\n            '//label[text()=\"目标库存MIN\"]/following-sibling::div//input',\n            '//label[text()=\"库存MAX\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量单位\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量单位\"]/following-sibling::div//input',\n            '//label[text()=\"工作分割数量\"]/following-sibling::div//input',\n            '//label[text()=\"工作并行数量\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量单位\"]/following-sibling::div//input',\n        ]\n        num_list.extend(num_xpath_list1 + num_xpath_list2 + num_xpath_list3)\n        adds.batch_modify_input(num_list, input_num_value)\n    \n    \n        time_xpath_list = [\n            f'//label[text()=\"自定义日期{i}\"]/following-sibling::div//input'\n            for i in range(1, 11)\n        ]\n        adds.batch_modify_time_input(time_xpath_list)\n    \n        box_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in box_list]\n        code_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in code_list]\n        select_input_list = [item[\"select\"].replace(\"//i\", \"//input\") for item in select_list]\n        all_value = text_list + box_input_list + code_input_list + select_input_list + num_list + time_xpath_list\n        len_num = len(all_value)\n        before_all_value = adds.batch_acquisition_input(all_value)\n        item.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        sleep(1)\n        driver.refresh()\n        sleep(5)\n>       num = adds.go_settings_page()\n\nTests\\test_items\\test_item.py:1086: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\adds_page.py:205: in go_settings_page\n    self.click_button('(//i[@class=\"icon-wrapper el-tooltip font21 line-height-15 m-r-12\"])[1]')\nPages\\itemsPage\\adds_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.adds_page.AddsPages object at 0x00000216A27582E0>, by_or_element = 'xpath', value = '(//i[@class=\"icon-wrapper el-tooltip font21 line-height-15 m-r-12\"])[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//i[@class=\"icon-wrapper el-tooltip font21 line-height-15 m-r-12\"])[1]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1760358236907,"stop":1760358246831,"duration":9924},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//i[@class=\"icon-wrapper el-tooltip font21 line-height-15 m-r-12\"])[1]","statusTrace":"self = <Pages.itemsPage.adds_page.AddsPages object at 0x00000216A27582E0>, by_or_element = 'xpath', value = '(//i[@class=\"icon-wrapper el-tooltip font21 line-height-15 m-r-12\"])[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2a10feaebcf9faad114beb7f7de8a1a6\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000216A2A34CA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff71bec6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff71bec6fc0+79056]\nE       \t(No symbol) [0x0x7ff71bc59dda]\nE       \t(No symbol) [0x0x7ff71bcb02ea]\nE       \t(No symbol) [0x0x7ff71bcb059c]\nE       \t(No symbol) [0x0x7ff71bd03f37]\nE       \t(No symbol) [0x0x7ff71bcd86af]\nE       \t(No symbol) [0x0x7ff71bd00dbe]\nE       \t(No symbol) [0x0x7ff71bcd8443]\nE       \t(No symbol) [0x0x7ff71bca1311]\nE       \t(No symbol) [0x0x7ff71bca20a3]\nE       \tGetHandleVerifier [0x0x7ff71c17e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff71c178993+2903715]\nE       \tGetHandleVerifier [0x0x7ff71c196aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff71bee16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff71bee96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71becfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71becfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff71beb64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe68f47374+20]\nE       \tRtlUserThreadStart [0x0x7ffe691dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_item.TestItemPage object at 0x00000216A20D6F20>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a10feaebcf9faad114beb7f7de8a1a6\")>\n\n    @allure.story(\"输入全部数据，添加保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_addall(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n        adds = AddsPages(driver)\n        input_value = '11测试全部数据'\n        item.click_add_button()\n        custom_xpath_list = [\n            f'//label[text()=\"自定义字符{i}\"]/following-sibling::div//input'\n            for i in range(1, 21)\n        ]\n        text_list = [\n            '//label[text()=\"物料代码\"]/following-sibling::div//input',\n            '//label[text()=\"物料名称\"]/following-sibling::div//input',\n            '//label[text()=\"工作分割比率\"]/following-sibling::div//input',\n            '//label[text()=\"备注\"]/following-sibling::div//input',\n        ]\n        text_list.extend(custom_xpath_list)\n        adds.batch_modify_input(text_list, input_value)\n    \n    \n        value_bos = '//div[@class=\"vxe-modal--body\"]//table[@class=\"vxe-table--body\"]//tr[1]/td[3]'\n        spe_xpath_list = [\n            f'//label[text()=\"生产特征{i}\"]/following-sibling::div//i'\n            for i in range(1, 11)\n        ]\n        box_list = [\n            '//label[text()=\"物料组代码\"]/following-sibling::div//i',\n            '//label[text()=\"BASE物料\"]/following-sibling::div//i',\n            '//label[text()=\"资源\"]/following-sibling::div//i',\n            '//label[text()=\"物料切换对象\"]/following-sibling::div//i',\n        ]\n        box_list.extend(spe_xpath_list)\n        adds.batch_modify_dialog_box(box_list, value_bos)\n    \n    \n        code_value = '//span[text()=\"AdvanceAlongResourceWorkingTime\"]'\n        code_list = [\n            '//label[text()=\"关联条件\"]/following-sibling::div//i',\n            '//label[text()=\"关联时工作输出指令排序表达式\"]/following-sibling::div//i',\n            '//label[text()=\"关联时工作输入指令排序表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存MIN2日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存MIN3日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"目标库存MIN日期表达式\"]/following-sibling::div//i',\n            '//label[text()=\"库存有效期限\"]/following-sibling::div//i',\n        ]\n        adds.batch_modify_code_box(code_list, code_value)\n    \n        select_list = [\n            {\"select\": '//label[text()=\"物料种类\"]/following-sibling::div//i', \"value\": '//li[text()=\"原材料\"]'},\n            {\"select\": '//label[text()=\"自动补充标志\"]/following-sibling::div//i', \"value\": '//li[text()=\"是(库存+1对1制造)\"]'},\n            {\"select\": '//label[text()=\"备料方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"采购优先\"]'},\n            {\"select\": '//label[text()=\"显示颜色\"]/following-sibling::div//i', \"value\": '//span[text()=\"RGB(128,128,255)\"]'},\n            {\"select\": '//label[text()=\"物料切换方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"混存\"]'},\n            {\"select\": '//label[text()=\"物料制约标志\"]/following-sibling::div//i', \"value\": '//label[text()=\"物料制约标志\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"是\"]'},\n            {\"select\": '//label[text()=\"库存增减方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"线形/梯形\"]'},\n            {\"select\": '//label[text()=\"制造批量大小计算方法\"]/following-sibling::div//i', \"value\": '//li[text()=\"均等\"]'},\n            {\"select\": '//label[text()=\"制造批量尾数为末尾\"]/following-sibling::div//i', \"value\": '//label[text()=\"制造批量尾数为末尾\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"否\"]'},\n            {\"select\": '//label[text()=\"采购批量计算方法\"]/following-sibling::div//i', \"value\": '//label[text()=\"采购批量计算方法\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"均等\"]'},\n            {\"select\": '//label[text()=\"采购批量尾数为末尾\"]/following-sibling::div//i', \"value\": '//label[text()=\"采购批量尾数为末尾\"]/following-sibling::div//div[@class=\"ivu-select-dropdown\"]//li[text()=\"否\"]'},\n        ]\n        adds.batch_modify_select_input(select_list)\n    \n        input_num_value = '1'\n        num_xpath_list1 = [\n            f'//label[text()=\"数值特征{i}\"]/following-sibling::div//input'\n            for i in range(1, 6)\n        ]\n        num_xpath_list2 = [\n            f'//label[text()=\"自定义数值{i}\"]/following-sibling::div//input'\n            for i in range(1, 21)\n        ]\n        num_xpath_list3 = [\n            f'//label[text()=\"{label}{i}\"]/following-sibling::div//input'\n            for i in range(1, 8)\n            for label in [\"单批上限\", \"合批上限\", \"合批期间\"]\n        ]\n    \n        num_list = [\n            '//label[text()=\"物料优先度\"]/following-sibling::div//input',\n            '//label[text()=\"单价\"]/following-sibling::div//input',\n            '//label[text()=\"制造效率\"]/following-sibling::div//input',\n            '//label[text()=\"显示顺序\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN2\"]/following-sibling::div//input',\n            '//label[text()=\"库存MIN3\"]/following-sibling::div//input',\n            '//label[text()=\"预留\"]/following-sibling::div//input',\n            '//label[text()=\"目标库存MIN\"]/following-sibling::div//input',\n            '//label[text()=\"库存MAX\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"制造批量单位\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"采购批量单位\"]/following-sibling::div//input',\n            '//label[text()=\"工作分割数量\"]/following-sibling::div//input',\n            '//label[text()=\"工作并行数量\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量MIN\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量MAX\"]/following-sibling::div//input',\n            '//label[text()=\"工作批量单位\"]/following-sibling::div//input',\n        ]\n        num_list.extend(num_xpath_list1 + num_xpath_list2 + num_xpath_list3)\n        adds.batch_modify_input(num_list, input_num_value)\n    \n    \n        time_xpath_list = [\n            f'//label[text()=\"自定义日期{i}\"]/following-sibling::div//input'\n            for i in range(1, 11)\n        ]\n        adds.batch_modify_time_input(time_xpath_list)\n    \n        box_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in box_list]\n        code_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in code_list]\n        select_input_list = [item[\"select\"].replace(\"//i\", \"//input\") for item in select_list]\n        all_value = text_list + box_input_list + code_input_list + select_input_list + num_list + time_xpath_list\n        len_num = len(all_value)\n        before_all_value = adds.batch_acquisition_input(all_value)\n        item.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        sleep(1)\n        driver.refresh()\n        sleep(5)\n>       num = adds.go_settings_page()\n\nTests\\test_items\\test_item.py:1086: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\adds_page.py:205: in go_settings_page\n    self.click_button('(//i[@class=\"icon-wrapper el-tooltip font21 line-height-15 m-r-12\"])[1]')\nPages\\itemsPage\\adds_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.adds_page.AddsPages object at 0x00000216A27582E0>, by_or_element = 'xpath', value = '(//i[@class=\"icon-wrapper el-tooltip font21 line-height-15 m-r-12\"])[1]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = (//i[@class=\"icon-wrapper el-tooltip font21 line-height-15 m-r-12\"])[1]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"a0622ae7dd751cf2","name":"test_item_addall_failure","source":"a0622ae7dd751cf2.png","type":"image/png","size":249732},{"uid":"8e2d07ccbf4e4267","name":"test_item_addall_source","source":"8e2d07ccbf4e4267.html","type":"text/html","size":869214},{"uid":"8c14e4f808b152cf","name":"test_item_addall_failure","source":"8c14e4f808b152cf.png","type":"image/png","size":105696},{"uid":"5fe6173cd5167fef","name":"test_item_addall_source","source":"5fe6173cd5167fef.html","type":"text/html","size":1297312},{"uid":"c661695fe0b646d0","name":"log","source":"c661695fe0b646d0.txt","type":"text/plain","size":35302}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":5},"afterStages":[{"name":"login_to_item::0","time":{"start":1760358377897,"stop":1760358380067,"duration":2170},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"输入全部数据，添加保存成功"},{"name":"feature","value":"物料表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_item"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26508-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_item"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"c982c4255a9c231b.json","parameterValues":[]}