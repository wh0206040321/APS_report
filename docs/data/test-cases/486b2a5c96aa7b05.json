{"uid":"486b2a5c96aa7b05","name":"test_expression_addrepeat1","fullName":"Tests.test_system.test_expression.TestSExpressionPage#test_expression_addrepeat1","historyId":"c9a074eeeb3d3b7eb6250fe67c4d6869","time":{"start":1760986385850,"stop":1760986391054,"duration":5204},"status":"failed","statusMessage":"AssertionError: assert '不可以新增名称和分类相同的数据' == '不允许添加重复的表达式名称'\n  \n  \u001B[0m\u001B[91m- 不允许添加重复的表达式名称\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 不可以新增名称和分类相同的数据\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_system.test_expression.TestSExpressionPage object at 0x0000014AE2D89D50>, login_to_expression = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e3cb985c3c8428945c599a202d9f601b\")>\n\n    @allure.story(\"添加表达式管理重复不允许添加\")\n    # @pytest.mark.run(order=1)\n    def test_expression_addrepeat1(self, login_to_expression):\n        driver = login_to_expression  # WebDriver 实例\n        expression = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n        sleep(1)\n        name = '1测试表达式管理1'\n        expression.click_all_button(\"新增\")\n        expression.enter_texts('//div[p[text()=\"名称: \"]]//input', name)\n        expression.click_button('//div[p[text()=\"分类: \"]]//input[@type=\"text\"]')\n        expression.click_button('//li[text()=\"图棒显示颜色\"]')\n        expression.enter_texts('//div[p[text()=\"表达式: \"]]//textarea', name)\n        expression.click_all_button(\"保存\")\n        message = expression.get_error_message()\n>       assert message == \"不允许添加重复的表达式名称\"\nE       AssertionError: assert '不可以新增名称和分类相同的数据' == '不允许添加重复的表达式名称'\nE         \nE         \u001B[0m\u001B[91m- 不允许添加重复的表达式名称\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 不可以新增名称和分类相同的数据\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_system\\test_expression.py:137: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_expression","time":{"start":1760986368798,"stop":1760986385848,"duration":17050},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '不可以新增名称和分类相同的数据' == '不允许添加重复的表达式名称'\n  \n  \u001B[0m\u001B[91m- 不允许添加重复的表达式名称\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 不可以新增名称和分类相同的数据\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_system.test_expression.TestSExpressionPage object at 0x0000014AE2D89D50>, login_to_expression = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e3cb985c3c8428945c599a202d9f601b\")>\n\n    @allure.story(\"添加表达式管理重复不允许添加\")\n    # @pytest.mark.run(order=1)\n    def test_expression_addrepeat1(self, login_to_expression):\n        driver = login_to_expression  # WebDriver 实例\n        expression = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n        sleep(1)\n        name = '1测试表达式管理1'\n        expression.click_all_button(\"新增\")\n        expression.enter_texts('//div[p[text()=\"名称: \"]]//input', name)\n        expression.click_button('//div[p[text()=\"分类: \"]]//input[@type=\"text\"]')\n        expression.click_button('//li[text()=\"图棒显示颜色\"]')\n        expression.enter_texts('//div[p[text()=\"表达式: \"]]//textarea', name)\n        expression.click_all_button(\"保存\")\n        message = expression.get_error_message()\n>       assert message == \"不允许添加重复的表达式名称\"\nE       AssertionError: assert '不可以新增名称和分类相同的数据' == '不允许添加重复的表达式名称'\nE         \nE         \u001B[0m\u001B[91m- 不允许添加重复的表达式名称\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 不可以新增名称和分类相同的数据\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_system\\test_expression.py:137: AssertionError","steps":[],"attachments":[{"uid":"7e5940646975cccb","name":"test_expression_addrepeat1_failure","source":"7e5940646975cccb.png","type":"image/png","size":131203},{"uid":"6c118b749dac50b3","name":"test_expression_addrepeat1_source","source":"6c118b749dac50b3.html","type":"text/html","size":1110885},{"uid":"2b44e7c1cdd8a302","name":"log","source":"2b44e7c1cdd8a302.txt","type":"text/plain","size":1390}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_expression::0","time":{"start":1760986391863,"stop":1760986394278,"duration":2415},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"表达式管理页用例"},{"name":"story","value":"添加表达式管理重复不允许添加"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_expression"},{"name":"subSuite","value":"TestSExpressionPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_expression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"486b2a5c96aa7b05.json","parameterValues":[]}