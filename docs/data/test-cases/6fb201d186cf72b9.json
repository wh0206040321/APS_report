{"uid":"6fb201d186cf72b9","name":"test_setting_select_timeinput","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_select_timeinput","historyId":"19bcc2e4694f205a615acb28f7ba3c2f","time":{"start":1758724760428,"stop":1758724769905,"duration":9477},"status":"failed","statusMessage":"AssertionError: assert ('\\u6d4b\\u8bd5\\u5e03\\u5c40A' == '\\u6d4b\\u8bd5\\u5e03\\u5c40A'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 测试布局A\u001B[90m\u001B[39;49;00m and '2025/07/05 00:00:00' == '2025/10/20 00:00:00'\n  \n  \u001B[0m\u001B[91m- 2025/10/20 00:00:00\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?      -  -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 2025/07/05 00:00:00\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?       +  +\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x00000271F3499D20>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c0ab9d57b0bc0e267a8af7905ef0fafc\")>\n\n    @allure.story(\"设置表格布局-制造订单交货期查询-日期\")\n    # @pytest.mark.run(order=1)\n    def test_setting_select_timeinput(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        setting.click_button('(//span[text()=\"计划业务数据\"])[1]')\n        setting.click_button('(//span[text()=\"制造订单\"])[1]')\n        layout = \"测试布局A\"\n        code = \"交货期\"\n        sleep(1)\n        setting.add_layout()\n        setting.enter_texts(\n            '//div[text()=\"当前布局:\"]/following-sibling::div//input', f\"{layout}\"\n        )\n        setting.click_button('(//div[text()=\" 显示设置 \"])[2]')\n        # 获取是否可见选项的复选框元素\n        checkbox = setting.get_find_element_xpath(\n            '(//div[./div[text()=\"是否可见:\"]])[2]/label/span'\n        )\n        # 检查复选框是否未被选中\n        if checkbox.get_attribute(\"class\") == \"ivu-checkbox\":\n            # 如果未选中，则点击复选框进行选中\n            setting.click_button('(//div[./div[text()=\"是否可见:\"]])[2]/label/span')\n            # 点击确定按钮保存设置\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[5]/button[2]')\n        else:\n            # 如果已选中，直接点击确定按钮保存设置\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[5]/button[2]')\n    \n        # 获取布局名称的文本元素\n        name = setting.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        ).text\n    \n        setting.click_setting_button()\n        # 点击快速查询按钮\n        setting.click_button('(//div[text()=\" 快速查询 \"])[2]')\n        # 点击特定代码的行以选择\n        setting.click_button(\n            f'//tr[./td[3][.//span[text()=\"{code}\"]]]/td[4]//input[@placeholder=\"请选择\"]'\n        )\n        # 打开下拉框\n        setting.click_button('//div[text()=\"日期\"]')\n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[5]/button[2]')\n        # 断言布局名称与预期相符\n        time = setting.get_find_element_xpath(\n            '//div[@class=\"single-page\"]//table[@class=\"vxe-table--body\" and .//tr[@class=\"vxe-body--row\"]]//tr[2]/td[9]'\n        ).text\n        setting.enter_texts('//div[@class=\"ivu-date-picker-rel\"]//input', time)\n        setting.click_button('//div[@class=\"queryBtn\"]/button[1]')\n        sleep(1)\n        after_time = setting.get_find_element_xpath(\n            '//div[@class=\"single-page\"]//table[@class=\"vxe-table--body\" and .//tr[@class=\"vxe-body--row\"]]//tr[1]/td[9]'\n        ).text\n    \n>       assert name == layout and time == after_time\nE       AssertionError: assert ('\\u6d4b\\u8bd5\\u5e03\\u5c40A' == '\\u6d4b\\u8bd5\\u5e03\\u5c40A'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 测试布局A\u001B[90m\u001B[39;49;00m and '2025/07/05 00:00:00' == '2025/10/20 00:00:00'\nE         \nE         \u001B[0m\u001B[91m- 2025/10/20 00:00:00\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?      -  -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 2025/07/05 00:00:00\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?       +  +\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_setting.py:1234: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1758724751934,"stop":1758724760427,"duration":8493},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('\\u6d4b\\u8bd5\\u5e03\\u5c40A' == '\\u6d4b\\u8bd5\\u5e03\\u5c40A'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 测试布局A\u001B[90m\u001B[39;49;00m and '2025/07/05 00:00:00' == '2025/10/20 00:00:00'\n  \n  \u001B[0m\u001B[91m- 2025/10/20 00:00:00\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?      -  -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 2025/07/05 00:00:00\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?       +  +\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x00000271F3499D20>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c0ab9d57b0bc0e267a8af7905ef0fafc\")>\n\n    @allure.story(\"设置表格布局-制造订单交货期查询-日期\")\n    # @pytest.mark.run(order=1)\n    def test_setting_select_timeinput(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        setting.click_button('(//span[text()=\"计划业务数据\"])[1]')\n        setting.click_button('(//span[text()=\"制造订单\"])[1]')\n        layout = \"测试布局A\"\n        code = \"交货期\"\n        sleep(1)\n        setting.add_layout()\n        setting.enter_texts(\n            '//div[text()=\"当前布局:\"]/following-sibling::div//input', f\"{layout}\"\n        )\n        setting.click_button('(//div[text()=\" 显示设置 \"])[2]')\n        # 获取是否可见选项的复选框元素\n        checkbox = setting.get_find_element_xpath(\n            '(//div[./div[text()=\"是否可见:\"]])[2]/label/span'\n        )\n        # 检查复选框是否未被选中\n        if checkbox.get_attribute(\"class\") == \"ivu-checkbox\":\n            # 如果未选中，则点击复选框进行选中\n            setting.click_button('(//div[./div[text()=\"是否可见:\"]])[2]/label/span')\n            # 点击确定按钮保存设置\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[5]/button[2]')\n        else:\n            # 如果已选中，直接点击确定按钮保存设置\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[5]/button[2]')\n    \n        # 获取布局名称的文本元素\n        name = setting.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        ).text\n    \n        setting.click_setting_button()\n        # 点击快速查询按钮\n        setting.click_button('(//div[text()=\" 快速查询 \"])[2]')\n        # 点击特定代码的行以选择\n        setting.click_button(\n            f'//tr[./td[3][.//span[text()=\"{code}\"]]]/td[4]//input[@placeholder=\"请选择\"]'\n        )\n        # 打开下拉框\n        setting.click_button('//div[text()=\"日期\"]')\n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[5]/button[2]')\n        # 断言布局名称与预期相符\n        time = setting.get_find_element_xpath(\n            '//div[@class=\"single-page\"]//table[@class=\"vxe-table--body\" and .//tr[@class=\"vxe-body--row\"]]//tr[2]/td[9]'\n        ).text\n        setting.enter_texts('//div[@class=\"ivu-date-picker-rel\"]//input', time)\n        setting.click_button('//div[@class=\"queryBtn\"]/button[1]')\n        sleep(1)\n        after_time = setting.get_find_element_xpath(\n            '//div[@class=\"single-page\"]//table[@class=\"vxe-table--body\" and .//tr[@class=\"vxe-body--row\"]]//tr[1]/td[9]'\n        ).text\n    \n>       assert name == layout and time == after_time\nE       AssertionError: assert ('\\u6d4b\\u8bd5\\u5e03\\u5c40A' == '\\u6d4b\\u8bd5\\u5e03\\u5c40A'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 测试布局A\u001B[90m\u001B[39;49;00m and '2025/07/05 00:00:00' == '2025/10/20 00:00:00'\nE         \nE         \u001B[0m\u001B[91m- 2025/10/20 00:00:00\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?      -  -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 2025/07/05 00:00:00\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?       +  +\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_setting.py:1234: AssertionError","steps":[],"attachments":[{"uid":"ab10593de38b7332","name":"test_setting_select_timeinput_failure","source":"ab10593de38b7332.png","type":"image/png","size":145305},{"uid":"607c4d54839d909e","name":"test_setting_select_timeinput_source","source":"607c4d54839d909e.html","type":"text/html","size":1613286},{"uid":"de604b22303256ff","name":"log","source":"de604b22303256ff.txt","type":"text/plain","size":2889}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_setting::0","time":{"start":1758724770138,"stop":1758724772311,"duration":2173},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"设置表格布局-制造订单交货期查询-日期"},{"name":"feature","value":"标准应用设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"15904-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"6fb201d186cf72b9.json","parameterValues":[]}