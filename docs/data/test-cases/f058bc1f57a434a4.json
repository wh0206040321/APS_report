{"uid":"f058bc1f57a434a4","name":"test_spec_delsuccess1","fullName":"Tests.test_items.test_spec1.TestSpecPage#test_spec_delsuccess1","historyId":"80e341052ad6eefcaa96c8f5f4a32346","time":{"start":1761134853520,"stop":1761134886921,"duration":33401},"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"5c211cea49ae43a1aa774a0ccc153c34\", element=\"f.B7BB1592E897095139900C5DDB1EE4CD.d.824DDCA4EFFD95DAEB13D62A1FA4FCE1.e.151\")>])","statusTrace":"self = <test_items.test_spec1.TestSpecPage object at 0x0000027FE5D7B430>, login_to_spec1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5c211cea49ae43a1aa774a0ccc153c34\")>\n\n    @allure.story(\"删除测试数据成功，删除布局成功\")\n    # @pytest.mark.run(order=1)\n    def test_spec_delsuccess1(self, login_to_spec1):\n        driver = login_to_spec1  # WebDriver 实例\n        spec = Spec1Page(driver)  # 用 driver 初始化 Spec1Page\n        layout = \"测试布局A\"\n    \n        value = ['全部数据', '111', '1测试A', '111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111']\n        spec.del_all(value)\n        data = [\n            driver.find_elements(By.XPATH, f'//tr[./td[2][.//span[text()=\"{v}\"]]]/td[2]')\n            for v in value[:3]\n        ]\n        spec.del_layout(layout)\n        sleep(2)\n        # 再次查找页面上是否有目标 div，以验证是否删除成功\n        after_layout = driver.find_elements(\n            By.XPATH, f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        )\n        assert all(len(elements) == 0 for elements in data)\n>       assert 0 == len(after_layout)\nE       assert 0 == 1\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"5c211cea49ae43a1aa774a0ccc153c34\", element=\"f.B7BB1592E897095139900C5DDB1EE4CD.d.824DDCA4EFFD95DAEB13D62A1FA4FCE1.e.151\")>])\n\nTests\\test_items\\test_spec1.py:934: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_spec1","time":{"start":1761134841171,"stop":1761134853520,"duration":12349},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"5c211cea49ae43a1aa774a0ccc153c34\", element=\"f.B7BB1592E897095139900C5DDB1EE4CD.d.824DDCA4EFFD95DAEB13D62A1FA4FCE1.e.151\")>])","statusTrace":"self = <test_items.test_spec1.TestSpecPage object at 0x0000027FE5D7B430>, login_to_spec1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5c211cea49ae43a1aa774a0ccc153c34\")>\n\n    @allure.story(\"删除测试数据成功，删除布局成功\")\n    # @pytest.mark.run(order=1)\n    def test_spec_delsuccess1(self, login_to_spec1):\n        driver = login_to_spec1  # WebDriver 实例\n        spec = Spec1Page(driver)  # 用 driver 初始化 Spec1Page\n        layout = \"测试布局A\"\n    \n        value = ['全部数据', '111', '1测试A', '111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111']\n        spec.del_all(value)\n        data = [\n            driver.find_elements(By.XPATH, f'//tr[./td[2][.//span[text()=\"{v}\"]]]/td[2]')\n            for v in value[:3]\n        ]\n        spec.del_layout(layout)\n        sleep(2)\n        # 再次查找页面上是否有目标 div，以验证是否删除成功\n        after_layout = driver.find_elements(\n            By.XPATH, f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        )\n        assert all(len(elements) == 0 for elements in data)\n>       assert 0 == len(after_layout)\nE       assert 0 == 1\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"5c211cea49ae43a1aa774a0ccc153c34\", element=\"f.B7BB1592E897095139900C5DDB1EE4CD.d.824DDCA4EFFD95DAEB13D62A1FA4FCE1.e.151\")>])\n\nTests\\test_items\\test_spec1.py:934: AssertionError","steps":[],"attachments":[{"uid":"b554203076b46d50","name":"test_spec_delsuccess1_failure","source":"b554203076b46d50.png","type":"image/png","size":72800},{"uid":"b82238ca1e31283c","name":"test_spec_delsuccess1_source","source":"b82238ca1e31283c.html","type":"text/html","size":1232670},{"uid":"220bacee34664d2d","name":"log","source":"220bacee34664d2d.txt","type":"text/plain","size":3376}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_spec1::0","time":{"start":1761134887113,"stop":1761134889268,"duration":2155},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"删除测试数据成功，删除布局成功"},{"name":"feature","value":"生产特征表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_spec1"},{"name":"subSuite","value":"TestSpecPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"25856-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_spec1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"f058bc1f57a434a4.json","parameterValues":[]}