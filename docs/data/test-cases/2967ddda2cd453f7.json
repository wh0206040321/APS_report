{"uid":"2967ddda2cd453f7","name":"test_login_pafail","fullName":"Tests.test_items.test_login.TestLoginPage#test_login_pafail","historyId":"1855a337826f2c9fa30eaf48fdfc5ccf","time":{"start":1753779969431,"stop":1753779972485,"duration":3054},"status":"failed","statusMessage":"AssertionError: assert '用户名或密码无效' == '用户名或密码无效1'\n  \n  \u001B[0m\u001B[91m- 用户名或密码无效1\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?         -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 用户名或密码无效\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_login.TestLoginPage object at 0x000001F46AAC5FC0>, login_pa = <Pages.itemsPage.login_page.LoginPage object at 0x000001F46AB0BDF0>\n\n    @allure.story(\"密码错误 登录失败\")\n    def test_login_pafail(self, login_pa):\n        login_pa.enter_username(f\"{DateDriver().username}\")  # 输入用户名\n        login_pa.enter_password(\"12345qweR\")  # 输入错误的密码\n        login_pa.click_button('(//input[@type=\"text\"])[2]')  # 点击下拉框\n        login_pa.click_button(f'//li[text()=\"{DateDriver().planning}\"]')  # 点击计划单元\n        login_pa.click_button(\n            '//button[@type=\"button\" and @class=\"ivu-btn ivu-btn-primary ivu-btn-long ivu-btn-large\"]'\n        )  # 点击登录按钮\n        element = login_pa.get_find_element('//div[text()=\" 用户名或密码无效 \"]')\n>       assert element.text == \"用户名或密码无效1\"\nE       AssertionError: assert '用户名或密码无效' == '用户名或密码无效1'\nE         \nE         \u001B[0m\u001B[91m- 用户名或密码无效1\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?         -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 用户名或密码无效\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_login.py:51: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"login_pa","time":{"start":1753779964154,"stop":1753779969430,"duration":5276},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '用户名或密码无效' == '用户名或密码无效1'\n  \n  \u001B[0m\u001B[91m- 用户名或密码无效1\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?         -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 用户名或密码无效\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_login.TestLoginPage object at 0x000001F46AAC5FC0>, login_pa = <Pages.itemsPage.login_page.LoginPage object at 0x000001F46AB0BDF0>\n\n    @allure.story(\"密码错误 登录失败\")\n    def test_login_pafail(self, login_pa):\n        login_pa.enter_username(f\"{DateDriver().username}\")  # 输入用户名\n        login_pa.enter_password(\"12345qweR\")  # 输入错误的密码\n        login_pa.click_button('(//input[@type=\"text\"])[2]')  # 点击下拉框\n        login_pa.click_button(f'//li[text()=\"{DateDriver().planning}\"]')  # 点击计划单元\n        login_pa.click_button(\n            '//button[@type=\"button\" and @class=\"ivu-btn ivu-btn-primary ivu-btn-long ivu-btn-large\"]'\n        )  # 点击登录按钮\n        element = login_pa.get_find_element('//div[text()=\" 用户名或密码无效 \"]')\n>       assert element.text == \"用户名或密码无效1\"\nE       AssertionError: assert '用户名或密码无效' == '用户名或密码无效1'\nE         \nE         \u001B[0m\u001B[91m- 用户名或密码无效1\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?         -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 用户名或密码无效\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_login.py:51: AssertionError","steps":[],"attachments":[{"uid":"ce5c336d72851d98","name":"test_login_pafail_failure","source":"ce5c336d72851d98.png","type":"image/png","size":229351},{"uid":"fe87d79a69f9448c","name":"test_login_pafail_source","source":"fe87d79a69f9448c.html","type":"text/html","size":846772},{"uid":"2036cb5e5c39e2ff","name":"log","source":"2036cb5e5c39e2ff.txt","type":"text/plain","size":579}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_pa::0","time":{"start":1753779972789,"stop":1753779974989,"duration":2200},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"密码错误 登录失败"},{"name":"feature","value":"登录页面测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLoginPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"37764-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d90341195fdf4fd6","status":"passed","time":{"start":1753702554402,"stop":1753702558058,"duration":3656}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"2967ddda2cd453f7.json","parameterValues":[]}