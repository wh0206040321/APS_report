{"uid":"4ba5a4364cec5c6a","name":"test_personal_openengine5","fullName":"Tests.test_items.test_personal.TestPersonalPage#test_personal_openengine5","historyId":"1982a5843263a14d40a89882edae6ad3","time":{"start":1755100620605,"stop":1755100634729,"duration":14124},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //input[@placeholder=\"请选择\"]","statusTrace":"self = <Pages.itemsPage.personal_page.PersonalPage object at 0x0000023BD483CD60>, by_or_element = 'xpath', value = '//input[@placeholder=\"请选择\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f347df4acb23239c8e680fe5f8395c82\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000023BD48C7D90>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_personal.TestPersonalPage object at 0x0000023BD3EF88B0>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f347df4acb23239c8e680fe5f8395c82\")>\n\n    @allure.story(\"打开引擎为系统设置-IP\")\n    # @pytest.mark.run(order=1)\n    def test_personal_openengine5(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        wait = WebDriverWait(driver, 100)\n    \n        personal.go_setting_page()\n    \n        personal.click_button('//p[text()=\" 本地引擎打开方式: \"]/following-sibling::div//i')\n        personal.click_button('//li[text()=\"系统设置\"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n    \n>       personal.go_engine_page(name='system_ip')\n\nTests\\test_items\\test_personal.py:521: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\personal_page.py:149: in go_engine_page\n    self.click_button('//input[@placeholder=\"请选择\"]')\nPages\\itemsPage\\personal_page.py:27: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.personal_page.PersonalPage object at 0x0000023BD483CD60>, by_or_element = 'xpath', value = '//input[@placeholder=\"请选择\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //input[@placeholder=\"请选择\"]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_personal","time":{"start":1755100612150,"stop":1755100620605,"duration":8455},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //input[@placeholder=\"请选择\"]","statusTrace":"self = <Pages.itemsPage.personal_page.PersonalPage object at 0x0000023BD483CD60>, by_or_element = 'xpath', value = '//input[@placeholder=\"请选择\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f347df4acb23239c8e680fe5f8395c82\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000023BD48C7D90>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_items.test_personal.TestPersonalPage object at 0x0000023BD3EF88B0>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f347df4acb23239c8e680fe5f8395c82\")>\n\n    @allure.story(\"打开引擎为系统设置-IP\")\n    # @pytest.mark.run(order=1)\n    def test_personal_openengine5(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        wait = WebDriverWait(driver, 100)\n    \n        personal.go_setting_page()\n    \n        personal.click_button('//p[text()=\" 本地引擎打开方式: \"]/following-sibling::div//i')\n        personal.click_button('//li[text()=\"系统设置\"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n    \n>       personal.go_engine_page(name='system_ip')\n\nTests\\test_items\\test_personal.py:521: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\personal_page.py:149: in go_engine_page\n    self.click_button('//input[@placeholder=\"请选择\"]')\nPages\\itemsPage\\personal_page.py:27: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.itemsPage.personal_page.PersonalPage object at 0x0000023BD483CD60>, by_or_element = 'xpath', value = '//input[@placeholder=\"请选择\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //input[@placeholder=\"请选择\"]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"d53508eda21b8d0f","name":"test_personal_openengine5_failure","source":"d53508eda21b8d0f.png","type":"image/png","size":74373},{"uid":"3ca109ca4f3a1d40","name":"test_personal_openengine5_source","source":"3ca109ca4f3a1d40.html","type":"text/html","size":1528769},{"uid":"9d650ea1cbbcb940","name":"log","source":"9d650ea1cbbcb940.txt","type":"text/plain","size":3623}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"login_to_personal::0","time":{"start":1755100634906,"stop":1755100637070,"duration":2164},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"个人设置测试用例"},{"name":"story","value":"打开引擎为系统设置-IP"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_personal"},{"name":"subSuite","value":"TestPersonalPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_personal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"df84d5f7226b6939","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //input[@placeholder=\"请选择\"]","time":{"start":1755100595096,"stop":1755100609800,"duration":14704}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"4ba5a4364cec5c6a.json","parameterValues":[]}