{"uid":"2833f5cf2df95511","name":"test_home_add_success","fullName":"Tests.test_system.test_home.TestHomePage#test_home_add_success","historyId":"fb3f01b6706408b77517e3bb8f167d09","time":{"start":1753406313024,"stop":1753406334849,"duration":21825},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff619ef6f65+78965]\n\tGetHandleVerifier [0x0x7ff619ef6fc0+79056]\n\t(No symbol) [0x0x7ff619c89dda]\n\t(No symbol) [0x0x7ff619ce02ea]\n\t(No symbol) [0x0x7ff619ce059c]\n\t(No symbol) [0x0x7ff619d33f37]\n\t(No symbol) [0x0x7ff619d086af]\n\t(No symbol) [0x0x7ff619d30dbe]\n\t(No symbol) [0x0x7ff619d08443]\n\t(No symbol) [0x0x7ff619cd1311]\n\t(No symbol) [0x0x7ff619cd20a3]\n\tGetHandleVerifier [0x0x7ff61a1ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff61a1a8993+2903715]\n\tGetHandleVerifier [0x0x7ff61a1c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff619f116fe+187406]\n\tGetHandleVerifier [0x0x7ff619f196ef+220159]\n\tGetHandleVerifier [0x0x7ff619effaf4+114692]\n\tGetHandleVerifier [0x0x7ff619effca9+115129]\n\tGetHandleVerifier [0x0x7ff619ee64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffe6d247374+20]\n\tRtlUserThreadStart [0x0x7ffe6d7fcc91+33]","statusTrace":"self = <test_home.TestHomePage object at 0x000001B08646AEF0>, login_to_home = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"035ac538f6fa4eb1b132e258676cb81d\")>\n\n    @allure.story(\"新增一个组件成功\")\n    # @pytest.mark.run(order=1)\n    def test_home_add_success(self, login_to_home):\n        driver = login_to_home  # WebDriver 实例\n        home = HomePage(driver)  # 用 driver 初始化 HomePage\n        home.clear_all_button(\"确定\")\n        num = home.drag_component(name=\"饼图\")\n        home.click_save_button()\n>       message = home.get_find_message()\n\nTests\\test_system\\test_home.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\homepage_page.py:33: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"035ac538f6fa4eb1b132e258676cb81d\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001B085AD1870>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff619ef6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff619ef6fc0+79056]\nE       \t(No symbol) [0x0x7ff619c89dda]\nE       \t(No symbol) [0x0x7ff619ce02ea]\nE       \t(No symbol) [0x0x7ff619ce059c]\nE       \t(No symbol) [0x0x7ff619d33f37]\nE       \t(No symbol) [0x0x7ff619d086af]\nE       \t(No symbol) [0x0x7ff619d30dbe]\nE       \t(No symbol) [0x0x7ff619d08443]\nE       \t(No symbol) [0x0x7ff619cd1311]\nE       \t(No symbol) [0x0x7ff619cd20a3]\nE       \tGetHandleVerifier [0x0x7ff61a1ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff61a1a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff61a1c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff619f116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff619f196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff619effaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff619effca9+115129]\nE       \tGetHandleVerifier [0x0x7ff619ee64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe6d247374+20]\nE       \tRtlUserThreadStart [0x0x7ffe6d7fcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_home","time":{"start":1753406300950,"stop":1753406313023,"duration":12073},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff619ef6f65+78965]\n\tGetHandleVerifier [0x0x7ff619ef6fc0+79056]\n\t(No symbol) [0x0x7ff619c89dda]\n\t(No symbol) [0x0x7ff619ce02ea]\n\t(No symbol) [0x0x7ff619ce059c]\n\t(No symbol) [0x0x7ff619d33f37]\n\t(No symbol) [0x0x7ff619d086af]\n\t(No symbol) [0x0x7ff619d30dbe]\n\t(No symbol) [0x0x7ff619d08443]\n\t(No symbol) [0x0x7ff619cd1311]\n\t(No symbol) [0x0x7ff619cd20a3]\n\tGetHandleVerifier [0x0x7ff61a1ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff61a1a8993+2903715]\n\tGetHandleVerifier [0x0x7ff61a1c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff619f116fe+187406]\n\tGetHandleVerifier [0x0x7ff619f196ef+220159]\n\tGetHandleVerifier [0x0x7ff619effaf4+114692]\n\tGetHandleVerifier [0x0x7ff619effca9+115129]\n\tGetHandleVerifier [0x0x7ff619ee64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffe6d247374+20]\n\tRtlUserThreadStart [0x0x7ffe6d7fcc91+33]","statusTrace":"self = <test_home.TestHomePage object at 0x000001B08646AEF0>, login_to_home = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"035ac538f6fa4eb1b132e258676cb81d\")>\n\n    @allure.story(\"新增一个组件成功\")\n    # @pytest.mark.run(order=1)\n    def test_home_add_success(self, login_to_home):\n        driver = login_to_home  # WebDriver 实例\n        home = HomePage(driver)  # 用 driver 初始化 HomePage\n        home.clear_all_button(\"确定\")\n        num = home.drag_component(name=\"饼图\")\n        home.click_save_button()\n>       message = home.get_find_message()\n\nTests\\test_system\\test_home.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\homepage_page.py:33: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"035ac538f6fa4eb1b132e258676cb81d\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001B085AD1870>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff619ef6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff619ef6fc0+79056]\nE       \t(No symbol) [0x0x7ff619c89dda]\nE       \t(No symbol) [0x0x7ff619ce02ea]\nE       \t(No symbol) [0x0x7ff619ce059c]\nE       \t(No symbol) [0x0x7ff619d33f37]\nE       \t(No symbol) [0x0x7ff619d086af]\nE       \t(No symbol) [0x0x7ff619d30dbe]\nE       \t(No symbol) [0x0x7ff619d08443]\nE       \t(No symbol) [0x0x7ff619cd1311]\nE       \t(No symbol) [0x0x7ff619cd20a3]\nE       \tGetHandleVerifier [0x0x7ff61a1ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff61a1a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff61a1c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff619f116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff619f196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff619effaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff619effca9+115129]\nE       \tGetHandleVerifier [0x0x7ff619ee64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe6d247374+20]\nE       \tRtlUserThreadStart [0x0x7ffe6d7fcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"3d03802da5eb6735","name":"test_home_add_success_failure","source":"3d03802da5eb6735.png","type":"image/png","size":99925},{"uid":"af4bb284ee2a36c0","name":"test_home_add_success_source","source":"af4bb284ee2a36c0.html","type":"text/html","size":1546288},{"uid":"ebf0a2c0f7a7a564","name":"log","source":"ebf0a2c0f7a7a564.txt","type":"text/plain","size":1416}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_home::0","time":{"start":1753406335109,"stop":1753406337246,"duration":2137},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"主页设置页用例"},{"name":"story","value":"新增一个组件成功"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_home"},{"name":"subSuite","value":"TestHomePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"25596-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_home"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"2833f5cf2df95511.json","parameterValues":[]}