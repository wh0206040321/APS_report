{"uid":"eaa8c0a74da38771","name":"test_resourcegroup_textverify","fullName":"Tests.test_items.test_resourcegroup.TestResourceGroupPage#test_resourcegroup_textverify","historyId":"ceb3726d14340653dda0e4a6a1081dbd","time":{"start":1761226724229,"stop":1761226750579,"duration":26350},"status":"failed","statusMessage":"AssertionError: 预期数据是111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111，实际得到111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\nassert ('111111111111...1111111111111' == '111111111111...1111111111111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\n  \n  \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?           -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_resourcegroup.TestResourceGroupPage object at 0x000001FC18BFCEE0>, login_to_resourcegroup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f8bb3f9ef526be08524235170a0511c3\")>\n\n    @allure.story(\"校验数字文本框和文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_resourcegroup_textverify(self, login_to_resourcegroup):\n        driver = login_to_resourcegroup  # WebDriver 实例\n        resource = ResourcePage(driver)  # 用 driver 初始化 resourcePage\n        name = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        resource.add_test_data(name)\n        resource.enter_texts('(//label[text()=\"显示顺序\"])[1]/parent::div//input', name)\n        # 点击确定\n        resource.click_button(\n            '//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        adddata = resource.get_find_element_xpath(\n            f'(//span[text()=\"{name}\"])[1]/ancestor::tr[1]/td[2]'\n        ).text\n        num_ = resource.get_find_element_xpath(\n            f'(//span[text()=\"{name}\"])[1]/ancestor::tr[1]/td[9]'\n        ).text\n>       assert adddata == name and num_ == '99999999999', f\"预期数据是{name}，实际得到{adddata}\"\nE       AssertionError: 预期数据是111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111，实际得到111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\nE       assert ('111111111111...1111111111111' == '111111111111...1111111111111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\nE         \nE         \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?           -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_resourcegroup.py:233: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_resourcegroup","time":{"start":1761226711396,"stop":1761226724228,"duration":12832},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期数据是111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111，实际得到111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\nassert ('111111111111...1111111111111' == '111111111111...1111111111111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\n  \n  \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?           -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_resourcegroup.TestResourceGroupPage object at 0x000001FC18BFCEE0>, login_to_resourcegroup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f8bb3f9ef526be08524235170a0511c3\")>\n\n    @allure.story(\"校验数字文本框和文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_resourcegroup_textverify(self, login_to_resourcegroup):\n        driver = login_to_resourcegroup  # WebDriver 实例\n        resource = ResourcePage(driver)  # 用 driver 初始化 resourcePage\n        name = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        resource.add_test_data(name)\n        resource.enter_texts('(//label[text()=\"显示顺序\"])[1]/parent::div//input', name)\n        # 点击确定\n        resource.click_button(\n            '//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        adddata = resource.get_find_element_xpath(\n            f'(//span[text()=\"{name}\"])[1]/ancestor::tr[1]/td[2]'\n        ).text\n        num_ = resource.get_find_element_xpath(\n            f'(//span[text()=\"{name}\"])[1]/ancestor::tr[1]/td[9]'\n        ).text\n>       assert adddata == name and num_ == '99999999999', f\"预期数据是{name}，实际得到{adddata}\"\nE       AssertionError: 预期数据是111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111，实际得到111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\nE       assert ('111111111111...1111111111111' == '111111111111...1111111111111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\nE         \nE         \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?           -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_resourcegroup.py:233: AssertionError","steps":[],"attachments":[{"uid":"be770e3eabf92c4a","name":"test_resourcegroup_textverify_failure","source":"be770e3eabf92c4a.png","type":"image/png","size":79547},{"uid":"5d04245b061caeae","name":"test_resourcegroup_textverify_source","source":"5d04245b061caeae.html","type":"text/html","size":1430695},{"uid":"f2c06fea4827a060","name":"log","source":"f2c06fea4827a060.txt","type":"text/plain","size":1473}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_resourcegroup::0","time":{"start":1761226750922,"stop":1761226753228,"duration":2306},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"校验数字文本框和文本框成功"},{"name":"feature","value":"资源组表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_resourcegroup"},{"name":"subSuite","value":"TestResourceGroupPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21764-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_resourcegroup"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"eaa8c0a74da38771.json","parameterValues":[]}