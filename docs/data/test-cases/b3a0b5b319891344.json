{"uid":"b3a0b5b319891344","name":"test_expression_updatesuccess2","fullName":"Tests.test_system.test_expression.TestSExpressionPage#test_expression_updatesuccess2","historyId":"16ce0a5cfadc0f28985eb19696f248b4","time":{"start":1761076968874,"stop":1761076977917,"duration":9043},"status":"failed","statusMessage":"AssertionError: assert ('图棒显示颜色' == '反派规则'\n  \n  \u001B[0m\u001B[91m- 反派规则\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 图棒显示颜色\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_system.test_expression.TestSExpressionPage object at 0x00000173A6826A70>, login_to_expression = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2b93c677154ae4ecbb046adff46a3d5b\")>\n\n    @allure.story(\"修改分类和表达式成功\")\n    # @pytest.mark.run(order=1)\n    def test_expression_updatesuccess2(self, login_to_expression):\n        driver = login_to_expression  # WebDriver 实例\n        expression = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n        sleep(1)\n        name = '1测试表达式管理2'\n        text = '1111'\n        expression.select_input_expression(name)\n        expression.click_button('//table[@class=\"vxe-table--body\"]//tr[1]/td[2]')\n        expression.click_all_button(\"编辑\")\n        expression.click_button('//div[p[text()=\"分类: \"]]//input[@type=\"text\"]')\n        expression.click_button('//li[text()=\"分派规则\"]')\n        expression.enter_texts('//div[p[text()=\"表达式: \"]]//textarea', text)\n        expression.click_all_button(\"保存\")\n        message = expression.get_find_message()\n        expression.select_input_expression(name)\n        sleep(1)\n        eles = expression.get_find_element_xpath('//table[@class=\"vxe-table--body\"]//tr[1]/td[3]').text\n        testarea = expression.get_find_element_xpath('//div[p[text()=\"表达式: \"]]//textarea').get_attribute('value')\n>       assert eles == '反派规则' and testarea == text\nE       AssertionError: assert ('图棒显示颜色' == '反派规则'\nE         \nE         \u001B[0m\u001B[91m- 反派规则\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 图棒显示颜色\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_system\\test_expression.py:181: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_expression","time":{"start":1761076950561,"stop":1761076968873,"duration":18312},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('图棒显示颜色' == '反派规则'\n  \n  \u001B[0m\u001B[91m- 反派规则\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 图棒显示颜色\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_system.test_expression.TestSExpressionPage object at 0x00000173A6826A70>, login_to_expression = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2b93c677154ae4ecbb046adff46a3d5b\")>\n\n    @allure.story(\"修改分类和表达式成功\")\n    # @pytest.mark.run(order=1)\n    def test_expression_updatesuccess2(self, login_to_expression):\n        driver = login_to_expression  # WebDriver 实例\n        expression = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n        sleep(1)\n        name = '1测试表达式管理2'\n        text = '1111'\n        expression.select_input_expression(name)\n        expression.click_button('//table[@class=\"vxe-table--body\"]//tr[1]/td[2]')\n        expression.click_all_button(\"编辑\")\n        expression.click_button('//div[p[text()=\"分类: \"]]//input[@type=\"text\"]')\n        expression.click_button('//li[text()=\"分派规则\"]')\n        expression.enter_texts('//div[p[text()=\"表达式: \"]]//textarea', text)\n        expression.click_all_button(\"保存\")\n        message = expression.get_find_message()\n        expression.select_input_expression(name)\n        sleep(1)\n        eles = expression.get_find_element_xpath('//table[@class=\"vxe-table--body\"]//tr[1]/td[3]').text\n        testarea = expression.get_find_element_xpath('//div[p[text()=\"表达式: \"]]//textarea').get_attribute('value')\n>       assert eles == '反派规则' and testarea == text\nE       AssertionError: assert ('图棒显示颜色' == '反派规则'\nE         \nE         \u001B[0m\u001B[91m- 反派规则\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 图棒显示颜色\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_system\\test_expression.py:181: AssertionError","steps":[],"attachments":[{"uid":"5a6481eb250e188a","name":"test_expression_updatesuccess2_failure","source":"5a6481eb250e188a.png","type":"image/png","size":76999},{"uid":"dcab79f939d32bff","name":"test_expression_updatesuccess2_source","source":"dcab79f939d32bff.html","type":"text/html","size":1091520},{"uid":"f34f4f146bf25a4c","name":"log","source":"f34f4f146bf25a4c.txt","type":"text/plain","size":3835}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_expression::0","time":{"start":1761076978452,"stop":1761076980862,"duration":2410},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"修改分类和表达式成功"},{"name":"feature","value":"表达式管理页用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_expression"},{"name":"subSuite","value":"TestSExpressionPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_expression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1084dbce6cafb109","status":"failed","statusDetails":"AssertionError: assert ('图棒显示颜色' == '反派规则'\n  \n  \u001B[0m\u001B[91m- 反派规则\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 图棒显示颜色\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","time":{"start":1761076938571,"stop":1761076947622,"duration":9051}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"b3a0b5b319891344.json","parameterValues":[]}