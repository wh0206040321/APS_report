{"uid":"806cfefed2c06c1b","name":"test_production_editnum1","fullName":"Tests.test_items.test_production.TestProductionPage#test_production_editnum1","historyId":"79dc88f6e5d1c88d5b9b14cce013b54f","time":{"start":1761272904541,"stop":1761272911045,"duration":6504},"status":"failed","statusMessage":"AssertionError: assert ('200' == '100'\n  \n  \u001B[0m\u001B[91m- 100\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 200\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_production.TestProductionPage object at 0x0000024C75D620E0>, login_to_production = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f390941c45f30c8bb08347e6f61d8273\")>\n\n    @allure.story(\"当报工数量小于实绩报工数量 修改报工数量成功\")\n    # @pytest.mark.run(order=1)\n    def test_production_editnum1(self, login_to_production):\n        driver = login_to_production  # WebDriver 实例\n        production = ProductionPage(driver)  # 用 driver 初始化 ProductionPage\n        name = \"1测试C订单\"\n        num = \"100\"\n        production.click_button(f'//tr[./td[2]//span[text()=\"{name}:2\"]]/td[6]')\n        production.click_edi_button()\n    \n        # 定位“报工数量”输入框，并清空已填写内容\n        input_num = production.get_find_element_xpath(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input'\n        )\n        input_num.send_keys(Keys.CONTROL, \"a\")  # 全选输入框内容\n        input_num.send_keys(Keys.BACK_SPACE)  # 删除已填写的内容\n        sleep(1)\n        production.enter_texts(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input', num\n        )\n    \n        production.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        ele1 = production.get_find_element_xpath(\n            f'//tr[./td[2]//span[text()=\"{name}:2\"]]/td[6]'\n        ).text\n        ele2 = production.get_find_element_xpath(\n            f'//tr[./td[2]//span[text()=\"{name}:2\"]]/td[2]'\n        ).text\n    \n        production.click_button('(//span[text()=\"工作指示一览\"])[1]')\n        sleep(1)\n        after_text = production.get_find_element_xpath(\n            f'//tr[.//span[text()=\"{name}:2\"]]/td[10]'\n        )\n        # 断言提示信息为“请先填写表单”\n>       assert (\n                ele1 == num\n                and ele2 == f\"{name}:2\"\n                and after_text.text == \"开始生产\"\n        )\nE       AssertionError: assert ('200' == '100'\nE         \nE         \u001B[0m\u001B[91m- 100\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 200\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_production.py:605: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_production","time":{"start":1761272890778,"stop":1761272904541,"duration":13763},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('200' == '100'\n  \n  \u001B[0m\u001B[91m- 100\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 200\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_production.TestProductionPage object at 0x0000024C75D620E0>, login_to_production = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f390941c45f30c8bb08347e6f61d8273\")>\n\n    @allure.story(\"当报工数量小于实绩报工数量 修改报工数量成功\")\n    # @pytest.mark.run(order=1)\n    def test_production_editnum1(self, login_to_production):\n        driver = login_to_production  # WebDriver 实例\n        production = ProductionPage(driver)  # 用 driver 初始化 ProductionPage\n        name = \"1测试C订单\"\n        num = \"100\"\n        production.click_button(f'//tr[./td[2]//span[text()=\"{name}:2\"]]/td[6]')\n        production.click_edi_button()\n    \n        # 定位“报工数量”输入框，并清空已填写内容\n        input_num = production.get_find_element_xpath(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input'\n        )\n        input_num.send_keys(Keys.CONTROL, \"a\")  # 全选输入框内容\n        input_num.send_keys(Keys.BACK_SPACE)  # 删除已填写的内容\n        sleep(1)\n        production.enter_texts(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input', num\n        )\n    \n        production.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        sleep(1)\n        ele1 = production.get_find_element_xpath(\n            f'//tr[./td[2]//span[text()=\"{name}:2\"]]/td[6]'\n        ).text\n        ele2 = production.get_find_element_xpath(\n            f'//tr[./td[2]//span[text()=\"{name}:2\"]]/td[2]'\n        ).text\n    \n        production.click_button('(//span[text()=\"工作指示一览\"])[1]')\n        sleep(1)\n        after_text = production.get_find_element_xpath(\n            f'//tr[.//span[text()=\"{name}:2\"]]/td[10]'\n        )\n        # 断言提示信息为“请先填写表单”\n>       assert (\n                ele1 == num\n                and ele2 == f\"{name}:2\"\n                and after_text.text == \"开始生产\"\n        )\nE       AssertionError: assert ('200' == '100'\nE         \nE         \u001B[0m\u001B[91m- 100\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 200\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_production.py:605: AssertionError","steps":[],"attachments":[{"uid":"90f3ff6e1929b309","name":"test_production_editnum1_failure","source":"90f3ff6e1929b309.png","type":"image/png","size":82275},{"uid":"3b6e575b90a46bee","name":"test_production_editnum1_source","source":"3b6e575b90a46bee.html","type":"text/html","size":1244472},{"uid":"f76b85a579baf01e","name":"log","source":"f76b85a579baf01e.txt","type":"text/plain","size":1751}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_production::0","time":{"start":1761272911314,"stop":1761272913543,"duration":2229},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"当报工数量小于实绩报工数量 修改报工数量成功"},{"name":"feature","value":"生产报工测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_production"},{"name":"subSuite","value":"TestProductionPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"20188-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_production"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"806cfefed2c06c1b.json","parameterValues":[]}