{"uid":"7c1b7653b92d9b9b","name":"test_itemgroup_selectsuccess3","fullName":"Tests.test_items.test_itemgroup.TestItemGroupPage#test_itemgroup_selectsuccess3","historyId":"31149260652876ffcf1a6cc7858df4ff","time":{"start":1755779529944,"stop":1755779546720,"duration":16776},"status":"failed","statusMessage":"AssertionError: assert (0 <= 0 and 1 > 0 and '1测试A1111测试A' == '1测试A'\n +  where 0 = int('0')\n +  and   1 = int('1')\n  \n  \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1测试A1111测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_itemgroup.TestItemGroupPage object at 0x0000024700471750>\nlogin_to_itemgroup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e6023ed4752ba3e7cac3339ea5752592\")>\n\n    @allure.story(\"查询物料组代码包含产品A或物料优先度>0\")\n    # @pytest.mark.run(order=1)\n    def test_itemgroup_selectsuccess3(self, login_to_itemgroup):\n        driver = login_to_itemgroup  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n    \n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料名称\n        item.click_button('//div[text()=\"物料组代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        item.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        item.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"产品A\",\n        )\n    \n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        item.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        sleep(1)\n        actions.double_click(double_click).perform()\n        # 定义or元素的XPath\n        or_xpath = '//div[text()=\"or\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击or元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, or_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            or_found = False\n    \n            while attempt < max_attempts and not or_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找or元素\n                    or_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, or_xpath))\n                    )\n                    or_element.click()\n                    or_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not or_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'or'元素\")\n    \n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        item.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击物料优先度\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        item.click_button('//div[text()=\"物料优先度\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        item.click_button('//div[text()=\">\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值0\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            \"0\",\n        )\n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        item.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 定位第一行物料优先度\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[contains(@class,\"vxe-body--row\")][1]/td[6]'\n        ).text\n        itemname = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[contains(@class,\"vxe-body--row\")][1]/td[2]'\n        ).text\n        code = item.get_find_element_xpath(\n            '//tr[./td[2]//span[text()=\"产品A\"]]//td[6]'\n        ).text\n>       assert int(code) <= 0 and int(itemcode) > 0 and itemname == \"1测试A\"\nE       AssertionError: assert (0 <= 0 and 1 > 0 and '1测试A1111测试A' == '1测试A'\nE        +  where 0 = int('0')\nE        +  and   1 = int('1')\nE         \nE         \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1测试A1111测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_itemgroup.py:956: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_itemgroup","time":{"start":1755779521261,"stop":1755779529943,"duration":8682},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (0 <= 0 and 1 > 0 and '1测试A1111测试A' == '1测试A'\n +  where 0 = int('0')\n +  and   1 = int('1')\n  \n  \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1测试A1111测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_itemgroup.TestItemGroupPage object at 0x0000024700471750>\nlogin_to_itemgroup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e6023ed4752ba3e7cac3339ea5752592\")>\n\n    @allure.story(\"查询物料组代码包含产品A或物料优先度>0\")\n    # @pytest.mark.run(order=1)\n    def test_itemgroup_selectsuccess3(self, login_to_itemgroup):\n        driver = login_to_itemgroup  # WebDriver 实例\n        item = ItemPage(driver)  # 用 driver 初始化 ItemPage\n    \n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料名称\n        item.click_button('//div[text()=\"物料组代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        item.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        item.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"产品A\",\n        )\n    \n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        item.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        sleep(1)\n        actions.double_click(double_click).perform()\n        # 定义or元素的XPath\n        or_xpath = '//div[text()=\"or\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击or元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, or_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            or_found = False\n    \n            while attempt < max_attempts and not or_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找or元素\n                    or_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, or_xpath))\n                    )\n                    or_element.click()\n                    or_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not or_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'or'元素\")\n    \n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        item.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击物料优先度\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        item.click_button('//div[text()=\"物料优先度\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        item.click_button('//div[text()=\">\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值0\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            \"0\",\n        )\n        # 点击（\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        item.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 定位第一行物料优先度\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[contains(@class,\"vxe-body--row\")][1]/td[6]'\n        ).text\n        itemname = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[contains(@class,\"vxe-body--row\")][1]/td[2]'\n        ).text\n        code = item.get_find_element_xpath(\n            '//tr[./td[2]//span[text()=\"产品A\"]]//td[6]'\n        ).text\n>       assert int(code) <= 0 and int(itemcode) > 0 and itemname == \"1测试A\"\nE       AssertionError: assert (0 <= 0 and 1 > 0 and '1测试A1111测试A' == '1测试A'\nE        +  where 0 = int('0')\nE        +  and   1 = int('1')\nE         \nE         \u001B[0m\u001B[91m- 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1测试A1111测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_itemgroup.py:956: AssertionError","steps":[],"attachments":[{"uid":"293734bcb52fbc78","name":"test_itemgroup_selectsuccess3_failure","source":"293734bcb52fbc78.png","type":"image/png","size":96511},{"uid":"4b3eeefd7c0ad9a8","name":"test_itemgroup_selectsuccess3_source","source":"4b3eeefd7c0ad9a8.html","type":"text/html","size":1323877},{"uid":"f7e6a8e4863c1776","name":"log","source":"f7e6a8e4863c1776.txt","type":"text/plain","size":3484}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_itemgroup::0","time":{"start":1755779546885,"stop":1755779549049,"duration":2164},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"查询物料组代码包含产品A或物料优先度>0"},{"name":"feature","value":"物料组表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_itemgroup"},{"name":"subSuite","value":"TestItemGroupPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21852-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_itemgroup"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"7c1b7653b92d9b9b.json","parameterValues":[]}