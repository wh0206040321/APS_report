{"uid":"1a45eaece78311ca","name":"test_spec_selectsuccess2","fullName":"Tests.test_items.test_spec1.TestSpecPage#test_spec_selectsuccess2","historyId":"d5d39711d40631da11c787c89978b4e5","time":{"start":1753097532868,"stop":1753097552090,"duration":19222},"status":"failed","statusMessage":"AssertionError: assert ('1' in '111' and 1 > 10)\n +  where 1 = int('1')","statusTrace":"self = <test_items.test_spec1.TestSpecPage object at 0x0000024D1F8640A0>, login_to_spec1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"432c4dad33bbcff4834f99e3990f15ac\")>\n\n    @allure.story(\"查询名称包含1并且显示顺序>10\")\n    # @pytest.mark.run(order=1)\n    def test_spec_selectsuccess2(self, login_to_spec1):\n        driver = login_to_spec1  # WebDriver 实例\n        spec = Spec1Page(driver)  # 用 driver 初始化 Spec1Page\n    \n        # 点击查询\n        spec.click_sel_button()\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料名称\n        spec.click_button('//div[text()=\"名称\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        spec.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        spec.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        spec.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"1\",\n        )\n    \n        # 点击（\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        spec.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        actions.double_click(double_click).perform()\n        # 定义and元素的XPath\n        and_xpath = '//div[text()=\"and\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击and元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, and_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            and_found = False\n    \n            while attempt < max_attempts and not and_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找and元素\n                    and_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, and_xpath))\n                    )\n                    and_element.click()\n                    and_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not and_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'and'元素\")\n    \n        # 点击（\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        spec.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击显示顺序\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        spec.click_button('//div[text()=\"显示顺序\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        spec.click_button('//div[text()=\">\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        spec.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            \"10\",\n        )\n        # 点击（\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        spec.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        spec.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 定位第一行\n        specname = spec.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[contains(@class,\"vxe-body--row\")][1]/td[3]'\n        ).text\n        specorder = spec.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[contains(@class,\"vxe-body--row\")][1]/td[5]'\n        ).text\n        # 判断第一行名称包含1、显示顺序>10\n>       assert \"1\" in specname and int(specorder) > 10\nE       AssertionError: assert ('1' in '111' and 1 > 10)\nE        +  where 1 = int('1')\n\nTests\\test_items\\test_spec1.py:649: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_spec1","time":{"start":1753097523896,"stop":1753097532868,"duration":8972},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('1' in '111' and 1 > 10)\n +  where 1 = int('1')","statusTrace":"self = <test_items.test_spec1.TestSpecPage object at 0x0000024D1F8640A0>, login_to_spec1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"432c4dad33bbcff4834f99e3990f15ac\")>\n\n    @allure.story(\"查询名称包含1并且显示顺序>10\")\n    # @pytest.mark.run(order=1)\n    def test_spec_selectsuccess2(self, login_to_spec1):\n        driver = login_to_spec1  # WebDriver 实例\n        spec = Spec1Page(driver)  # 用 driver 初始化 Spec1Page\n    \n        # 点击查询\n        spec.click_sel_button()\n        sleep(1)\n    \n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料名称\n        spec.click_button('//div[text()=\"名称\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击（\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[3]'\n        )\n        spec.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击比较关系框\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击包含\n        spec.click_button('//div[text()=\"包含\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        spec.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"1\",\n        )\n    \n        # 点击（\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[7]'\n        )\n        spec.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[2]',\n        )\n        # 双击命令\n        actions.double_click(double_click).perform()\n        # 定义and元素的XPath\n        and_xpath = '//div[text()=\"and\" and contains(@optid,\"opt_\")]'\n    \n        try:\n            # 首先尝试直接查找并点击and元素\n            and_element = WebDriverWait(driver, 2).until(\n                EC.presence_of_element_located((By.XPATH, and_xpath))\n            )\n            and_element.click()\n        except:\n            # 如果直接查找失败，进入循环双击操作\n            max_attempts = 5\n            attempt = 0\n            and_found = False\n    \n            while attempt < max_attempts and not and_found:\n                try:\n                    # 执行双击操作\n                    actions.double_click(double_click).perform()\n                    sleep(1)\n    \n                    # 再次尝试查找and元素\n                    and_element = WebDriverWait(driver, 2).until(\n                        EC.presence_of_element_located((By.XPATH, and_xpath))\n                    )\n                    and_element.click()\n                    and_found = True\n                except:\n                    attempt += 1\n                    sleep(1)\n    \n            if not and_found:\n                raise Exception(f\"在{max_attempts}次尝试后仍未找到并点击到'and'元素\")\n    \n        # 点击（\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[3]'\n        )\n        spec.click_button('//div[text()=\"(\" and contains(@optid,\"opt_\")]')\n        # 点击显示顺序\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[4]'\n        )\n        spec.click_button('//div[text()=\"显示顺序\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[5]//input'\n        )\n        # 点击>\n        spec.click_button('//div[text()=\">\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        spec.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[6]//input',\n            \"10\",\n        )\n        # 点击（\n        spec.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[2]/td[7]'\n        )\n        spec.click_button('//div[text()=\")\" and contains(@optid,\"opt_\")]')\n    \n        sleep(1)\n    \n        # 点击确认\n        spec.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[3]'\n        )\n        sleep(1)\n        # 定位第一行\n        specname = spec.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[contains(@class,\"vxe-body--row\")][1]/td[3]'\n        ).text\n        specorder = spec.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[contains(@class,\"vxe-body--row\")][1]/td[5]'\n        ).text\n        # 判断第一行名称包含1、显示顺序>10\n>       assert \"1\" in specname and int(specorder) > 10\nE       AssertionError: assert ('1' in '111' and 1 > 10)\nE        +  where 1 = int('1')\n\nTests\\test_items\\test_spec1.py:649: AssertionError","steps":[],"attachments":[{"uid":"d8b456d1f9ee9401","name":"test_spec_selectsuccess2_failure","source":"d8b456d1f9ee9401.png","type":"image/png","size":89403},{"uid":"4e6dc83057347c9b","name":"test_spec_selectsuccess2_source","source":"4e6dc83057347c9b.html","type":"text/html","size":1296482},{"uid":"5f6088061f46cdfe","name":"log","source":"5f6088061f46cdfe.txt","type":"text/plain","size":3372}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"login_to_spec1::0","time":{"start":1753097552335,"stop":1753097554451,"duration":2116},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"story","value":"查询名称包含1并且显示顺序>10"},{"name":"feature","value":"生产特征表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_spec1"},{"name":"subSuite","value":"TestSpecPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26464-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_spec1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"1a45eaece78311ca.json","parameterValues":[]}