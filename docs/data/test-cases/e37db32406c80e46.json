{"uid":"e37db32406c80e46","name":"test_coverage_selectcodesuccess","fullName":"Tests.test_items.test_coverage.TestCoveragePage#test_coverage_selectcodesuccess","historyId":"9d9fad53d2ebd471644ad342c06aeade","time":{"start":1753876283636,"stop":1753876295396,"duration":11760},"status":"failed","statusMessage":"AssertionError: assert '12' == 'A'\n  \n  \u001B[0m\u001B[91m- A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 12\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_coverage.TestCoveragePage object at 0x0000020123A0F640>\nlogin_to_coverage = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e022955e33c50d8925b244a0afdc65e6\")>\n\n    @allure.story(\"查询资源成功\")\n    # @pytest.mark.run(order=1)\n    def test_coverage_selectcodesuccess(self, login_to_coverage):\n        driver = login_to_coverage  # WebDriver 实例\n        coverage = Coverage(driver)  # 用 driver 初始化 Coverage\n    \n        resource = coverage.get_find_element_xpath('(//div[@id=\"canvasGird0\"]//table[@class=\"vxe-table--body\"])[1]//tr[2]/td[2]').text\n    \n        # 点击查询\n        coverage.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击覆盖日历代码\n        coverage.click_button('//div[text()=\"资源代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        coverage.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        coverage.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        coverage.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            resource,\n        )\n        sleep(3)\n    \n        # 点击确认\n        coverage.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(2)\n        # 定位第一行\n        coveragecode = coverage.get_find_element_xpath(\n            '(//div[@id=\"canvasGird0\"]//table[@class=\"vxe-table--body\"])[1]//tr[1]/td[2]'\n        ).text\n>       assert coveragecode == resource\nE       AssertionError: assert '12' == 'A'\nE         \nE         \u001B[0m\u001B[91m- A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 12\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_coverage.py:697: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_coverage","time":{"start":1753876275530,"stop":1753876283635,"duration":8105},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '12' == 'A'\n  \n  \u001B[0m\u001B[91m- A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 12\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_coverage.TestCoveragePage object at 0x0000020123A0F640>\nlogin_to_coverage = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e022955e33c50d8925b244a0afdc65e6\")>\n\n    @allure.story(\"查询资源成功\")\n    # @pytest.mark.run(order=1)\n    def test_coverage_selectcodesuccess(self, login_to_coverage):\n        driver = login_to_coverage  # WebDriver 实例\n        coverage = Coverage(driver)  # 用 driver 初始化 Coverage\n    \n        resource = coverage.get_find_element_xpath('(//div[@id=\"canvasGird0\"]//table[@class=\"vxe-table--body\"])[1]//tr[2]/td[2]').text\n    \n        # 点击查询\n        coverage.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击覆盖日历代码\n        coverage.click_button('//div[text()=\"资源代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        coverage.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        coverage.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        coverage.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            resource,\n        )\n        sleep(3)\n    \n        # 点击确认\n        coverage.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(2)\n        # 定位第一行\n        coveragecode = coverage.get_find_element_xpath(\n            '(//div[@id=\"canvasGird0\"]//table[@class=\"vxe-table--body\"])[1]//tr[1]/td[2]'\n        ).text\n>       assert coveragecode == resource\nE       AssertionError: assert '12' == 'A'\nE         \nE         \u001B[0m\u001B[91m- A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 12\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_coverage.py:697: AssertionError","steps":[],"attachments":[{"uid":"2859af4af8089c75","name":"test_coverage_selectcodesuccess_failure","source":"2859af4af8089c75.png","type":"image/png","size":95103},{"uid":"e34a325c00d1948c","name":"test_coverage_selectcodesuccess_source","source":"e34a325c00d1948c.html","type":"text/html","size":1294583},{"uid":"7bfb55394e0fc152","name":"log","source":"7bfb55394e0fc152.txt","type":"text/plain","size":3369}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_coverage::0","time":{"start":1753876295595,"stop":1753876297761,"duration":2166},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"查询资源成功"},{"name":"feature","value":"覆盖日历表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_coverage"},{"name":"subSuite","value":"TestCoveragePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"47600-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_coverage"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2ef5b5785c81ff25","status":"failed","statusDetails":"AssertionError: assert '12' == 'A'\n  \n  \u001B[0m\u001B[91m- A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 12\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","time":{"start":1753876261361,"stop":1753876273145,"duration":11784}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e37db32406c80e46.json","parameterValues":[]}