{"uid":"4bd9684c89c3f1b9","name":"test_changeI_addall","fullName":"Tests.test_items.test_changeI.TestChangeIPage#test_changeI_addall","historyId":"7e3e53ab32e66a58a69ceda7fcf3a81d","time":{"start":1761142059771,"stop":1761142088053,"duration":28282},"status":"broken","statusMessage":"ValueError: invalid literal for int() with base 10: ''","statusTrace":"self = <test_items.test_changeI.TestChangeIPage object at 0x0000027FE5A74BB0>, login_to_changeI = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0fe3ebfa3fb71f89a3c271c11549c12d\")>\n\n    @allure.story(\"输入全部数据，添加保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_changeI_addall(self, login_to_changeI):\n        driver = login_to_changeI  # WebDriver 实例\n        changeI = ChangeI(driver)  # 用 driver 初始化 ChangeI\n        adds = AddsPages(driver)\n        input_value = '11测试全部数据'\n        changeI.click_add_button()\n        text_list = [\n            '//label[text()=\"备注\"]/following-sibling::div//input',\n        ]\n        adds.batch_modify_input(text_list, input_value)\n    \n        value_bos = '(//div[@class=\"vxe-modal--body\"]//table[@class=\"vxe-table--body\"]//tr[1]/td[2])[2]/div/span'\n        box_list = [\n            '//label[text()=\"资源\"]/following-sibling::div//i',\n            '//label[text()=\"前品目\"]/following-sibling::div//i',\n            '//label[text()=\"后品目\"]/following-sibling::div//i',\n        ]\n        adds.batch_modify_dialog_box(box_list, value_bos)\n        resource_value = changeI.get_find_element_xpath(\n            '//label[text()=\"资源\"]/following-sibling::div//input').get_attribute(\"value\")\n    \n        code_value = '//span[text()=\"AdvanceAlongResourceWorkingTime\"]'\n        code_list = [\n            '//label[text()=\"切换时间调整表达式\"]/following-sibling::div//i',\n        ]\n        adds.batch_modify_code_box(code_list, code_value)\n    \n        input_num_value = '1'\n        num_list = [\n            '//label[text()=\"优先度\"]/following-sibling::div//input',\n            '//label[text()=\"切换时间(分钟)\"]/following-sibling::div//input',\n        ]\n        adds.batch_modify_input(num_list, input_num_value)\n    \n        box_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in box_list]\n        code_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in code_list]\n        all_value = text_list + box_input_list + code_input_list + num_list\n        len_num = len(all_value)\n        before_all_value = adds.batch_acquisition_input(all_value)\n        changeI.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        sleep(1)\n        driver.refresh()\n        sleep(3)\n        num = adds.go_settings_page()\n        sleep(2)\n        changeI.click_button(\n            '//div[p[text()=\"更新时间\"]]/div[1]'\n        )\n        sleep(1)\n        changeI.click_button(\n            '//div[p[text()=\"更新时间\"]]/div[1]'\n        )\n        changeI.click_button(\n            f'(//div[@class=\"vxe-table--main-wrapper\"])[2]//table[@class=\"vxe-table--body\"]//tr/td[2][.//span[text()=\"{resource_value}\"]]')\n        sleep(1)\n        changeI.click_edi_button()\n        after_all_value = adds.batch_acquisition_input(all_value)\n        username = changeI.get_find_element_xpath(\n            '//label[text()=\"更新者\"]/following-sibling::div//input').get_attribute(\n            \"value\")\n        updatatime = changeI.get_find_element_xpath(\n            '//label[text()=\"更新时间\"]/following-sibling::div//input').get_attribute(\"value\")\n        today_str = date.today().strftime('%Y/%m/%d')\n>       assert before_all_value == after_all_value and username == DateDriver().username and today_str in updatatime and int(\n            num) == (int(len_num) + 2)\nE       ValueError: invalid literal for int() with base 10: ''\n\nTests\\test_items\\test_changeI.py:1034: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_changeI","time":{"start":1761142045940,"stop":1761142059770,"duration":13830},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"ValueError: invalid literal for int() with base 10: ''","statusTrace":"self = <test_items.test_changeI.TestChangeIPage object at 0x0000027FE5A74BB0>, login_to_changeI = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0fe3ebfa3fb71f89a3c271c11549c12d\")>\n\n    @allure.story(\"输入全部数据，添加保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_changeI_addall(self, login_to_changeI):\n        driver = login_to_changeI  # WebDriver 实例\n        changeI = ChangeI(driver)  # 用 driver 初始化 ChangeI\n        adds = AddsPages(driver)\n        input_value = '11测试全部数据'\n        changeI.click_add_button()\n        text_list = [\n            '//label[text()=\"备注\"]/following-sibling::div//input',\n        ]\n        adds.batch_modify_input(text_list, input_value)\n    \n        value_bos = '(//div[@class=\"vxe-modal--body\"]//table[@class=\"vxe-table--body\"]//tr[1]/td[2])[2]/div/span'\n        box_list = [\n            '//label[text()=\"资源\"]/following-sibling::div//i',\n            '//label[text()=\"前品目\"]/following-sibling::div//i',\n            '//label[text()=\"后品目\"]/following-sibling::div//i',\n        ]\n        adds.batch_modify_dialog_box(box_list, value_bos)\n        resource_value = changeI.get_find_element_xpath(\n            '//label[text()=\"资源\"]/following-sibling::div//input').get_attribute(\"value\")\n    \n        code_value = '//span[text()=\"AdvanceAlongResourceWorkingTime\"]'\n        code_list = [\n            '//label[text()=\"切换时间调整表达式\"]/following-sibling::div//i',\n        ]\n        adds.batch_modify_code_box(code_list, code_value)\n    \n        input_num_value = '1'\n        num_list = [\n            '//label[text()=\"优先度\"]/following-sibling::div//input',\n            '//label[text()=\"切换时间(分钟)\"]/following-sibling::div//input',\n        ]\n        adds.batch_modify_input(num_list, input_num_value)\n    \n        box_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in box_list]\n        code_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in code_list]\n        all_value = text_list + box_input_list + code_input_list + num_list\n        len_num = len(all_value)\n        before_all_value = adds.batch_acquisition_input(all_value)\n        changeI.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        sleep(1)\n        driver.refresh()\n        sleep(3)\n        num = adds.go_settings_page()\n        sleep(2)\n        changeI.click_button(\n            '//div[p[text()=\"更新时间\"]]/div[1]'\n        )\n        sleep(1)\n        changeI.click_button(\n            '//div[p[text()=\"更新时间\"]]/div[1]'\n        )\n        changeI.click_button(\n            f'(//div[@class=\"vxe-table--main-wrapper\"])[2]//table[@class=\"vxe-table--body\"]//tr/td[2][.//span[text()=\"{resource_value}\"]]')\n        sleep(1)\n        changeI.click_edi_button()\n        after_all_value = adds.batch_acquisition_input(all_value)\n        username = changeI.get_find_element_xpath(\n            '//label[text()=\"更新者\"]/following-sibling::div//input').get_attribute(\n            \"value\")\n        updatatime = changeI.get_find_element_xpath(\n            '//label[text()=\"更新时间\"]/following-sibling::div//input').get_attribute(\"value\")\n        today_str = date.today().strftime('%Y/%m/%d')\n>       assert before_all_value == after_all_value and username == DateDriver().username and today_str in updatatime and int(\n            num) == (int(len_num) + 2)\nE       ValueError: invalid literal for int() with base 10: ''\n\nTests\\test_items\\test_changeI.py:1034: ValueError","steps":[],"attachments":[{"uid":"4709ac879445f8f0","name":"test_changeI_addall_failure","source":"4709ac879445f8f0.png","type":"image/png","size":69286},{"uid":"5eb9ee461544b2a7","name":"test_changeI_addall_source","source":"5eb9ee461544b2a7.html","type":"text/html","size":1274552},{"uid":"c9dc945baa4d1c38","name":"log","source":"c9dc945baa4d1c38.txt","type":"text/plain","size":6312}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_changeI::0","time":{"start":1761142088412,"stop":1761142090688,"duration":2276},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"输入全部数据，添加保存成功"},{"name":"feature","value":"物品切换表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_changeI"},{"name":"subSuite","value":"TestChangeIPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"25856-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_changeI"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"4bd9684c89c3f1b9.json","parameterValues":[]}