{"uid":"30068481c92ae135","name":"test_psi_select4","fullName":"Tests.test_system.test_psi.TestPSIPage#test_psi_select4","historyId":"f01c4b7a0f8d454eeca018cc7e4fe8fa","time":{"start":1761070032901,"stop":1761070037463,"duration":4562},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff719876f65+78965]\n\tGetHandleVerifier [0x0x7ff719876fc0+79056]\n\t(No symbol) [0x0x7ff719609dda]\n\t(No symbol) [0x0x7ff7196117c1]\n\t(No symbol) [0x0x7ff71961482c]\n\t(No symbol) [0x0x7ff7196148ff]\n\t(No symbol) [0x0x7ff719659d76]\n\t(No symbol) [0x0x7ff71968866a]\n\t(No symbol) [0x0x7ff719652b56]\n\t(No symbol) [0x0x7ff719688880]\n\t(No symbol) [0x0x7ff7196b0dbe]\n\t(No symbol) [0x0x7ff719688443]\n\t(No symbol) [0x0x7ff719651311]\n\t(No symbol) [0x0x7ff7196520a3]\n\tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\n\tGetHandleVerifier [0x0x7ff719b28993+2903715]\n\tGetHandleVerifier [0x0x7ff719b46aed+3026941]\n\tGetHandleVerifier [0x0x7ff7198916fe+187406]\n\tGetHandleVerifier [0x0x7ff7198996ef+220159]\n\tGetHandleVerifier [0x0x7ff71987faf4+114692]\n\tGetHandleVerifier [0x0x7ff71987fca9+115129]\n\tGetHandleVerifier [0x0x7ff7198664d8+10728]\n\tBaseThreadInitThunk [0x0x7ffee1537374+20]\n\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]","statusTrace":"self = <test_system.test_psi.TestPSIPage object at 0x00000173A68E7FA0>, login_to_psi = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2b1857c9c2a896ff91a1306baed326c6\")>\n\n    @allure.story(\"过滤条件查询，设置符合开头查询成功\")\n    # @pytest.mark.run(order=1)\n    def test_psi_select4(self, login_to_psi):\n        driver = login_to_psi  # WebDriver 实例\n        psi = PsiPage(driver)  # 用 driver 初始化 PsiPage\n        name = \"1测试\"\n        psi.click_button('//div[p[text()=\"PSI名称\"]]/following-sibling::div//i')\n        psi.hover(\"符合开头\")\n        sleep(1)\n        psi.enter_texts('//div[p[text()=\"PSI名称\"]]/following-sibling::div//input', name)\n        eles = psi.finds_elements(By.XPATH, '//table[@class=\"vxe-table--body\"]//tr//td[2]')\n        sleep(1)\n>       list_ = [ele.text for ele in eles]\n\nTests\\test_system\\test_psi.py:383: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTests\\test_system\\test_psi.py:383: in <listcomp>\n    list_ = [ele.text for ele in eles]\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:111: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:574: in _execute\n    return self._parent.execute(command, params)\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000173A6C03220>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...ff7198664d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffee1537374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196117c1]\nE       \t(No symbol) [0x0x7ff71961482c]\nE       \t(No symbol) [0x0x7ff7196148ff]\nE       \t(No symbol) [0x0x7ff719659d76]\nE       \t(No symbol) [0x0x7ff71968866a]\nE       \t(No symbol) [0x0x7ff719652b56]\nE       \t(No symbol) [0x0x7ff719688880]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_psi","time":{"start":1761070017930,"stop":1761070032899,"duration":14969},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff719876f65+78965]\n\tGetHandleVerifier [0x0x7ff719876fc0+79056]\n\t(No symbol) [0x0x7ff719609dda]\n\t(No symbol) [0x0x7ff7196117c1]\n\t(No symbol) [0x0x7ff71961482c]\n\t(No symbol) [0x0x7ff7196148ff]\n\t(No symbol) [0x0x7ff719659d76]\n\t(No symbol) [0x0x7ff71968866a]\n\t(No symbol) [0x0x7ff719652b56]\n\t(No symbol) [0x0x7ff719688880]\n\t(No symbol) [0x0x7ff7196b0dbe]\n\t(No symbol) [0x0x7ff719688443]\n\t(No symbol) [0x0x7ff719651311]\n\t(No symbol) [0x0x7ff7196520a3]\n\tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\n\tGetHandleVerifier [0x0x7ff719b28993+2903715]\n\tGetHandleVerifier [0x0x7ff719b46aed+3026941]\n\tGetHandleVerifier [0x0x7ff7198916fe+187406]\n\tGetHandleVerifier [0x0x7ff7198996ef+220159]\n\tGetHandleVerifier [0x0x7ff71987faf4+114692]\n\tGetHandleVerifier [0x0x7ff71987fca9+115129]\n\tGetHandleVerifier [0x0x7ff7198664d8+10728]\n\tBaseThreadInitThunk [0x0x7ffee1537374+20]\n\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]","statusTrace":"self = <test_system.test_psi.TestPSIPage object at 0x00000173A68E7FA0>, login_to_psi = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2b1857c9c2a896ff91a1306baed326c6\")>\n\n    @allure.story(\"过滤条件查询，设置符合开头查询成功\")\n    # @pytest.mark.run(order=1)\n    def test_psi_select4(self, login_to_psi):\n        driver = login_to_psi  # WebDriver 实例\n        psi = PsiPage(driver)  # 用 driver 初始化 PsiPage\n        name = \"1测试\"\n        psi.click_button('//div[p[text()=\"PSI名称\"]]/following-sibling::div//i')\n        psi.hover(\"符合开头\")\n        sleep(1)\n        psi.enter_texts('//div[p[text()=\"PSI名称\"]]/following-sibling::div//input', name)\n        eles = psi.finds_elements(By.XPATH, '//table[@class=\"vxe-table--body\"]//tr//td[2]')\n        sleep(1)\n>       list_ = [ele.text for ele in eles]\n\nTests\\test_system\\test_psi.py:383: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTests\\test_system\\test_psi.py:383: in <listcomp>\n    list_ = [ele.text for ele in eles]\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:111: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:574: in _execute\n    return self._parent.execute(command, params)\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000173A6C03220>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...ff7198664d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffee1537374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196117c1]\nE       \t(No symbol) [0x0x7ff71961482c]\nE       \t(No symbol) [0x0x7ff7196148ff]\nE       \t(No symbol) [0x0x7ff719659d76]\nE       \t(No symbol) [0x0x7ff71968866a]\nE       \t(No symbol) [0x0x7ff719652b56]\nE       \t(No symbol) [0x0x7ff719688880]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: StaleElementReferenceException","steps":[],"attachments":[{"uid":"884537447d915a5b","name":"test_psi_select4_failure","source":"884537447d915a5b.png","type":"image/png","size":75398},{"uid":"d4392cc2cdd90cb9","name":"test_psi_select4_source","source":"d4392cc2cdd90cb9.html","type":"text/html","size":1136209},{"uid":"ccb9430bf6cb28b9","name":"log","source":"ccb9430bf6cb28b9.txt","type":"text/plain","size":2239}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_psi::0","time":{"start":1761070038070,"stop":1761070040494,"duration":2424},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"过滤条件查询，设置符合开头查询成功"},{"name":"feature","value":"PSI设置用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_psi"},{"name":"subSuite","value":"TestPSIPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_psi"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"43cfccecfa9e868a","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff719876f65+78965]\n\tGetHandleVerifier [0x0x7ff719876fc0+79056]\n\t(No symbol) [0x0x7ff719609dda]\n\t(No symbol) [0x0x7ff7196117c1]\n\t(No symbol) [0x0x7ff71961482c]\n\t(No symbol) [0x0x7ff7196148ff]\n\t(No symbol) [0x0x7ff719659d76]\n\t(No symbol) [0x0x7ff71968866a]\n\t(No symbol) [0x0x7ff719652b56]\n\t(No symbol) [0x0x7ff719688880]\n\t(No symbol) [0x0x7ff7196b0dbe]\n\t(No symbol) [0x0x7ff719688443]\n\t(No symbol) [0x0x7ff719651311]\n\t(No symbol) [0x0x7ff7196520a3]\n\tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\n\tGetHandleVerifier [0x0x7ff719b28993+2903715]\n\tGetHandleVerifier [0x0x7ff719b46aed+3026941]\n\tGetHandleVerifier [0x0x7ff7198916fe+187406]\n\tGetHandleVerifier [0x0x7ff7198996ef+220159]\n\tGetHandleVerifier [0x0x7ff71987faf4+114692]\n\tGetHandleVerifier [0x0x7ff71987fca9+115129]\n\tGetHandleVerifier [0x0x7ff7198664d8+10728]\n\tBaseThreadInitThunk [0x0x7ffee1537374+20]\n\tRtlUserThreadStart [0x0x7ffee1a7cc91+33]","time":{"start":1761070010265,"stop":1761070014805,"duration":4540}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"30068481c92ae135.json","parameterValues":[]}