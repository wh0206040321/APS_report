{"uid":"8d246197dfbdcab9","name":"test_item_addcodefail","fullName":"Tests.test_material.test_procurementPO.TestItemPage#test_item_addcodefail","historyId":"dd1721f7dfc93693b47394f313ff66f0","time":{"start":1754931961846,"stop":1754931965656,"duration":3810},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF590640>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF590640> = <test_material.test_procurementPO.TestItemPage object at 0x000001C1DEA4A110>.item","statusTrace":"self = <test_material.test_procurementPO.TestItemPage object at 0x000001C1DEA4A110>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"496adf45395294126c5083d0af4fe1b6\")>\n\n    @allure.story(\"添加交付需求明细信息，有多个必填只填写一项，不允许提交\")\n    # @pytest.mark.run(order=2)\n    def test_item_addcodefail(self, login_to_item):\n        # 点击新增按钮\n        self.item.click_add_button()\n        # 输入第一个必填项\n        self.item.enter_texts(\"//div[@id='p34nag46-7evf']//input\", \"text1231\")\n        # 点击确定\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n        # 声明必填项的xpath和判断的边框颜色\n        xpath_list = [\n            \"//div[@id='ywz9q11i-sp3b']//input\",\n            \"//div[@id='l7p1eln5-w34j']//input\"\n        ]\n        color_value = \"rgb(255, 0, 0)\"\n        # 获取必填项公共方法判断颜色的结果\n        val = self.item.add_none(xpath_list, color_value)\n        assert val\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF590640>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF590640> = <test_material.test_procurementPO.TestItemPage object at 0x000001C1DEA4A110>.item\n\nTests\\test_material\\test_procurementPO.py:163: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1754931947535,"stop":1754931956124,"duration":8589},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"setup","time":{"start":1754931961844,"stop":1754931961846,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF590640>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF590640> = <test_material.test_procurementPO.TestItemPage object at 0x000001C1DEA4A110>.item","statusTrace":"self = <test_material.test_procurementPO.TestItemPage object at 0x000001C1DEA4A110>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"496adf45395294126c5083d0af4fe1b6\")>\n\n    @allure.story(\"添加交付需求明细信息，有多个必填只填写一项，不允许提交\")\n    # @pytest.mark.run(order=2)\n    def test_item_addcodefail(self, login_to_item):\n        # 点击新增按钮\n        self.item.click_add_button()\n        # 输入第一个必填项\n        self.item.enter_texts(\"//div[@id='p34nag46-7evf']//input\", \"text1231\")\n        # 点击确定\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        sleep(1)\n        # 声明必填项的xpath和判断的边框颜色\n        xpath_list = [\n            \"//div[@id='ywz9q11i-sp3b']//input\",\n            \"//div[@id='l7p1eln5-w34j']//input\"\n        ]\n        color_value = \"rgb(255, 0, 0)\"\n        # 获取必填项公共方法判断颜色的结果\n        val = self.item.add_none(xpath_list, color_value)\n        assert val\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF590640>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x000001C1DF590640> = <test_material.test_procurementPO.TestItemPage object at 0x000001C1DEA4A110>.item\n\nTests\\test_material\\test_procurementPO.py:163: AssertionError","steps":[],"attachments":[{"uid":"b3b845470f26cfc3","name":"log","source":"b3b845470f26cfc3.txt","type":"text/plain","size":787}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_item::0","time":{"start":1754932207945,"stop":1754932210093,"duration":2148},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"story","value":"添加交付需求明细信息，有多个必填只填写一项，不允许提交"},{"name":"feature","value":"采购PO答复测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_procurementPO"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"24412-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_procurementPO"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"8d246197dfbdcab9.json","parameterValues":[]}