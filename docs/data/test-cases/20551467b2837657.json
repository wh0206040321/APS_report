{"uid":"20551467b2837657","name":"test_sched_attribute1","fullName":"Tests.test_material.test_qtProgrammeMan.TestSchedPage#test_sched_attribute1","historyId":"1b996c8754caa6b2e2bc06d14fa47a2b","time":{"start":1753804598420,"stop":1753804603035,"duration":4615},"status":"failed","statusMessage":"AssertionError: assert '计划方案已存在' == '请选择公共数据计划单元'\n  \n  \u001B[0m\u001B[91m- 请选择公共数据计划单元\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 计划方案已存在\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_material.test_qtProgrammeMan.TestSchedPage object at 0x000001DD81FB6770>\nlogin_to_sched = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"26f561cd00482dd28d7b26b41dd243d1\")>\n\n    @allure.story(\"属性设置-未选择必填项，不允许提交\")\n    # @pytest.mark.run(order=1)\n    def test_sched_attribute1(self, login_to_sched):\n        driver = login_to_sched  # WebDriver 实例\n        sched = SchedPage(driver)  # 用 driver 初始化 SchedPage\n        name = \"标准方案复制\"\n        # 选择标准方案复制\n        sched.click_button(f'//ul[@visible=\"visible\"]//ul//span[text()=\"{name}\"]')\n        sched.click_attribute_button()\n    \n        sched.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        # # 点击下拉框\n        # sched.click_button('//div[text()=\"按分派规则顺序排列\"]/following-sibling::div')\n        # sched.click_button(\n        #     '//div[text()=\"按分派规则顺序排列\"]/following-sibling::div//ul[2]/li[2]'\n        # )\n        # sleep(1)\n        # befort_input = sched.get_find_element_xpath(\n        #     '//div[text()=\"按分派规则顺序排列\"]/following-sibling::div//input/following-sibling::div/input'\n        # ).get_attribute(\"value\")\n        # sched.get_after_value(name)\n        # after_input = sched.get_find_element_xpath(\n        #     '//div[text()=\"按分派规则顺序排列\"]/following-sibling::div//input/following-sibling::div/input'\n        # ).get_attribute(\"value\")\n    \n        message = WebDriverWait(driver, 10).until(\n            EC.visibility_of_element_located(\n                (By.XPATH, '//div[@class=\"ivu-message-custom-content ivu-message-error\"]//span')\n            )\n        )\n        # 检查元素是否包含子节点\n        sleep(1)\n>       assert message.text == \"请选择公共数据计划单元\"\nE       AssertionError: assert '计划方案已存在' == '请选择公共数据计划单元'\nE         \nE         \u001B[0m\u001B[91m- 请选择公共数据计划单元\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 计划方案已存在\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_material\\test_qtProgrammeMan.py:502: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_sched","time":{"start":1753804397666,"stop":1753804406673,"duration":9007},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '计划方案已存在' == '请选择公共数据计划单元'\n  \n  \u001B[0m\u001B[91m- 请选择公共数据计划单元\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 计划方案已存在\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_material.test_qtProgrammeMan.TestSchedPage object at 0x000001DD81FB6770>\nlogin_to_sched = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"26f561cd00482dd28d7b26b41dd243d1\")>\n\n    @allure.story(\"属性设置-未选择必填项，不允许提交\")\n    # @pytest.mark.run(order=1)\n    def test_sched_attribute1(self, login_to_sched):\n        driver = login_to_sched  # WebDriver 实例\n        sched = SchedPage(driver)  # 用 driver 初始化 SchedPage\n        name = \"标准方案复制\"\n        # 选择标准方案复制\n        sched.click_button(f'//ul[@visible=\"visible\"]//ul//span[text()=\"{name}\"]')\n        sched.click_attribute_button()\n    \n        sched.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        # # 点击下拉框\n        # sched.click_button('//div[text()=\"按分派规则顺序排列\"]/following-sibling::div')\n        # sched.click_button(\n        #     '//div[text()=\"按分派规则顺序排列\"]/following-sibling::div//ul[2]/li[2]'\n        # )\n        # sleep(1)\n        # befort_input = sched.get_find_element_xpath(\n        #     '//div[text()=\"按分派规则顺序排列\"]/following-sibling::div//input/following-sibling::div/input'\n        # ).get_attribute(\"value\")\n        # sched.get_after_value(name)\n        # after_input = sched.get_find_element_xpath(\n        #     '//div[text()=\"按分派规则顺序排列\"]/following-sibling::div//input/following-sibling::div/input'\n        # ).get_attribute(\"value\")\n    \n        message = WebDriverWait(driver, 10).until(\n            EC.visibility_of_element_located(\n                (By.XPATH, '//div[@class=\"ivu-message-custom-content ivu-message-error\"]//span')\n            )\n        )\n        # 检查元素是否包含子节点\n        sleep(1)\n>       assert message.text == \"请选择公共数据计划单元\"\nE       AssertionError: assert '计划方案已存在' == '请选择公共数据计划单元'\nE         \nE         \u001B[0m\u001B[91m- 请选择公共数据计划单元\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 计划方案已存在\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_material\\test_qtProgrammeMan.py:502: AssertionError","steps":[],"attachments":[{"uid":"9835b0c0e7897453","name":"log","source":"9835b0c0e7897453.txt","type":"text/plain","size":1393}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_sched::0","time":{"start":1753805204740,"stop":1753805206950,"duration":2210},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"属性设置-未选择必填项，不允许提交"},{"name":"feature","value":"物控方案管理表测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_qtProgrammeMan"},{"name":"subSuite","value":"TestSchedPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"45800-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_qtProgrammeMan"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b051b8ef93ade8e","status":"failed","statusDetails":"AssertionError: assert '计划方案已存在' == '请选择公共数据计划单元'\n  \n  \u001B[0m\u001B[91m- 请选择公共数据计划单元\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 计划方案已存在\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","time":{"start":1753804593670,"stop":1753804598355,"duration":4685}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"20551467b2837657.json","parameterValues":[]}