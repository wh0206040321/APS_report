{"uid":"55ea01c477008464","name":"test_item_selectcodesuccess","fullName":"Tests.test_material.test_materialInventory.TestItemPage#test_item_selectcodesuccess","historyId":"dd56da9f42e5627e3bac274ffdf3aeee","time":{"start":1754929240852,"stop":1754929250054,"duration":9202},"status":"failed","statusMessage":"AssertionError: assert ('111' == '111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"5e97d42e493d32e8e5cb76255abe343f\", element=\"f.4294D416A1BC2B03D2386F559736DA99.d.AE9A15696487602B3E04EF9F6C2D5280.e.293\")>])","statusTrace":"self = <test_material.test_materialInventory.TestItemPage object at 0x000001C1DEA71120>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5e97d42e493d32e8e5cb76255abe343f\")>\n\n    @allure.story(\"查询物料代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectcodesuccess(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击工厂代码\n        item.click_button('//div[text()=\"物料代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"111\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        # 定位第一行是否为产品A\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        itemcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert itemcode == \"111\" and len(itemcode2) == 0\nE       assert ('111' == '111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"5e97d42e493d32e8e5cb76255abe343f\", element=\"f.4294D416A1BC2B03D2386F559736DA99.d.AE9A15696487602B3E04EF9F6C2D5280.e.293\")>])\n\nTests\\test_material\\test_materialInventory.py:515: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1754929232876,"stop":1754929240846,"duration":7970},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"setup","time":{"start":1754929240847,"stop":1754929240852,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('111' == '111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"5e97d42e493d32e8e5cb76255abe343f\", element=\"f.4294D416A1BC2B03D2386F559736DA99.d.AE9A15696487602B3E04EF9F6C2D5280.e.293\")>])","statusTrace":"self = <test_material.test_materialInventory.TestItemPage object at 0x000001C1DEA71120>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5e97d42e493d32e8e5cb76255abe343f\")>\n\n    @allure.story(\"查询物料代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectcodesuccess(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击工厂代码\n        item.click_button('//div[text()=\"物料代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"111\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        # 定位第一行是否为产品A\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        itemcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert itemcode == \"111\" and len(itemcode2) == 0\nE       assert ('111' == '111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"5e97d42e493d32e8e5cb76255abe343f\", element=\"f.4294D416A1BC2B03D2386F559736DA99.d.AE9A15696487602B3E04EF9F6C2D5280.e.293\")>])\n\nTests\\test_material\\test_materialInventory.py:515: AssertionError","steps":[],"attachments":[{"uid":"513ac1ab8cfc82b3","name":"test_item_selectcodesuccess_failure","source":"513ac1ab8cfc82b3.png","type":"image/png","size":91576},{"uid":"d43c241795f7934a","name":"test_item_selectcodesuccess_source","source":"d43c241795f7934a.html","type":"text/html","size":1272929},{"uid":"337ffa5365b80c3a","name":"log","source":"337ffa5365b80c3a.txt","type":"text/plain","size":1577}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_item::0","time":{"start":1754929250225,"stop":1754929252392,"duration":2167},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"story","value":"查询物料代码成功"},{"name":"feature","value":"物料库存测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialInventory"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"24412-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialInventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"55ea01c477008464.json","parameterValues":[]}