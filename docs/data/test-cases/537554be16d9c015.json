{"uid":"537554be16d9c015","name":"test_auditlog_defaultsele1","fullName":"Tests.test_system.test_auditLog.TestAuditLogPage#test_auditlog_defaultsele1","historyId":"f191bc4f3a5d93b98597c088aaa67dc6","time":{"start":1760985107653,"stop":1760985118595,"duration":10942},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_system.test_auditLog.TestAuditLogPage object at 0x0000014AE2D8ACB0>, login_to_auditlog = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"068666192903b24bcfb505348352143d\")>\n\n    @allure.story(\"点击查询默认显示当天有异常数据\")\n    # @pytest.mark.run(order=1)\n    def test_auditlog_defaultsele1(self, login_to_auditlog):\n        driver = login_to_auditlog  # WebDriver 实例\n        audit = AuditLogPage(driver)  # 用 driver 初始化 AuditLogPage\n        today = datetime.now().date()\n        # 格式化为年/月/日\n        formatted_date = today.strftime(\"%Y/%m/%d\")\n        audit.click_all_button(\"查询\")\n>       WebDriverWait(driver, 10).until(EC.invisibility_of_element_located((By.CLASS_NAME, \"is--visible\")))\n\nTests\\test_system\\test_auditLog.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"068666192903b24bcfb505348352143d\")>, method = <function invisibility_of_element_located.<locals>._predicate at 0x0000014AE1D12DD0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_auditlog","time":{"start":1760985087242,"stop":1760985107651,"duration":20409},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_system.test_auditLog.TestAuditLogPage object at 0x0000014AE2D8ACB0>, login_to_auditlog = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"068666192903b24bcfb505348352143d\")>\n\n    @allure.story(\"点击查询默认显示当天有异常数据\")\n    # @pytest.mark.run(order=1)\n    def test_auditlog_defaultsele1(self, login_to_auditlog):\n        driver = login_to_auditlog  # WebDriver 实例\n        audit = AuditLogPage(driver)  # 用 driver 初始化 AuditLogPage\n        today = datetime.now().date()\n        # 格式化为年/月/日\n        formatted_date = today.strftime(\"%Y/%m/%d\")\n        audit.click_all_button(\"查询\")\n>       WebDriverWait(driver, 10).until(EC.invisibility_of_element_located((By.CLASS_NAME, \"is--visible\")))\n\nTests\\test_system\\test_auditLog.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"068666192903b24bcfb505348352143d\")>, method = <function invisibility_of_element_located.<locals>._predicate at 0x0000014AE1D12DD0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"5f93b6cad375c44e","name":"test_auditlog_defaultsele1_failure","source":"5f93b6cad375c44e.png","type":"image/png","size":52474},{"uid":"bc4b1fe4393817c9","name":"test_auditlog_defaultsele1_source","source":"bc4b1fe4393817c9.html","type":"text/html","size":1099672},{"uid":"6e2bb76aaaf0a144","name":"log","source":"6e2bb76aaaf0a144.txt","type":"text/plain","size":894}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_auditlog::0","time":{"start":1760985119274,"stop":1760985121778,"duration":2504},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"审核日志页用例"},{"name":"story","value":"点击查询默认显示当天有异常数据"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_auditLog"},{"name":"subSuite","value":"TestAuditLogPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_auditLog"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"537554be16d9c015.json","parameterValues":[]}