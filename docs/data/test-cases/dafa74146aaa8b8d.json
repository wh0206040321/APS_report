{"uid":"dafa74146aaa8b8d","name":"test_order_editrepeat","fullName":"Tests.test_items.test_order.TestOrderPage#test_order_editrepeat","historyId":"f84751ea00c6aa7341e9d159e6417fb9","time":{"start":1754311610839,"stop":1754311613646,"duration":2807},"status":"failed","statusMessage":"AssertionError: 预期数据\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x0000012C8E246D40>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2d8d1b3740912aa6df84a9dbe5971619\")>\n\n    @allure.story(\"修改制造订单代码重复\")\n    # @pytest.mark.run(order=1)\n    def test_order_editrepeat(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        # 选中1B制造订单代码\n        order.click_button('(//span[text()=\"1B\"])[1]/ancestor::tr[1]/td[2]')\n        # 点击修改按钮\n        order.click_edi_button()\n    \n        # 制造订单代码输入1A\n        order.enter_texts('(//label[text()=\"订单代码\"])[1]/parent::div//input', \"1A\")\n        # 点击确定\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n        # 获取重复弹窗文字\n        error_popup = order.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert error_popup == \"记录已存在,请检查！\", f\"预期数据{error_popup}\"\nE       AssertionError: 预期数据\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_order.py:437: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_order","time":{"start":1754311602982,"stop":1754311610838,"duration":7856},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期数据\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x0000012C8E246D40>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2d8d1b3740912aa6df84a9dbe5971619\")>\n\n    @allure.story(\"修改制造订单代码重复\")\n    # @pytest.mark.run(order=1)\n    def test_order_editrepeat(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        # 选中1B制造订单代码\n        order.click_button('(//span[text()=\"1B\"])[1]/ancestor::tr[1]/td[2]')\n        # 点击修改按钮\n        order.click_edi_button()\n    \n        # 制造订单代码输入1A\n        order.enter_texts('(//label[text()=\"订单代码\"])[1]/parent::div//input', \"1A\")\n        # 点击确定\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n        # 获取重复弹窗文字\n        error_popup = order.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert error_popup == \"记录已存在,请检查！\", f\"预期数据{error_popup}\"\nE       AssertionError: 预期数据\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_order.py:437: AssertionError","steps":[],"attachments":[{"uid":"a3019402abeee04f","name":"test_order_editrepeat_failure","source":"a3019402abeee04f.png","type":"image/png","size":142311},{"uid":"f3cd79522addb6cc","name":"test_order_editrepeat_source","source":"f3cd79522addb6cc.html","type":"text/html","size":1574526},{"uid":"773f086c23e194f0","name":"log","source":"773f086c23e194f0.txt","type":"text/plain","size":1271}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"login_to_order::0","time":{"start":1754311613859,"stop":1754311616010,"duration":2151},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"feature","value":"制造订单表测试用例"},{"name":"story","value":"修改制造订单代码重复"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_order"},{"name":"subSuite","value":"TestOrderPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"dafa74146aaa8b8d.json","parameterValues":[]}