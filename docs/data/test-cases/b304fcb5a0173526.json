{"uid":"b304fcb5a0173526","name":"test_personal_openengine1","fullName":"Tests.test_items.test_personal.TestPersonalPage#test_personal_openengine1","historyId":"bff74ef8e60f1280531ac8f6dbdb6ef2","time":{"start":1755183357629,"stop":1755183467755,"duration":110126},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9be02ea]\n\t(No symbol) [0x0x7ff7f9be059c]\n\t(No symbol) [0x0x7ff7f9c33f37]\n\t(No symbol) [0x0x7ff7f9c086af]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","statusTrace":"self = <test_items.test_personal.TestPersonalPage object at 0x000001997157B460>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5c04e2250dca8616c72e4faf03c5668\")>\n\n    @allure.story(\"打开引擎为web服务\")\n    # @pytest.mark.run(order=1)\n    def test_personal_openengine1(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        wait = WebDriverWait(driver, 100)\n    \n        personal.go_setting_page()\n    \n        personal.click_button('//p[text()=\" 本地引擎打开方式: \"]/following-sibling::div//i')\n        personal.click_button('//li[text()=\"web服务\"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n    \n        personal.go_engine_page(name='web')\n        sleep(2)\n        ele = driver.find_elements(By.XPATH, '//span[text()=\" 引擎启动方式:本地 \"]')\n        personal.click_button('//button[@class=\"m-l-10 ivu-btn ivu-btn-primary\"]')\n        # 等待“完成”的文本出现\n>       success_element = wait.until(\n            EC.presence_of_element_located(\n                (By.XPATH, '(//div[@class=\"d-flex\"])[3]/p[text()=\" 完成 \"]')\n            )\n        )\n\nTests\\test_items\\test_personal.py:386: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f5c04e2250dca8616c72e4faf03c5668\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000019971D853F0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\nE       \t(No symbol) [0x0x7ff7f9b89dda]\nE       \t(No symbol) [0x0x7ff7f9be02ea]\nE       \t(No symbol) [0x0x7ff7f9be059c]\nE       \t(No symbol) [0x0x7ff7f9c33f37]\nE       \t(No symbol) [0x0x7ff7f9c086af]\nE       \t(No symbol) [0x0x7ff7f9c30dbe]\nE       \t(No symbol) [0x0x7ff7f9c08443]\nE       \t(No symbol) [0x0x7ff7f9bd1311]\nE       \t(No symbol) [0x0x7ff7f9bd20a3]\nE       \tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcd4147374+20]\nE       \tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_personal","time":{"start":1755183351200,"stop":1755183357629,"duration":6429},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9be02ea]\n\t(No symbol) [0x0x7ff7f9be059c]\n\t(No symbol) [0x0x7ff7f9c33f37]\n\t(No symbol) [0x0x7ff7f9c086af]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","statusTrace":"self = <test_items.test_personal.TestPersonalPage object at 0x000001997157B460>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5c04e2250dca8616c72e4faf03c5668\")>\n\n    @allure.story(\"打开引擎为web服务\")\n    # @pytest.mark.run(order=1)\n    def test_personal_openengine1(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        wait = WebDriverWait(driver, 100)\n    \n        personal.go_setting_page()\n    \n        personal.click_button('//p[text()=\" 本地引擎打开方式: \"]/following-sibling::div//i')\n        personal.click_button('//li[text()=\"web服务\"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n    \n        personal.go_engine_page(name='web')\n        sleep(2)\n        ele = driver.find_elements(By.XPATH, '//span[text()=\" 引擎启动方式:本地 \"]')\n        personal.click_button('//button[@class=\"m-l-10 ivu-btn ivu-btn-primary\"]')\n        # 等待“完成”的文本出现\n>       success_element = wait.until(\n            EC.presence_of_element_located(\n                (By.XPATH, '(//div[@class=\"d-flex\"])[3]/p[text()=\" 完成 \"]')\n            )\n        )\n\nTests\\test_items\\test_personal.py:386: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f5c04e2250dca8616c72e4faf03c5668\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000019971D853F0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\nE       \t(No symbol) [0x0x7ff7f9b89dda]\nE       \t(No symbol) [0x0x7ff7f9be02ea]\nE       \t(No symbol) [0x0x7ff7f9be059c]\nE       \t(No symbol) [0x0x7ff7f9c33f37]\nE       \t(No symbol) [0x0x7ff7f9c086af]\nE       \t(No symbol) [0x0x7ff7f9c30dbe]\nE       \t(No symbol) [0x0x7ff7f9c08443]\nE       \t(No symbol) [0x0x7ff7f9bd1311]\nE       \t(No symbol) [0x0x7ff7f9bd20a3]\nE       \tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcd4147374+20]\nE       \tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"cec0cd6894210136","name":"test_personal_openengine1_failure","source":"cec0cd6894210136.png","type":"image/png","size":121455},{"uid":"64db9a305a6f585e","name":"test_personal_openengine1_source","source":"64db9a305a6f585e.html","type":"text/html","size":1492090},{"uid":"d9d059a547565fa2","name":"log","source":"d9d059a547565fa2.txt","type":"text/plain","size":2110}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_personal::0","time":{"start":1755183467949,"stop":1755183470130,"duration":2181},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"打开引擎为web服务"},{"name":"feature","value":"个人设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_personal"},{"name":"subSuite","value":"TestPersonalPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"16980-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_personal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"b304fcb5a0173526.json","parameterValues":[]}