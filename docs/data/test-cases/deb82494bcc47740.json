{"uid":"deb82494bcc47740","name":"test_setting_default_start_success","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_default_start_success","historyId":"9096e15796264ca26ac3a7fd334da82c","time":{"start":1753881759271,"stop":1753881777803,"duration":18532},"status":"failed","statusMessage":"AssertionError: assert 'tabsDivItem' == 'tabsDivItem tabsDivActive'\n  \n  \u001B[0m\u001B[91m- tabsDivItem tabsDivActive\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ tabsDivItem\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000020123C4F640>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bff7b45d320fd8e8685fdfd3d4c9b8cb\")>\n\n    @allure.story(\"设置表格布局默认启动-成功\")\n    # @pytest.mark.run(order=1)\n    def test_setting_default_start_success(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        sleep(1)\n        setting.click_setting_button()\n        checkbox = setting.get_find_element_xpath(\n            '//div[text()=\"是否默认启动:\"]/following-sibling::label/span'\n        )\n        # 检查复选框是否未被选中\n        if checkbox.get_attribute(\"class\") == \"ivu-checkbox\":\n            # 如果未选中，则点击复选框进行选中\n            setting.click_button(\n                '//div[text()=\"是否默认启动:\"]/following-sibling::label/span'\n            )\n            sleep(1)\n            # 点击确定按钮保存设置\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n            sleep(1)\n        else:\n            # 如果已选中，直接点击确定按钮保存设置\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n    \n        sleep(2)\n        safe_quit(driver)\n        # 重新打开浏览器\n        driver_path = DateDriver().driver_path\n        driver = create_driver(driver_path)\n        driver.implicitly_wait(3)\n    \n        # 重新登录并进入目标页面\n        page = LoginPage(driver)\n        page.navigate_to(DateDriver().url)\n        page.login(DateDriver().username, DateDriver().password, DateDriver().planning)\n        # 用新 driver 初始化 SettingPage\n        setting = SettingPage(driver)\n        layout = \"测试布局A\"\n        page.click_button('(//span[text()=\"计划管理\"])[1]')\n        page.click_button('(//span[text()=\"计划基础数据\"])[1]')\n        page.click_button('(//span[text()=\"物品\"])[1]')\n    \n        sleep(2)\n        div = setting.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        ).get_attribute(\"class\")\n>       assert div == \"tabsDivItem tabsDivActive\"\nE       AssertionError: assert 'tabsDivItem' == 'tabsDivItem tabsDivActive'\nE         \nE         \u001B[0m\u001B[91m- tabsDivItem tabsDivActive\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ tabsDivItem\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:431: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1753881750420,"stop":1753881759270,"duration":8850},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'tabsDivItem' == 'tabsDivItem tabsDivActive'\n  \n  \u001B[0m\u001B[91m- tabsDivItem tabsDivActive\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ tabsDivItem\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x0000020123C4F640>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bff7b45d320fd8e8685fdfd3d4c9b8cb\")>\n\n    @allure.story(\"设置表格布局默认启动-成功\")\n    # @pytest.mark.run(order=1)\n    def test_setting_default_start_success(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        sleep(1)\n        setting.click_setting_button()\n        checkbox = setting.get_find_element_xpath(\n            '//div[text()=\"是否默认启动:\"]/following-sibling::label/span'\n        )\n        # 检查复选框是否未被选中\n        if checkbox.get_attribute(\"class\") == \"ivu-checkbox\":\n            # 如果未选中，则点击复选框进行选中\n            setting.click_button(\n                '//div[text()=\"是否默认启动:\"]/following-sibling::label/span'\n            )\n            sleep(1)\n            # 点击确定按钮保存设置\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n            sleep(1)\n        else:\n            # 如果已选中，直接点击确定按钮保存设置\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n    \n        sleep(2)\n        safe_quit(driver)\n        # 重新打开浏览器\n        driver_path = DateDriver().driver_path\n        driver = create_driver(driver_path)\n        driver.implicitly_wait(3)\n    \n        # 重新登录并进入目标页面\n        page = LoginPage(driver)\n        page.navigate_to(DateDriver().url)\n        page.login(DateDriver().username, DateDriver().password, DateDriver().planning)\n        # 用新 driver 初始化 SettingPage\n        setting = SettingPage(driver)\n        layout = \"测试布局A\"\n        page.click_button('(//span[text()=\"计划管理\"])[1]')\n        page.click_button('(//span[text()=\"计划基础数据\"])[1]')\n        page.click_button('(//span[text()=\"物品\"])[1]')\n    \n        sleep(2)\n        div = setting.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        ).get_attribute(\"class\")\n>       assert div == \"tabsDivItem tabsDivActive\"\nE       AssertionError: assert 'tabsDivItem' == 'tabsDivItem tabsDivActive'\nE         \nE         \u001B[0m\u001B[91m- tabsDivItem tabsDivActive\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ tabsDivItem\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:431: AssertionError","steps":[],"attachments":[{"uid":"8942c8705700916f","name":"test_setting_default_start_success_failure","source":"8942c8705700916f.png","type":"image/png","size":130030},{"uid":"67699f941b409195","name":"test_setting_default_start_success_source","source":"67699f941b409195.html","type":"text/html","size":1267017},{"uid":"e38c603df95a6529","name":"log","source":"e38c603df95a6529.txt","type":"text/plain","size":3438}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_setting::0","time":{"start":1753881778073,"stop":1753881794330,"duration":16257},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"设置表格布局默认启动-成功"},{"name":"feature","value":"标准应用设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"47600-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"deb82494bcc47740.json","parameterValues":[]}