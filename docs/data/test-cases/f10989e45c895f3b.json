{"uid":"f10989e45c895f3b","name":"test_changeR_delete","fullName":"Tests.test_items.test_changeR.TestChangeRPage#test_changeR_delete","historyId":"626105101f49603cafa5e58b7b2ac6a5","time":{"start":1760968692855,"stop":1760968703638,"duration":10783},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff613186f65+78965]\n\tGetHandleVerifier [0x0x7ff613186fc0+79056]\n\t(No symbol) [0x0x7ff612f19dda]\n\t(No symbol) [0x0x7ff612f702ea]\n\t(No symbol) [0x0x7ff612f7059c]\n\t(No symbol) [0x0x7ff612fc3f37]\n\t(No symbol) [0x0x7ff612f986af]\n\t(No symbol) [0x0x7ff612fc0dbe]\n\t(No symbol) [0x0x7ff612f98443]\n\t(No symbol) [0x0x7ff612f61311]\n\t(No symbol) [0x0x7ff612f620a3]\n\tGetHandleVerifier [0x0x7ff61343e26d+2926461]\n\tGetHandleVerifier [0x0x7ff613438993+2903715]\n\tGetHandleVerifier [0x0x7ff613456aed+3026941]\n\tGetHandleVerifier [0x0x7ff6131a16fe+187406]\n\tGetHandleVerifier [0x0x7ff6131a96ef+220159]\n\tGetHandleVerifier [0x0x7ff61318faf4+114692]\n\tGetHandleVerifier [0x0x7ff61318fca9+115129]\n\tGetHandleVerifier [0x0x7ff6131764d8+10728]\n\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\n\tRtlUserThreadStart [0x0x7fff513dcc91+33]","statusTrace":"self = <test_items.test_changeR.TestChangeRPage object at 0x0000014AE2AD0D60>, login_to_changeR = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"627ac28455506c8312891c01d8a558b9\")>\n\n    @allure.story(\"删除布局成功\")\n    # @pytest.mark.run(order=1)\n    def test_changeR_delete(self, login_to_changeR):\n        driver = login_to_changeR  # WebDriver 实例\n        changeR = ChangeR(driver)  # 用 driver 初始化 ChangeR\n        layout = \"测试布局A\"\n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n>       target_div = changeR.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        )\n\nTests\\test_items\\test_changeR.py:1075: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\changeR_page.py:44: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"627ac28455506c8312891c01d8a558b9\")>, method = <function presence_of_element_located.<locals>._predicate at 0x0000014AE37B9090>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE       \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE       \t(No symbol) [0x0x7ff612f19dda]\nE       \t(No symbol) [0x0x7ff612f702ea]\nE       \t(No symbol) [0x0x7ff612f7059c]\nE       \t(No symbol) [0x0x7ff612fc3f37]\nE       \t(No symbol) [0x0x7ff612f986af]\nE       \t(No symbol) [0x0x7ff612fc0dbe]\nE       \t(No symbol) [0x0x7ff612f98443]\nE       \t(No symbol) [0x0x7ff612f61311]\nE       \t(No symbol) [0x0x7ff612f620a3]\nE       \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE       \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_changeR","time":{"start":1760968679090,"stop":1760968692853,"duration":13763},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff613186f65+78965]\n\tGetHandleVerifier [0x0x7ff613186fc0+79056]\n\t(No symbol) [0x0x7ff612f19dda]\n\t(No symbol) [0x0x7ff612f702ea]\n\t(No symbol) [0x0x7ff612f7059c]\n\t(No symbol) [0x0x7ff612fc3f37]\n\t(No symbol) [0x0x7ff612f986af]\n\t(No symbol) [0x0x7ff612fc0dbe]\n\t(No symbol) [0x0x7ff612f98443]\n\t(No symbol) [0x0x7ff612f61311]\n\t(No symbol) [0x0x7ff612f620a3]\n\tGetHandleVerifier [0x0x7ff61343e26d+2926461]\n\tGetHandleVerifier [0x0x7ff613438993+2903715]\n\tGetHandleVerifier [0x0x7ff613456aed+3026941]\n\tGetHandleVerifier [0x0x7ff6131a16fe+187406]\n\tGetHandleVerifier [0x0x7ff6131a96ef+220159]\n\tGetHandleVerifier [0x0x7ff61318faf4+114692]\n\tGetHandleVerifier [0x0x7ff61318fca9+115129]\n\tGetHandleVerifier [0x0x7ff6131764d8+10728]\n\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\n\tRtlUserThreadStart [0x0x7fff513dcc91+33]","statusTrace":"self = <test_items.test_changeR.TestChangeRPage object at 0x0000014AE2AD0D60>, login_to_changeR = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"627ac28455506c8312891c01d8a558b9\")>\n\n    @allure.story(\"删除布局成功\")\n    # @pytest.mark.run(order=1)\n    def test_changeR_delete(self, login_to_changeR):\n        driver = login_to_changeR  # WebDriver 实例\n        changeR = ChangeR(driver)  # 用 driver 初始化 ChangeR\n        layout = \"测试布局A\"\n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n>       target_div = changeR.get_find_element_xpath(\n            f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]'\n        )\n\nTests\\test_items\\test_changeR.py:1075: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\changeR_page.py:44: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"627ac28455506c8312891c01d8a558b9\")>, method = <function presence_of_element_located.<locals>._predicate at 0x0000014AE37B9090>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE       \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE       \t(No symbol) [0x0x7ff612f19dda]\nE       \t(No symbol) [0x0x7ff612f702ea]\nE       \t(No symbol) [0x0x7ff612f7059c]\nE       \t(No symbol) [0x0x7ff612fc3f37]\nE       \t(No symbol) [0x0x7ff612f986af]\nE       \t(No symbol) [0x0x7ff612fc0dbe]\nE       \t(No symbol) [0x0x7ff612f98443]\nE       \t(No symbol) [0x0x7ff612f61311]\nE       \t(No symbol) [0x0x7ff612f620a3]\nE       \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE       \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"13a176c6c7faf9e3","name":"test_changeR_delete_failure","source":"13a176c6c7faf9e3.png","type":"image/png","size":75169},{"uid":"427caf78bcd0cb2b","name":"test_changeR_delete_source","source":"427caf78bcd0cb2b.html","type":"text/html","size":1219471},{"uid":"fb6bffbfb52bdcc2","name":"log","source":"fb6bffbfb52bdcc2.txt","type":"text/plain","size":1052}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_changeR::0","time":{"start":1760968704130,"stop":1760968706505,"duration":2375},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"资源切换表测试用例"},{"name":"story","value":"删除布局成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_changeR"},{"name":"subSuite","value":"TestChangeRPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_changeR"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"f10989e45c895f3b.json","parameterValues":[]}