{"uid":"7f907ab5bb20796c","name":"test_production_editnum1","fullName":"Tests.test_items.test_production.TestProductionPage#test_production_editnum1","historyId":"79dc88f6e5d1c88d5b9b14cce013b54f","time":{"start":1755155332775,"stop":1755155332775,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nfrom unknown command: 'Runtime.evaluate' wasn't found\n  (Session info: chrome=137.0.7151.69)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9b765d0]\n\t(No symbol) [0x0x7ff7f9b74ce9]\n\t(No symbol) [0x0x7ff7f9b7559f]\n\t(No symbol) [0x0x7ff7f9ba0cab]\n\t(No symbol) [0x0x7ff7f9b942c0]\n\t(No symbol) [0x0x7ff7f9b94162]\n\t(No symbol) [0x0x7ff7f9b65d68]\n\t(No symbol) [0x0x7ff7f9b63d03]\n\t(No symbol) [0x0x7ff7f9c49011]\n\t(No symbol) [0x0x7ff7f9c0866a]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","statusTrace":"@pytest.fixture  # (scope=\"class\")这个参数表示整个测试类共用同一个浏览器，默认一个用例执行一次\n    def login_to_production():\n        \"\"\"初始化并返回 driver\"\"\"\n        date_driver = DateDriver()\n        # 初始化 driver\n>       driver = create_driver(date_driver.driver_path)\n\nTests\\test_items\\test_production.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nUtils\\driver_manager.py:34: in create_driver\n    driver.maximize_window()  # 最大化浏览器窗口\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:638: in maximize_window\n    self.execute(command, None)\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000260630F0DC0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: JavaScript code failed\\\\nfrom un...ff7f9de64d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nE       from unknown command: 'Runtime.evaluate' wasn't found\nE         (Session info: chrome=137.0.7151.69)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\nE       \t(No symbol) [0x0x7ff7f9b89dda]\nE       \t(No symbol) [0x0x7ff7f9b765d0]\nE       \t(No symbol) [0x0x7ff7f9b74ce9]\nE       \t(No symbol) [0x0x7ff7f9b7559f]\nE       \t(No symbol) [0x0x7ff7f9ba0cab]\nE       \t(No symbol) [0x0x7ff7f9b942c0]\nE       \t(No symbol) [0x0x7ff7f9b94162]\nE       \t(No symbol) [0x0x7ff7f9b65d68]\nE       \t(No symbol) [0x0x7ff7f9b63d03]\nE       \t(No symbol) [0x0x7ff7f9c49011]\nE       \t(No symbol) [0x0x7ff7f9c0866a]\nE       \t(No symbol) [0x0x7ff7f9c30dbe]\nE       \t(No symbol) [0x0x7ff7f9c08443]\nE       \t(No symbol) [0x0x7ff7f9bd1311]\nE       \t(No symbol) [0x0x7ff7f9bd20a3]\nE       \tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcd4147374+20]\nE       \tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_production","time":{"start":1755155332775,"stop":1755155334504,"duration":1729},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nfrom unknown command: 'Runtime.evaluate' wasn't found\n  (Session info: chrome=137.0.7151.69)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9b765d0]\n\t(No symbol) [0x0x7ff7f9b74ce9]\n\t(No symbol) [0x0x7ff7f9b7559f]\n\t(No symbol) [0x0x7ff7f9ba0cab]\n\t(No symbol) [0x0x7ff7f9b942c0]\n\t(No symbol) [0x0x7ff7f9b94162]\n\t(No symbol) [0x0x7ff7f9b65d68]\n\t(No symbol) [0x0x7ff7f9b63d03]\n\t(No symbol) [0x0x7ff7f9c49011]\n\t(No symbol) [0x0x7ff7f9c0866a]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\n","statusTrace":"  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\pluggy\\_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\pluggy\\_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\pluggy\\_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\_pytest\\fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\_pytest\\fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n  File \"D:\\PycharmProjects\\APS\\Tests\\test_items\\test_production.py\", line 22, in login_to_production\n    driver = create_driver(date_driver.driver_path)\n  File \"D:\\PycharmProjects\\APS\\Utils\\driver_manager.py\", line 34, in create_driver\n    driver.maximize_window()  # 最大化浏览器窗口\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 638, in maximize_window\n    self.execute(command, None)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 447, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nfrom unknown command: 'Runtime.evaluate' wasn't found\n  (Session info: chrome=137.0.7151.69)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9b765d0]\n\t(No symbol) [0x0x7ff7f9b74ce9]\n\t(No symbol) [0x0x7ff7f9b7559f]\n\t(No symbol) [0x0x7ff7f9ba0cab]\n\t(No symbol) [0x0x7ff7f9b942c0]\n\t(No symbol) [0x0x7ff7f9b94162]\n\t(No symbol) [0x0x7ff7f9b65d68]\n\t(No symbol) [0x0x7ff7f9b63d03]\n\t(No symbol) [0x0x7ff7f9c49011]\n\t(No symbol) [0x0x7ff7f9c0866a]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","statusTrace":"@pytest.fixture  # (scope=\"class\")这个参数表示整个测试类共用同一个浏览器，默认一个用例执行一次\n    def login_to_production():\n        \"\"\"初始化并返回 driver\"\"\"\n        date_driver = DateDriver()\n        # 初始化 driver\n>       driver = create_driver(date_driver.driver_path)\n\nTests\\test_items\\test_production.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nUtils\\driver_manager.py:34: in create_driver\n    driver.maximize_window()  # 最大化浏览器窗口\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:638: in maximize_window\n    self.execute(command, None)\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000260630F0DC0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: JavaScript code failed\\\\nfrom un...ff7f9de64d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: JavaScript code failed\nE       from unknown command: 'Runtime.evaluate' wasn't found\nE         (Session info: chrome=137.0.7151.69)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\nE       \t(No symbol) [0x0x7ff7f9b89dda]\nE       \t(No symbol) [0x0x7ff7f9b765d0]\nE       \t(No symbol) [0x0x7ff7f9b74ce9]\nE       \t(No symbol) [0x0x7ff7f9b7559f]\nE       \t(No symbol) [0x0x7ff7f9ba0cab]\nE       \t(No symbol) [0x0x7ff7f9b942c0]\nE       \t(No symbol) [0x0x7ff7f9b94162]\nE       \t(No symbol) [0x0x7ff7f9b65d68]\nE       \t(No symbol) [0x0x7ff7f9b63d03]\nE       \t(No symbol) [0x0x7ff7f9c49011]\nE       \t(No symbol) [0x0x7ff7f9c0866a]\nE       \t(No symbol) [0x0x7ff7f9c30dbe]\nE       \t(No symbol) [0x0x7ff7f9c08443]\nE       \t(No symbol) [0x0x7ff7f9bd1311]\nE       \t(No symbol) [0x0x7ff7f9bd20a3]\nE       \tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcd4147374+20]\nE       \tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException","steps":[],"attachments":[{"uid":"ff5150e211609b5d","name":"log","source":"ff5150e211609b5d.txt","type":"text/plain","size":1595}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"生产报工测试用例"},{"name":"story","value":"当报工数量小于实绩报工数量 修改报工数量成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_production"},{"name":"subSuite","value":"TestProductionPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"15524-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_production"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8ea662743ccbe80b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9be02ea]\n\t(No symbol) [0x0x7ff7f9be059c]\n\t(No symbol) [0x0x7ff7f9c33f37]\n\t(No symbol) [0x0x7ff7f9c086af]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","time":{"start":1755155315825,"stop":1755155330088,"duration":14263}},{"uid":"3a04381b3b6d224b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9be02ea]\n\t(No symbol) [0x0x7ff7f9be059c]\n\t(No symbol) [0x0x7ff7f9c33f37]\n\t(No symbol) [0x0x7ff7f9c086af]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","time":{"start":1755141759473,"stop":1755141774001,"duration":14528}},{"uid":"5166d1064fe41430","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9be02ea]\n\t(No symbol) [0x0x7ff7f9be059c]\n\t(No symbol) [0x0x7ff7f9c33f37]\n\t(No symbol) [0x0x7ff7f9c086af]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","time":{"start":1755141733166,"stop":1755141747731,"duration":14565}},{"uid":"7f00103c512f9a1f","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //tr[./td[2]//span[text()=\"1测试C订单:2\"]]/td[6]","time":{"start":1755096910622,"stop":1755096920779,"duration":10157}},{"uid":"bbbe045c66d4362a","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //tr[./td[2]//span[text()=\"1测试C订单:2\"]]/td[6]","time":{"start":1755096889345,"stop":1755096899798,"duration":10453}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"7f907ab5bb20796c.json","parameterValues":[]}