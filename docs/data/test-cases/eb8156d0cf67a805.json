{"uid":"eb8156d0cf67a805","name":"test_personal_openengine3","fullName":"Tests.test_item.test_personal.TestPersonalPage#test_personal_openengine3","historyId":"a78b0d922558faa5ffc6a914c409341c","time":{"start":1752765299528,"stop":1752765407208,"duration":107680},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7445e6f65+78965]\n\tGetHandleVerifier [0x0x7ff7445e6fc0+79056]\n\t(No symbol) [0x0x7ff744379dda]\n\t(No symbol) [0x0x7ff7443d02ea]\n\t(No symbol) [0x0x7ff7443d059c]\n\t(No symbol) [0x0x7ff744423f37]\n\t(No symbol) [0x0x7ff7443f86af]\n\t(No symbol) [0x0x7ff744420dbe]\n\t(No symbol) [0x0x7ff7443f8443]\n\t(No symbol) [0x0x7ff7443c1311]\n\t(No symbol) [0x0x7ff7443c20a3]\n\tGetHandleVerifier [0x0x7ff74489e26d+2926461]\n\tGetHandleVerifier [0x0x7ff744898993+2903715]\n\tGetHandleVerifier [0x0x7ff7448b6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7446016fe+187406]\n\tGetHandleVerifier [0x0x7ff7446096ef+220159]\n\tGetHandleVerifier [0x0x7ff7445efaf4+114692]\n\tGetHandleVerifier [0x0x7ff7445efca9+115129]\n\tGetHandleVerifier [0x0x7ff7445d64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffa099e7374+20]\n\tRtlUserThreadStart [0x0x7ffa0b89cc91+33]","statusTrace":"self = <test_item.test_personal.TestPersonalPage object at 0x000001FF3785A7A0>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bfc2c1d1be2003f976c7c1171db11dfa\")>\n\n    @allure.story(\"打开引擎为系统设置-服务器\")\n    # @pytest.mark.run(order=1)\n    def test_personal_openengine3(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        wait = WebDriverWait(driver, 100)\n    \n        personal.go_setting_page()\n    \n        personal.click_button('//p[text()=\" 本地引擎打开方式: \"]/following-sibling::div//i')\n        personal.click_button('//li[text()=\"系统设置\"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n    \n        personal.go_engine_page(name='system_web')\n        # 等待下拉框按钮可点击后点击展开\n        dropdown_arrow = wait.until(\n            EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"vue-treeselect__control-arrow-container\"]')\n            )\n        )\n        dropdown_arrow.click()\n    \n        # 等待第一个方案标签可点击后点击选择\n        first_option = wait.until(\n            EC.element_to_be_clickable(\n                (\n                    By.XPATH,\n                    '//div[@class=\"vue-treeselect__list\"]/div[.]//label[text()=\"均衡排产\"]',\n                )\n            )\n        )\n        first_option.click()\n        personal.click_button('//button[@class=\"m-l-10 ivu-btn ivu-btn-primary\"]')\n        # 等待“完成”的文本出现\n>       success_element = wait.until(\n            EC.presence_of_element_located(\n                (By.XPATH, '(//div[@class=\"d-flex\"])[3]/p[text()=\" 完成 \"]')\n            )\n        )\n\nTests\\test_item\\test_personal.py:455: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bfc2c1d1be2003f976c7c1171db11dfa\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001FF3817DEA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7445e6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7445e6fc0+79056]\nE       \t(No symbol) [0x0x7ff744379dda]\nE       \t(No symbol) [0x0x7ff7443d02ea]\nE       \t(No symbol) [0x0x7ff7443d059c]\nE       \t(No symbol) [0x0x7ff744423f37]\nE       \t(No symbol) [0x0x7ff7443f86af]\nE       \t(No symbol) [0x0x7ff744420dbe]\nE       \t(No symbol) [0x0x7ff7443f8443]\nE       \t(No symbol) [0x0x7ff7443c1311]\nE       \t(No symbol) [0x0x7ff7443c20a3]\nE       \tGetHandleVerifier [0x0x7ff74489e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff744898993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7448b6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7446016fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7446096ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7445efaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7445efca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7445d64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffa099e7374+20]\nE       \tRtlUserThreadStart [0x0x7ffa0b89cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_personal","time":{"start":1752765293466,"stop":1752765299527,"duration":6061},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7445e6f65+78965]\n\tGetHandleVerifier [0x0x7ff7445e6fc0+79056]\n\t(No symbol) [0x0x7ff744379dda]\n\t(No symbol) [0x0x7ff7443d02ea]\n\t(No symbol) [0x0x7ff7443d059c]\n\t(No symbol) [0x0x7ff744423f37]\n\t(No symbol) [0x0x7ff7443f86af]\n\t(No symbol) [0x0x7ff744420dbe]\n\t(No symbol) [0x0x7ff7443f8443]\n\t(No symbol) [0x0x7ff7443c1311]\n\t(No symbol) [0x0x7ff7443c20a3]\n\tGetHandleVerifier [0x0x7ff74489e26d+2926461]\n\tGetHandleVerifier [0x0x7ff744898993+2903715]\n\tGetHandleVerifier [0x0x7ff7448b6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7446016fe+187406]\n\tGetHandleVerifier [0x0x7ff7446096ef+220159]\n\tGetHandleVerifier [0x0x7ff7445efaf4+114692]\n\tGetHandleVerifier [0x0x7ff7445efca9+115129]\n\tGetHandleVerifier [0x0x7ff7445d64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffa099e7374+20]\n\tRtlUserThreadStart [0x0x7ffa0b89cc91+33]","statusTrace":"self = <test_item.test_personal.TestPersonalPage object at 0x000001FF3785A7A0>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bfc2c1d1be2003f976c7c1171db11dfa\")>\n\n    @allure.story(\"打开引擎为系统设置-服务器\")\n    # @pytest.mark.run(order=1)\n    def test_personal_openengine3(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        wait = WebDriverWait(driver, 100)\n    \n        personal.go_setting_page()\n    \n        personal.click_button('//p[text()=\" 本地引擎打开方式: \"]/following-sibling::div//i')\n        personal.click_button('//li[text()=\"系统设置\"]')\n        personal.click_button('//div[@class=\"demo-drawer-footer\"]//span[text()=\"确定\"]')\n    \n        personal.go_engine_page(name='system_web')\n        # 等待下拉框按钮可点击后点击展开\n        dropdown_arrow = wait.until(\n            EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"vue-treeselect__control-arrow-container\"]')\n            )\n        )\n        dropdown_arrow.click()\n    \n        # 等待第一个方案标签可点击后点击选择\n        first_option = wait.until(\n            EC.element_to_be_clickable(\n                (\n                    By.XPATH,\n                    '//div[@class=\"vue-treeselect__list\"]/div[.]//label[text()=\"均衡排产\"]',\n                )\n            )\n        )\n        first_option.click()\n        personal.click_button('//button[@class=\"m-l-10 ivu-btn ivu-btn-primary\"]')\n        # 等待“完成”的文本出现\n>       success_element = wait.until(\n            EC.presence_of_element_located(\n                (By.XPATH, '(//div[@class=\"d-flex\"])[3]/p[text()=\" 完成 \"]')\n            )\n        )\n\nTests\\test_item\\test_personal.py:455: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bfc2c1d1be2003f976c7c1171db11dfa\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001FF3817DEA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7445e6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7445e6fc0+79056]\nE       \t(No symbol) [0x0x7ff744379dda]\nE       \t(No symbol) [0x0x7ff7443d02ea]\nE       \t(No symbol) [0x0x7ff7443d059c]\nE       \t(No symbol) [0x0x7ff744423f37]\nE       \t(No symbol) [0x0x7ff7443f86af]\nE       \t(No symbol) [0x0x7ff744420dbe]\nE       \t(No symbol) [0x0x7ff7443f8443]\nE       \t(No symbol) [0x0x7ff7443c1311]\nE       \t(No symbol) [0x0x7ff7443c20a3]\nE       \tGetHandleVerifier [0x0x7ff74489e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff744898993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7448b6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7446016fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7446096ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7445efaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7445efca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7445d64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffa099e7374+20]\nE       \tRtlUserThreadStart [0x0x7ffa0b89cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"b089b46b9b3d8149","name":"test_personal_openengine3_failure","source":"b089b46b9b3d8149.png","type":"image/png","size":120942},{"uid":"c297e7e94c890604","name":"test_personal_openengine3_source","source":"c297e7e94c890604.html","type":"text/html","size":1522293},{"uid":"ba79a634b772fadb","name":"log","source":"ba79a634b772fadb.txt","type":"text/plain","size":2016}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_personal::0","time":{"start":1752765407402,"stop":1752765409524,"duration":2122},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"个人设置测试用例"},{"name":"story","value":"打开引擎为系统设置-服务器"},{"name":"parentSuite","value":"Tests.test_item"},{"name":"suite","value":"test_personal"},{"name":"subSuite","value":"TestPersonalPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"11236-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_item.test_personal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"eb8156d0cf67a805.json","parameterValues":[]}