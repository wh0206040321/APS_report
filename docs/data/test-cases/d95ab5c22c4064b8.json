{"uid":"d95ab5c22c4064b8","name":"test_process_addrepeat","fullName":"Tests.test_items.test_process.TestProcessPage#test_process_addrepeat","historyId":"0af4d1bc656a9e3d213b058103e16012","time":{"start":1760965203086,"stop":1760965209852,"duration":6766},"status":"failed","statusMessage":"AssertionError: 预期数据是记录已存在,请检查，实际得到\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_process.TestProcessPage object at 0x0000014AE2EBE800>, login_to_process = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"94db3fab63175e78878ca0b20e66f702\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_process_addrepeat(self, login_to_process):\n        driver = login_to_process  # WebDriver 实例\n        process = ProcessPage(driver)  # 用 driver 初始化 ProcessPage\n        name = \"111\"\n        num = \"60\"\n        process.adds_process(name, num)\n        # 获取重复弹窗文字\n        error_popup = process.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert (\n            error_popup == \"记录已存在,请检查！\"\n        ), f\"预期数据是记录已存在,请检查，实际得到{error_popup}\"\nE       AssertionError: 预期数据是记录已存在,请检查，实际得到\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_process.py:213: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_process","time":{"start":1760965190256,"stop":1760965203085,"duration":12829},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期数据是记录已存在,请检查，实际得到\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_process.TestProcessPage object at 0x0000014AE2EBE800>, login_to_process = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"94db3fab63175e78878ca0b20e66f702\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_process_addrepeat(self, login_to_process):\n        driver = login_to_process  # WebDriver 实例\n        process = ProcessPage(driver)  # 用 driver 初始化 ProcessPage\n        name = \"111\"\n        num = \"60\"\n        process.adds_process(name, num)\n        # 获取重复弹窗文字\n        error_popup = process.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert (\n            error_popup == \"记录已存在,请检查！\"\n        ), f\"预期数据是记录已存在,请检查，实际得到{error_popup}\"\nE       AssertionError: 预期数据是记录已存在,请检查，实际得到\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_process.py:213: AssertionError","steps":[],"attachments":[{"uid":"b5edfd4315216573","name":"test_process_addrepeat_failure","source":"b5edfd4315216573.png","type":"image/png","size":85729},{"uid":"27c577ea1deff345","name":"test_process_addrepeat_source","source":"27c577ea1deff345.html","type":"text/html","size":1283721},{"uid":"e5f4e22ee36373c0","name":"log","source":"e5f4e22ee36373c0.txt","type":"text/plain","size":1266}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_process::0","time":{"start":1760965210248,"stop":1760965212522,"duration":2274},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"工序表测试用例"},{"name":"story","value":"添加数据重复"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_process"},{"name":"subSuite","value":"TestProcessPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_process"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"d95ab5c22c4064b8.json","parameterValues":[]}