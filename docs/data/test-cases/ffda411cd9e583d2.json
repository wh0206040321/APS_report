{"uid":"ffda411cd9e583d2","name":"test_setting_display1","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_display1","historyId":"5f3a1bda2339c0b47fc521c4da7a7191","time":{"start":1753970980110,"stop":1753970982930,"duration":2820},"status":"failed","statusMessage":"AssertionError: assert ('物料组代码' not in ['物料代码', '物料组代码', '物料种类', '物料优先度', '单价', '自动补充标志', ...])","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x00000203F0E30040>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edc2b86cc17b20b5dfa72543b13a3667\")>\n\n    @allure.story(\"设置表格布局-设置物料名称为不可见\")\n    # @pytest.mark.run(order=1)\n    def test_setting_display1(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        after_text = setting.get_find_element_xpath(\n            '//table[.//th[.//p[text()=\"物料代码\"]]]//th[3]//p'\n        ).text\n        setting.click_setting_button()\n        # 点击显示设置按钮以展开设置选项\n        setting.click_button('//div[text()=\" 显示设置 \"]')\n    \n        # 定位到物料名称对应的复选框\n        checkbox = setting.get_find_element_xpath(\n            '//tr[./td[3] and ./td[.//span[text()=\"物料名称\"]]]/td[6]//span[1]'\n        )\n    \n        # 检查复选框是否已被选中\n        if checkbox.get_attribute(\"class\") == \"ivu-checkbox ivu-checkbox-checked\":\n            # 如果复选框选中，则点击取消选中，并保存设置\n            checkbox.click()\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n        else:\n            # 如果复选框未选中，则直接保存设置\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n        sleep(1)\n        # 获取设置更改后的物料代码列文本\n        before_text = driver.find_elements(\n            By.XPATH, '//table[.//th[.//p[text()=\"物料代码\"]]]//th//p'\n        )\n        before_texts = [elem.text.strip() for elem in before_text]\n        # 断言设置更改后，after_text 不再存在于 before_text 中\n>       assert after_text not in before_texts and after_text == \"物料名称\"\nE       AssertionError: assert ('物料组代码' not in ['物料代码', '物料组代码', '物料种类', '物料优先度', '单价', '自动补充标志', ...])\n\nTests\\test_items\\test_setting.py:676: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1753970972252,"stop":1753970980110,"duration":7858},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('物料组代码' not in ['物料代码', '物料组代码', '物料种类', '物料优先度', '单价', '自动补充标志', ...])","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x00000203F0E30040>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"edc2b86cc17b20b5dfa72543b13a3667\")>\n\n    @allure.story(\"设置表格布局-设置物料名称为不可见\")\n    # @pytest.mark.run(order=1)\n    def test_setting_display1(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        after_text = setting.get_find_element_xpath(\n            '//table[.//th[.//p[text()=\"物料代码\"]]]//th[3]//p'\n        ).text\n        setting.click_setting_button()\n        # 点击显示设置按钮以展开设置选项\n        setting.click_button('//div[text()=\" 显示设置 \"]')\n    \n        # 定位到物料名称对应的复选框\n        checkbox = setting.get_find_element_xpath(\n            '//tr[./td[3] and ./td[.//span[text()=\"物料名称\"]]]/td[6]//span[1]'\n        )\n    \n        # 检查复选框是否已被选中\n        if checkbox.get_attribute(\"class\") == \"ivu-checkbox ivu-checkbox-checked\":\n            # 如果复选框选中，则点击取消选中，并保存设置\n            checkbox.click()\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n        else:\n            # 如果复选框未选中，则直接保存设置\n            setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n        sleep(1)\n        # 获取设置更改后的物料代码列文本\n        before_text = driver.find_elements(\n            By.XPATH, '//table[.//th[.//p[text()=\"物料代码\"]]]//th//p'\n        )\n        before_texts = [elem.text.strip() for elem in before_text]\n        # 断言设置更改后，after_text 不再存在于 before_text 中\n>       assert after_text not in before_texts and after_text == \"物料名称\"\nE       AssertionError: assert ('物料组代码' not in ['物料代码', '物料组代码', '物料种类', '物料优先度', '单价', '自动补充标志', ...])\n\nTests\\test_items\\test_setting.py:676: AssertionError","steps":[],"attachments":[{"uid":"729be5161f18e49","name":"test_setting_display1_failure","source":"729be5161f18e49.png","type":"image/png","size":129920},{"uid":"3bd818f1e4a057be","name":"test_setting_display1_source","source":"3bd818f1e4a057be.html","type":"text/html","size":1374034},{"uid":"2a990908542d0cfe","name":"log","source":"2a990908542d0cfe.txt","type":"text/plain","size":3071}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_setting::0","time":{"start":1753970983124,"stop":1753970985260,"duration":2136},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"story","value":"设置表格布局-设置物料名称为不可见"},{"name":"feature","value":"标准应用设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"62740-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2810a199a4bf86","status":"failed","statusDetails":"AssertionError: assert ('物料名称' not in ['物料代码', '物料名称', '物料组代码', '物料种类', '物料优先度', '单价', ...])","time":{"start":1753970966531,"stop":1753970969658,"duration":3127}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"ffda411cd9e583d2.json","parameterValues":[]}