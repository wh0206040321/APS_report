{"uid":"9643f8783e60008","name":"test_item_selectnodatasuccess","fullName":"Tests.test_material.test_materialInventory.TestItemPage#test_item_selectnodatasuccess","historyId":"7873d6f993ba251fd71c0ea6e9b267e1","time":{"start":1754929299462,"stop":1754929308539,"duration":9077},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"8d0379e862d7e35ac67887745e6eb74f\", element=\"f.59246018CCCC3EE4EEC4054170678E26.d.FCB30BADC985101C43E1AD49ABB19B0D.e.291\")>])","statusTrace":"self = <test_material.test_materialInventory.TestItemPage object at 0x000001C1DEA70FD0>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d0379e862d7e35ac67887745e6eb74f\")>\n\n    @allure.story(\"没有数据时显示正常\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectnodatasuccess(self, login_to_item):\n    \n        # 点击查询\n        self.item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = self.driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(self.driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料代码\n        self.item.click_button('//div[text()=\"物料代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        self.item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        self.item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        self.item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"没有数据\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        self.item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        itemcode = self.driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]',\n        )\n>       assert len(itemcode) == 0\nE       assert 1 == 0\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"8d0379e862d7e35ac67887745e6eb74f\", element=\"f.59246018CCCC3EE4EEC4054170678E26.d.FCB30BADC985101C43E1AD49ABB19B0D.e.291\")>])\n\nTests\\test_material\\test_materialInventory.py:562: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1754929291452,"stop":1754929299458,"duration":8006},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"setup","time":{"start":1754929299458,"stop":1754929299462,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"8d0379e862d7e35ac67887745e6eb74f\", element=\"f.59246018CCCC3EE4EEC4054170678E26.d.FCB30BADC985101C43E1AD49ABB19B0D.e.291\")>])","statusTrace":"self = <test_material.test_materialInventory.TestItemPage object at 0x000001C1DEA70FD0>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d0379e862d7e35ac67887745e6eb74f\")>\n\n    @allure.story(\"没有数据时显示正常\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectnodatasuccess(self, login_to_item):\n    \n        # 点击查询\n        self.item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = self.driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(self.driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击物料代码\n        self.item.click_button('//div[text()=\"物料代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        self.item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        self.item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        self.item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"没有数据\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        self.item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        itemcode = self.driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]',\n        )\n>       assert len(itemcode) == 0\nE       assert 1 == 0\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"8d0379e862d7e35ac67887745e6eb74f\", element=\"f.59246018CCCC3EE4EEC4054170678E26.d.FCB30BADC985101C43E1AD49ABB19B0D.e.291\")>])\n\nTests\\test_material\\test_materialInventory.py:562: AssertionError","steps":[],"attachments":[{"uid":"3202f7c3746114ad","name":"test_item_selectnodatasuccess_failure","source":"3202f7c3746114ad.png","type":"image/png","size":93720},{"uid":"219ea821caa8da50","name":"test_item_selectnodatasuccess_source","source":"219ea821caa8da50.html","type":"text/html","size":1272938},{"uid":"d810228e269c638","name":"log","source":"d810228e269c638.txt","type":"text/plain","size":2857}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_item::0","time":{"start":1754929308701,"stop":1754929310859,"duration":2158},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"story","value":"没有数据时显示正常"},{"name":"feature","value":"物料库存测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialInventory"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"24412-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialInventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"37b852412924eb6d","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"f0fbf940769aff3c75c45d97b1cd95e1\", element=\"f.057D53B4F381B4DD2E8A5C98A135B589.d.B5E95CD1F971FF67BFC7130F2BD025EA.e.209\")>])","time":{"start":1754929280000,"stop":1754929289117,"duration":9117}},{"uid":"1ace9fb24b1294d2","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"b4fe96ccb235357352e0eade29e0dde7\", element=\"f.10E8C4BC3983BE7B213AF0AD12001941.d.CBDED8FA35336B1EFBD8635E0093BB73.e.210\")>])","time":{"start":1754320810080,"stop":1754320818605,"duration":8525}},{"uid":"62a09c2025f74384","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"ad8dcc4dfaa22586d08295a088aff852\", element=\"f.1EBEEE5080BDD3FFA0DE672AB47A0DB1.d.EA69B2404123F18AB3B14C8DFD27B2FA.e.209\")>])","time":{"start":1754320791514,"stop":1754320800146,"duration":8632}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"9643f8783e60008.json","parameterValues":[]}