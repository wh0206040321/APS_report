{"uid":"ea7c238a5cb9f6ea","name":"test_order_textverify","fullName":"Tests.test_items.test_order.TestOrderPage#test_order_textverify","historyId":"7433ce69f321fa2329f431a585f28a3e","time":{"start":1761233291975,"stop":1761233333652,"duration":41677},"status":"failed","statusMessage":"AssertionError: assert ('111111111111...1111111111111' == '111111111111...1111111111111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\n  \n  \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?           -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x000001FC190397E0>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"683cb331c93f988c910bd574c4b8cb9f\")>\n\n    @allure.story(\"校验数字文本框和文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_order_textverify(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        order.click_add_button()  # 检查点击添加\n        name = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        # 填写订单代码\n        order.enter_texts('(//label[text()=\"订单代码\"])[1]/parent::div//input', name)\n    \n        # 物料\n        random_int = random.randint(1, 4)\n        order.click_button('//label[text()=\"物料\"]/parent::div/div//i')\n        order.click_button(\n            f'(//div[@class=\"vxe-grid--table-container\"]//tr[{random_int}]/td[2])[2]'\n        )\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 填写交货期\n        order.click_button('(//label[text()=\"交货期\"])[1]/parent::div//input')\n        order.click_button('(//div[@class=\"ivu-date-picker-cells\"])[3]/span[19]')\n        order.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary ivu-btn-small\"])[3]'\n        )\n    \n        # 计划数量\n        num = order.get_find_element_xpath(\n            '(//label[text()=\"计划数量\"])[1]/parent::div//input'\n        )\n        num.send_keys(Keys.CONTROL, \"a\")\n        num.send_keys(Keys.BACK_SPACE)\n        order.enter_texts('(//label[text()=\"计划数量\"])[1]/parent::div//input', name)\n    \n        # 点击确定\n        order.click_confirm_button()\n        adddata = order.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]'\n        ).text\n        num_ = order.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[10]'\n        ).text\n>       assert adddata == name and num_ == '99999999999'\nE       AssertionError: assert ('111111111111...1111111111111' == '111111111111...1111111111111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\nE         \nE         \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?           -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_order.py:310: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_order","time":{"start":1761233274694,"stop":1761233291972,"duration":17278},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('111111111111...1111111111111' == '111111111111...1111111111111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\n  \n  \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?           -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x000001FC190397E0>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"683cb331c93f988c910bd574c4b8cb9f\")>\n\n    @allure.story(\"校验数字文本框和文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_order_textverify(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        order.click_add_button()  # 检查点击添加\n        name = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        # 填写订单代码\n        order.enter_texts('(//label[text()=\"订单代码\"])[1]/parent::div//input', name)\n    \n        # 物料\n        random_int = random.randint(1, 4)\n        order.click_button('//label[text()=\"物料\"]/parent::div/div//i')\n        order.click_button(\n            f'(//div[@class=\"vxe-grid--table-container\"]//tr[{random_int}]/td[2])[2]'\n        )\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 填写交货期\n        order.click_button('(//label[text()=\"交货期\"])[1]/parent::div//input')\n        order.click_button('(//div[@class=\"ivu-date-picker-cells\"])[3]/span[19]')\n        order.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary ivu-btn-small\"])[3]'\n        )\n    \n        # 计划数量\n        num = order.get_find_element_xpath(\n            '(//label[text()=\"计划数量\"])[1]/parent::div//input'\n        )\n        num.send_keys(Keys.CONTROL, \"a\")\n        num.send_keys(Keys.BACK_SPACE)\n        order.enter_texts('(//label[text()=\"计划数量\"])[1]/parent::div//input', name)\n    \n        # 点击确定\n        order.click_confirm_button()\n        adddata = order.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]'\n        ).text\n        num_ = order.get_find_element_xpath(\n            f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[10]'\n        ).text\n>       assert adddata == name and num_ == '99999999999'\nE       AssertionError: assert ('111111111111...1111111111111' == '111111111111...1111111111111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\u001B[90m\u001B[39;49;00m and '9999999999' == '99999999999'\nE         \nE         \u001B[0m\u001B[91m- 99999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?           -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 9999999999\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_order.py:310: AssertionError","steps":[],"attachments":[{"uid":"79a3670e300d2747","name":"test_order_textverify_failure","source":"79a3670e300d2747.png","type":"image/png","size":150052},{"uid":"5b92228804f1d830","name":"test_order_textverify_source","source":"5b92228804f1d830.html","type":"text/html","size":1660909},{"uid":"30cb5c07a25d0bb3","name":"log","source":"30cb5c07a25d0bb3.txt","type":"text/plain","size":2379}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_order::0","time":{"start":1761233334359,"stop":1761233336853,"duration":2494},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"校验数字文本框和文本框成功"},{"name":"feature","value":"制造订单表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_order"},{"name":"subSuite","value":"TestOrderPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21764-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"ea7c238a5cb9f6ea.json","parameterValues":[]}