{"uid":"4a76c1b2ba33b95a","name":"test_user_roledel2","fullName":"Tests.test_system.test_userRole.TestUserRolePage#test_user_roledel2","historyId":"3e95d395688141b76ea80471d073565b","time":{"start":1760983738832,"stop":1760983751500,"duration":12668},"status":"broken","statusMessage":"Exception: 点击失败：Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff613186f65+78965]\n\tGetHandleVerifier [0x0x7ff613186fc0+79056]\n\t(No symbol) [0x0x7ff612f19dda]\n\t(No symbol) [0x0x7ff612f217c1]\n\t(No symbol) [0x0x7ff612f2482c]\n\t(No symbol) [0x0x7ff612f248ff]\n\t(No symbol) [0x0x7ff612f781cb]\n\t(No symbol) [0x0x7ff612f756f1]\n\t(No symbol) [0x0x7ff612f72cd1]\n\t(No symbol) [0x0x7ff612f71c44]\n\t(No symbol) [0x0x7ff612f63635]\n\t(No symbol) [0x0x7ff612f9866a]\n\t(No symbol) [0x0x7ff612f62b56]\n\t(No symbol) [0x0x7ff612f98880]\n\t(No symbol) [0x0x7ff612fc0dbe]\n\t(No symbol) [0x0x7ff612f98443]\n\t(No symbol) [0x0x7ff612f61311]\n\t(No symbol) [0x0x7ff612f620a3]\n\tGetHandleVerifier [0x0x7ff61343e26d+2926461]\n\tGetHandleVerifier [0x0x7ff613438993+2903715]\n\tGetHandleVerifier [0x0x7ff613456aed+3026941]\n\tGetHandleVerifier [0x0x7ff6131a16fe+187406]\n\tGetHandleVerifier [0x0x7ff6131a96ef+220159]\n\tGetHandleVerifier [0x0x7ff61318faf4+114692]\n\tGetHandleVerifier [0x0x7ff61318fca9+115129]\n\tGetHandleVerifier [0x0x7ff6131764d8+10728]\n\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\n\tRtlUserThreadStart [0x0x7fff513dcc91+33]","statusTrace":"self = <Pages.systemPage.userRole_page.UserRolePage object at 0x0000014AE4ADBB50>, by_or_element = 'xpath', value = '(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"1测试角色代码2\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\n        else:\n            logging.info(\"点击元素：WebElement 对象\")\n            element = by_or_element\n    \n        try:\n>           element.click()\n\nPages\\base_page.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:121: in click\n    self._execute(Command.CLICK_ELEMENT)\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:574: in _execute\n    return self._parent.execute(command, params)\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000014AE4ADBB80>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...ff6131764d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7fff513dcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE       \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE       \t(No symbol) [0x0x7ff612f19dda]\nE       \t(No symbol) [0x0x7ff612f217c1]\nE       \t(No symbol) [0x0x7ff612f2482c]\nE       \t(No symbol) [0x0x7ff612f248ff]\nE       \t(No symbol) [0x0x7ff612f781cb]\nE       \t(No symbol) [0x0x7ff612f756f1]\nE       \t(No symbol) [0x0x7ff612f72cd1]\nE       \t(No symbol) [0x0x7ff612f71c44]\nE       \t(No symbol) [0x0x7ff612f63635]\nE       \t(No symbol) [0x0x7ff612f9866a]\nE       \t(No symbol) [0x0x7ff612f62b56]\nE       \t(No symbol) [0x0x7ff612f98880]\nE       \t(No symbol) [0x0x7ff612fc0dbe]\nE       \t(No symbol) [0x0x7ff612f98443]\nE       \t(No symbol) [0x0x7ff612f61311]\nE       \t(No symbol) [0x0x7ff612f620a3]\nE       \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE       \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: StaleElementReferenceException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_userRole.TestUserRolePage object at 0x0000014AE2FACD90>, login_to_userrole = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e9bfd19af6100b76d9ced8f9de0736f3\")>\n\n    @allure.story(\"删除角色成功\")\n    # @pytest.mark.run(order=1)\n    def test_user_roledel2(self, login_to_userrole):\n        driver = login_to_userrole  # WebDriver 实例\n        user = UserRolePage(driver)  # 用 driver 初始化 UserRolePage\n        username = DateDriver().username\n        name = \"1测试角色代码2\"\n        # 取消当前用户选中的角色\n        user.select_input(username)\n        user.click_button(f'(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"{username}\"]')\n        sleep(1)\n        user.click_all_button(\"编辑\")\n        sleep(1)\n        user.enter_texts('//div[div[p[text()=\"角色代码\"]]]//input', name)\n        sleep(1)\n        user.click_button('//table[@class=\"vxe-table--body\"]//tr/td[2]//span[@class=\"vxe-cell--checkbox is--checked\"]')\n        user.click_all_button(\"保存\")\n        user.get_find_message()\n    \n        user.click_button('(//span[text()=\"角色管理\"])[1]')\n        # 等待遮罩层消失\n        WebDriverWait(driver, 10).until(\n            EC.invisibility_of_element_located((By.XPATH, \"//div[@class='el-loading-mask']\"))\n        )\n        user.enter_texts('//div[div[p[text()=\"角色代码\"]]]//input', name)\n>       user.click_button(f'(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"{name}\"]')\n\nTests\\test_system\\test_userRole.py:930: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\userRole_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.userRole_page.UserRolePage object at 0x0000014AE4ADBB50>, by_or_element = 'xpath', value = '(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"1测试角色代码2\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\n        else:\n            logging.info(\"点击元素：WebElement 对象\")\n            element = by_or_element\n    \n        try:\n            element.click()\n        except ElementClickInterceptedException:\n            logging.warning(\"⚠️ 原生点击被拦截，尝试使用 JS 点击\")\n            self.driver.execute_script(\"arguments[0].click();\", element)\n        except Exception as e:\n            logging.warning(f\"点击失败：{e}\")\n>           raise Exception(f\"点击失败：{e}\")\nE           Exception: 点击失败：Message: stale element reference: stale element not found in the current frame\nE             (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE           Stacktrace:\nE           \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE           \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE           \t(No symbol) [0x0x7ff612f19dda]\nE           \t(No symbol) [0x0x7ff612f217c1]\nE           \t(No symbol) [0x0x7ff612f2482c]\nE           \t(No symbol) [0x0x7ff612f248ff]\nE           \t(No symbol) [0x0x7ff612f781cb]\nE           \t(No symbol) [0x0x7ff612f756f1]\nE           \t(No symbol) [0x0x7ff612f72cd1]\nE           \t(No symbol) [0x0x7ff612f71c44]\nE           \t(No symbol) [0x0x7ff612f63635]\nE           \t(No symbol) [0x0x7ff612f9866a]\nE           \t(No symbol) [0x0x7ff612f62b56]\nE           \t(No symbol) [0x0x7ff612f98880]\nE           \t(No symbol) [0x0x7ff612fc0dbe]\nE           \t(No symbol) [0x0x7ff612f98443]\nE           \t(No symbol) [0x0x7ff612f61311]\nE           \t(No symbol) [0x0x7ff612f620a3]\nE           \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE           \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE           \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE           \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE           \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE           \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE           \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE           \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE           \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE           \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nPages\\base_page.py:62: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_userrole","time":{"start":1760983723042,"stop":1760983738830,"duration":15788},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"Exception: 点击失败：Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff613186f65+78965]\n\tGetHandleVerifier [0x0x7ff613186fc0+79056]\n\t(No symbol) [0x0x7ff612f19dda]\n\t(No symbol) [0x0x7ff612f217c1]\n\t(No symbol) [0x0x7ff612f2482c]\n\t(No symbol) [0x0x7ff612f248ff]\n\t(No symbol) [0x0x7ff612f781cb]\n\t(No symbol) [0x0x7ff612f756f1]\n\t(No symbol) [0x0x7ff612f72cd1]\n\t(No symbol) [0x0x7ff612f71c44]\n\t(No symbol) [0x0x7ff612f63635]\n\t(No symbol) [0x0x7ff612f9866a]\n\t(No symbol) [0x0x7ff612f62b56]\n\t(No symbol) [0x0x7ff612f98880]\n\t(No symbol) [0x0x7ff612fc0dbe]\n\t(No symbol) [0x0x7ff612f98443]\n\t(No symbol) [0x0x7ff612f61311]\n\t(No symbol) [0x0x7ff612f620a3]\n\tGetHandleVerifier [0x0x7ff61343e26d+2926461]\n\tGetHandleVerifier [0x0x7ff613438993+2903715]\n\tGetHandleVerifier [0x0x7ff613456aed+3026941]\n\tGetHandleVerifier [0x0x7ff6131a16fe+187406]\n\tGetHandleVerifier [0x0x7ff6131a96ef+220159]\n\tGetHandleVerifier [0x0x7ff61318faf4+114692]\n\tGetHandleVerifier [0x0x7ff61318fca9+115129]\n\tGetHandleVerifier [0x0x7ff6131764d8+10728]\n\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\n\tRtlUserThreadStart [0x0x7fff513dcc91+33]","statusTrace":"self = <Pages.systemPage.userRole_page.UserRolePage object at 0x0000014AE4ADBB50>, by_or_element = 'xpath', value = '(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"1测试角色代码2\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\n        else:\n            logging.info(\"点击元素：WebElement 对象\")\n            element = by_or_element\n    \n        try:\n>           element.click()\n\nPages\\base_page.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:121: in click\n    self._execute(Command.CLICK_ELEMENT)\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:574: in _execute\n    return self._parent.execute(command, params)\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000014AE4ADBB80>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...ff6131764d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7fff513dcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE       \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE       \t(No symbol) [0x0x7ff612f19dda]\nE       \t(No symbol) [0x0x7ff612f217c1]\nE       \t(No symbol) [0x0x7ff612f2482c]\nE       \t(No symbol) [0x0x7ff612f248ff]\nE       \t(No symbol) [0x0x7ff612f781cb]\nE       \t(No symbol) [0x0x7ff612f756f1]\nE       \t(No symbol) [0x0x7ff612f72cd1]\nE       \t(No symbol) [0x0x7ff612f71c44]\nE       \t(No symbol) [0x0x7ff612f63635]\nE       \t(No symbol) [0x0x7ff612f9866a]\nE       \t(No symbol) [0x0x7ff612f62b56]\nE       \t(No symbol) [0x0x7ff612f98880]\nE       \t(No symbol) [0x0x7ff612fc0dbe]\nE       \t(No symbol) [0x0x7ff612f98443]\nE       \t(No symbol) [0x0x7ff612f61311]\nE       \t(No symbol) [0x0x7ff612f620a3]\nE       \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE       \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: StaleElementReferenceException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_userRole.TestUserRolePage object at 0x0000014AE2FACD90>, login_to_userrole = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e9bfd19af6100b76d9ced8f9de0736f3\")>\n\n    @allure.story(\"删除角色成功\")\n    # @pytest.mark.run(order=1)\n    def test_user_roledel2(self, login_to_userrole):\n        driver = login_to_userrole  # WebDriver 实例\n        user = UserRolePage(driver)  # 用 driver 初始化 UserRolePage\n        username = DateDriver().username\n        name = \"1测试角色代码2\"\n        # 取消当前用户选中的角色\n        user.select_input(username)\n        user.click_button(f'(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"{username}\"]')\n        sleep(1)\n        user.click_all_button(\"编辑\")\n        sleep(1)\n        user.enter_texts('//div[div[p[text()=\"角色代码\"]]]//input', name)\n        sleep(1)\n        user.click_button('//table[@class=\"vxe-table--body\"]//tr/td[2]//span[@class=\"vxe-cell--checkbox is--checked\"]')\n        user.click_all_button(\"保存\")\n        user.get_find_message()\n    \n        user.click_button('(//span[text()=\"角色管理\"])[1]')\n        # 等待遮罩层消失\n        WebDriverWait(driver, 10).until(\n            EC.invisibility_of_element_located((By.XPATH, \"//div[@class='el-loading-mask']\"))\n        )\n        user.enter_texts('//div[div[p[text()=\"角色代码\"]]]//input', name)\n>       user.click_button(f'(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"{name}\"]')\n\nTests\\test_system\\test_userRole.py:930: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\userRole_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.userRole_page.UserRolePage object at 0x0000014AE4ADBB50>, by_or_element = 'xpath', value = '(//table[@class=\"vxe-table--body\"])[1]//tr/td[2]//span[text()=\"1测试角色代码2\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\n        else:\n            logging.info(\"点击元素：WebElement 对象\")\n            element = by_or_element\n    \n        try:\n            element.click()\n        except ElementClickInterceptedException:\n            logging.warning(\"⚠️ 原生点击被拦截，尝试使用 JS 点击\")\n            self.driver.execute_script(\"arguments[0].click();\", element)\n        except Exception as e:\n            logging.warning(f\"点击失败：{e}\")\n>           raise Exception(f\"点击失败：{e}\")\nE           Exception: 点击失败：Message: stale element reference: stale element not found in the current frame\nE             (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE           Stacktrace:\nE           \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE           \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE           \t(No symbol) [0x0x7ff612f19dda]\nE           \t(No symbol) [0x0x7ff612f217c1]\nE           \t(No symbol) [0x0x7ff612f2482c]\nE           \t(No symbol) [0x0x7ff612f248ff]\nE           \t(No symbol) [0x0x7ff612f781cb]\nE           \t(No symbol) [0x0x7ff612f756f1]\nE           \t(No symbol) [0x0x7ff612f72cd1]\nE           \t(No symbol) [0x0x7ff612f71c44]\nE           \t(No symbol) [0x0x7ff612f63635]\nE           \t(No symbol) [0x0x7ff612f9866a]\nE           \t(No symbol) [0x0x7ff612f62b56]\nE           \t(No symbol) [0x0x7ff612f98880]\nE           \t(No symbol) [0x0x7ff612fc0dbe]\nE           \t(No symbol) [0x0x7ff612f98443]\nE           \t(No symbol) [0x0x7ff612f61311]\nE           \t(No symbol) [0x0x7ff612f620a3]\nE           \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE           \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE           \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE           \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE           \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE           \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE           \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE           \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE           \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE           \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nPages\\base_page.py:62: Exception","steps":[],"attachments":[{"uid":"13e6dd9a3d11ac60","name":"test_user_roledel2_failure","source":"13e6dd9a3d11ac60.png","type":"image/png","size":115662},{"uid":"d94ebaadc7828478","name":"test_user_roledel2_source","source":"d94ebaadc7828478.html","type":"text/html","size":1131778},{"uid":"b6013e2df4b0f510","name":"log","source":"b6013e2df4b0f510.txt","type":"text/plain","size":3131}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_userrole::0","time":{"start":1760983752290,"stop":1760983754745,"duration":2455},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"删除角色成功"},{"name":"feature","value":"用户权限管理页用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_userRole"},{"name":"subSuite","value":"TestUserRolePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_userRole"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"4a76c1b2ba33b95a.json","parameterValues":[]}