{"uid":"4da5cf00a5787ead","name":"test_affairs_log_sel8","fullName":"Tests.test_system.test_affairs.TestAffairsPage#test_affairs_log_sel8","historyId":"5b06438578fd0567f5da91b724545f80","time":{"start":1761160585593,"stop":1761160606682,"duration":21089},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[div/span[text()=\"定时排产\"]]","statusTrace":"self = <Pages.systemPage.affairs_page.AffairsPage object at 0x0000027FE5E62530>, by_or_element = 'xpath', value = '//li[div/span[text()=\"定时排产\"]]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0aa8150111699ae9418e0dcb633772f9\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000027FE7AF2950>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6e4aa6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6e4aa6fc0+79056]\nE       \t(No symbol) [0x0x7ff6e4839dda]\nE       \t(No symbol) [0x0x7ff6e48902ea]\nE       \t(No symbol) [0x0x7ff6e489059c]\nE       \t(No symbol) [0x0x7ff6e48e3f37]\nE       \t(No symbol) [0x0x7ff6e48b86af]\nE       \t(No symbol) [0x0x7ff6e48e0dbe]\nE       \t(No symbol) [0x0x7ff6e48b8443]\nE       \t(No symbol) [0x0x7ff6e4881311]\nE       \t(No symbol) [0x0x7ff6e48820a3]\nE       \tGetHandleVerifier [0x0x7ff6e4d5e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6e4d58993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6e4d76aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6e4ac16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6e4ac96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6e4aafaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6e4aafca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6e4a964d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_affairs.TestAffairsPage object at 0x0000027FE5DF7130>, login_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0aa8150111699ae9418e0dcb633772f9\")>\n\n    @allure.story(\"流程日志-全部条件搜索成功，没有数据的时候显示无数据\")\n    def test_affairs_log_sel8(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        sleep(1)\n        num = 1000\n        time1 = \"2025-02-27 \"\n        time2 = \"10:20:00\"\n        ptype = \"执行失败\"\n        pid = \"4118362784269241\"\n        pname = \"每周\"\n        affairs_name = \"定时排产\"\n        affairs.click_process_log()\n        affairs.click_paging(num)\n        sleep(1)\n>       affairs.sel_log_all(time1=time1, time2=time2, ptype=ptype, pid=pid, pname=pname, affairs_name=affairs_name)\n\nTests\\test_system\\test_affairs.py:1451: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\affairs_page.py:395: in sel_log_all\n    self.click_button(f'//li[div/span[text()=\"{affairs_name}\"]]')\nPages\\systemPage\\affairs_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.affairs_page.AffairsPage object at 0x0000027FE5E62530>, by_or_element = 'xpath', value = '//li[div/span[text()=\"定时排产\"]]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[div/span[text()=\"定时排产\"]]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_affairs","time":{"start":1761160568548,"stop":1761160585591,"duration":17043},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[div/span[text()=\"定时排产\"]]","statusTrace":"self = <Pages.systemPage.affairs_page.AffairsPage object at 0x0000027FE5E62530>, by_or_element = 'xpath', value = '//li[div/span[text()=\"定时排产\"]]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0aa8150111699ae9418e0dcb633772f9\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000027FE7AF2950>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6e4aa6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff6e4aa6fc0+79056]\nE       \t(No symbol) [0x0x7ff6e4839dda]\nE       \t(No symbol) [0x0x7ff6e48902ea]\nE       \t(No symbol) [0x0x7ff6e489059c]\nE       \t(No symbol) [0x0x7ff6e48e3f37]\nE       \t(No symbol) [0x0x7ff6e48b86af]\nE       \t(No symbol) [0x0x7ff6e48e0dbe]\nE       \t(No symbol) [0x0x7ff6e48b8443]\nE       \t(No symbol) [0x0x7ff6e4881311]\nE       \t(No symbol) [0x0x7ff6e48820a3]\nE       \tGetHandleVerifier [0x0x7ff6e4d5e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff6e4d58993+2903715]\nE       \tGetHandleVerifier [0x0x7ff6e4d76aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6e4ac16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6e4ac96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff6e4aafaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff6e4aafca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6e4a964d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_affairs.TestAffairsPage object at 0x0000027FE5DF7130>, login_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0aa8150111699ae9418e0dcb633772f9\")>\n\n    @allure.story(\"流程日志-全部条件搜索成功，没有数据的时候显示无数据\")\n    def test_affairs_log_sel8(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        sleep(1)\n        num = 1000\n        time1 = \"2025-02-27 \"\n        time2 = \"10:20:00\"\n        ptype = \"执行失败\"\n        pid = \"4118362784269241\"\n        pname = \"每周\"\n        affairs_name = \"定时排产\"\n        affairs.click_process_log()\n        affairs.click_paging(num)\n        sleep(1)\n>       affairs.sel_log_all(time1=time1, time2=time2, ptype=ptype, pid=pid, pname=pname, affairs_name=affairs_name)\n\nTests\\test_system\\test_affairs.py:1451: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\affairs_page.py:395: in sel_log_all\n    self.click_button(f'//li[div/span[text()=\"{affairs_name}\"]]')\nPages\\systemPage\\affairs_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.affairs_page.AffairsPage object at 0x0000027FE5E62530>, by_or_element = 'xpath', value = '//li[div/span[text()=\"定时排产\"]]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[div/span[text()=\"定时排产\"]]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"9206c44e154594d3","name":"test_affairs_log_sel8_failure","source":"9206c44e154594d3.png","type":"image/png","size":59922},{"uid":"26e2c052f74c4fa3","name":"test_affairs_log_sel8_source","source":"26e2c052f74c4fa3.html","type":"text/html","size":1137421},{"uid":"6b3c9e4a1310cb31","name":"log","source":"6b3c9e4a1310cb31.txt","type":"text/plain","size":3973}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"login_to_affairs::0","time":{"start":1761160607425,"stop":1761160609876,"duration":2451},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"feature","value":"事务管理页用例"},{"name":"story","value":"流程日志-全部条件搜索成功，没有数据的时候显示无数据"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_affairs"},{"name":"subSuite","value":"TestAffairsPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"25856-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_affairs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"717823bd85dda897","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[div/span[text()=\"定时排产\"]]","time":{"start":1761160543931,"stop":1761160565363,"duration":21432}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"4da5cf00a5787ead.json","parameterValues":[]}