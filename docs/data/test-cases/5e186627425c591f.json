{"uid":"5e186627425c591f","name":"test_order_addrepeat","fullName":"Tests.test_items.test_order.TestOrderPage#test_order_addrepeat","historyId":"04e4cbbe0ab48b18b85f24d4baefa3ed","time":{"start":1758720975047,"stop":1758720980457,"duration":5410},"status":"failed","statusMessage":"AssertionError: 预期数据是记录已存在,请检查，实际得到\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x00000271F341FB20>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b06cdf35fe9965f5067930e8dc714aee\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_order_addrepeat(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        order.click_add_button()  # 检查点击添加\n        name = \"111\"\n        # 填写订单代码\n        order.enter_texts('(//label[text()=\"订单代码\"])[1]/parent::div//input', name)\n    \n        # 物料\n        random_int = random.randint(1, 4)\n        order.click_button('//label[text()=\"物料\"]/parent::div/div//i')\n        order.click_button(\n            f'(//div[@class=\"vxe-grid--table-container\"]//tr[{random_int}]/td[2])[2]'\n        )\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 填写交货期\n        order.click_button('(//label[text()=\"交货期\"])[1]/parent::div//input')\n        order.click_button('(//div[@class=\"ivu-date-picker-cells\"])[3]/span[19]')\n        order.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary ivu-btn-small\"])[3]'\n        )\n    \n        # 点击确定\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n    \n        # 获取重复弹窗文字\n        error_popup = order.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert (\n            error_popup == \"记录已存在,请检查！\"\n        ), f\"预期数据是记录已存在,请检查，实际得到{error_popup}\"\nE       AssertionError: 预期数据是记录已存在,请检查，实际得到\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_order.py:405: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_order","time":{"start":1758720966151,"stop":1758720975046,"duration":8895},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期数据是记录已存在,请检查，实际得到\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x00000271F341FB20>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b06cdf35fe9965f5067930e8dc714aee\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_order_addrepeat(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        order.click_add_button()  # 检查点击添加\n        name = \"111\"\n        # 填写订单代码\n        order.enter_texts('(//label[text()=\"订单代码\"])[1]/parent::div//input', name)\n    \n        # 物料\n        random_int = random.randint(1, 4)\n        order.click_button('//label[text()=\"物料\"]/parent::div/div//i')\n        order.click_button(\n            f'(//div[@class=\"vxe-grid--table-container\"]//tr[{random_int}]/td[2])[2]'\n        )\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]/button[1]'\n        )\n    \n        # 填写交货期\n        order.click_button('(//label[text()=\"交货期\"])[1]/parent::div//input')\n        order.click_button('(//div[@class=\"ivu-date-picker-cells\"])[3]/span[19]')\n        order.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary ivu-btn-small\"])[3]'\n        )\n    \n        # 点击确定\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n    \n        # 获取重复弹窗文字\n        error_popup = order.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert (\n            error_popup == \"记录已存在,请检查！\"\n        ), f\"预期数据是记录已存在,请检查，实际得到{error_popup}\"\nE       AssertionError: 预期数据是记录已存在,请检查，实际得到\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_order.py:405: AssertionError","steps":[],"attachments":[{"uid":"230c51ed98f98919","name":"test_order_addrepeat_failure","source":"230c51ed98f98919.png","type":"image/png","size":149933},{"uid":"19b95dca1d218bc4","name":"test_order_addrepeat_source","source":"19b95dca1d218bc4.html","type":"text/html","size":1664921},{"uid":"c6aa55d993823939","name":"log","source":"c6aa55d993823939.txt","type":"text/plain","size":1950}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_order::0","time":{"start":1758720980775,"stop":1758720982979,"duration":2204},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"制造订单表测试用例"},{"name":"story","value":"添加数据重复"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_order"},{"name":"subSuite","value":"TestOrderPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"15904-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"5e186627425c591f.json","parameterValues":[]}