{"uid":"3891393e9193e77d","name":"test_affairs_template_addall","fullName":"Tests.test_system.test_affairs.TestAffairsPage#test_affairs_template_addall","historyId":"ee991b0c343e2c9f28aff267bf6ee92c","time":{"start":1755107108772,"stop":1755107125949,"duration":17177},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"刷新\"]","statusTrace":"self = <Pages.systemPage.affairs_page.AffairsPage object at 0x0000023BD63A6DA0>, by_or_element = 'xpath', value = '//li[text()=\"刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d019ab6fa7cc0d70a545bb599ba14d5e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000023BD65DB0A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_affairs.TestAffairsPage object at 0x0000023BD4092950>\nlogin_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d019ab6fa7cc0d70a545bb599ba14d5e\")>\n\n    @allure.story(\"事务模版-添加全部成功\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_template_addall(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        name = \"添加全部模版成功\"\n        type = \"接口\"\n        xpth_list = [\n            '//div[label[text()=\"事务名称\"]]//input',\n            '//div[label[text()=\"事务类型\"]]//input',\n            '//div[label[text()=\"事务描述\"]]//input',\n            '//div[label[text()=\"配置参数\"]]//input',\n            '//div[label[text()=\"推送参数设置\"]]//input',\n        ]\n        affairs.click_add_affairs(name=name, type=type, button=False)\n        affairs.click_button('(//table[@class=\"vxe-table--body\"])[2]//tr[1]//span')\n        affairs.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n        affairs.enter_texts('//div[label[text()=\"事务描述\"]]//input', name)\n        swich = affairs.get_find_element_xpath('//div[label[text()=\"推送\"]]//div[@role=\"switch\"]').get_attribute(\"class\")\n        if swich == \"el-switch\":\n            affairs.click_button('//div[label[text()=\"推送\"]]//div[@role=\"switch\"]')\n    \n        checked = affairs.get_find_element_xpath('//label[span[text()=\"站内\"]]/span[1]').get_attribute(\"class\")\n        if checked == 'el-checkbox__input':\n            affairs.click_button('//label[span[text()=\"站内\"]]/span[1]')\n    \n        affairs.click_button('//div[label[text()=\"推送参数设置\"]]//i[@class=\"ivu-icon ivu-icon-md-albums paramIcon\"]')\n        affairs.click_button('//div[text()=\" 用户 \"]')\n        affairs.click_button('//div[span[text()=\"用户:\"]]//i')\n        affairs.click_button('//li[span[text()=\"洪奥青\"]]')\n        affairs.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[3]//span[text()=\"确定\"]')\n        sleep(1)\n        before_list = affairs.batch_acquisition_input(xpth_list)\n        before_swich = affairs.get_find_element_xpath('//div[label[text()=\"推送\"]]//div[@role=\"switch\"]').get_attribute(\"class\")\n        before_checked = affairs.get_find_element_xpath('//label[span[text()=\"站内\"]]/span[1]').get_attribute(\"class\")\n        affairs.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        ele = driver.find_elements(By.XPATH, f'//div[@class=\"template-card__title\"]/div[text()=\"{name}\"]')\n        value = ele[0].find_element(By.XPATH, './ancestor::div[3]/div[3]/div').text\n>       affairs.right_refresh()\n\nTests\\test_system\\test_affairs.py:372: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\affairs_page.py:56: in right_refresh\n    self.click_button('//li[text()=\"刷新\"]')\nPages\\systemPage\\affairs_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.affairs_page.AffairsPage object at 0x0000023BD63A6DA0>, by_or_element = 'xpath', value = '//li[text()=\"刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"刷新\"]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_affairs","time":{"start":1755107098208,"stop":1755107108772,"duration":10564},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"刷新\"]","statusTrace":"self = <Pages.systemPage.affairs_page.AffairsPage object at 0x0000023BD63A6DA0>, by_or_element = 'xpath', value = '//li[text()=\"刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d019ab6fa7cc0d70a545bb599ba14d5e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000023BD65DB0A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_affairs.TestAffairsPage object at 0x0000023BD4092950>\nlogin_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d019ab6fa7cc0d70a545bb599ba14d5e\")>\n\n    @allure.story(\"事务模版-添加全部成功\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_template_addall(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        name = \"添加全部模版成功\"\n        type = \"接口\"\n        xpth_list = [\n            '//div[label[text()=\"事务名称\"]]//input',\n            '//div[label[text()=\"事务类型\"]]//input',\n            '//div[label[text()=\"事务描述\"]]//input',\n            '//div[label[text()=\"配置参数\"]]//input',\n            '//div[label[text()=\"推送参数设置\"]]//input',\n        ]\n        affairs.click_add_affairs(name=name, type=type, button=False)\n        affairs.click_button('(//table[@class=\"vxe-table--body\"])[2]//tr[1]//span')\n        affairs.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[2]//span[text()=\"确定\"]')\n        affairs.enter_texts('//div[label[text()=\"事务描述\"]]//input', name)\n        swich = affairs.get_find_element_xpath('//div[label[text()=\"推送\"]]//div[@role=\"switch\"]').get_attribute(\"class\")\n        if swich == \"el-switch\":\n            affairs.click_button('//div[label[text()=\"推送\"]]//div[@role=\"switch\"]')\n    \n        checked = affairs.get_find_element_xpath('//label[span[text()=\"站内\"]]/span[1]').get_attribute(\"class\")\n        if checked == 'el-checkbox__input':\n            affairs.click_button('//label[span[text()=\"站内\"]]/span[1]')\n    \n        affairs.click_button('//div[label[text()=\"推送参数设置\"]]//i[@class=\"ivu-icon ivu-icon-md-albums paramIcon\"]')\n        affairs.click_button('//div[text()=\" 用户 \"]')\n        affairs.click_button('//div[span[text()=\"用户:\"]]//i')\n        affairs.click_button('//li[span[text()=\"洪奥青\"]]')\n        affairs.click_button('(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[3]//span[text()=\"确定\"]')\n        sleep(1)\n        before_list = affairs.batch_acquisition_input(xpth_list)\n        before_swich = affairs.get_find_element_xpath('//div[label[text()=\"推送\"]]//div[@role=\"switch\"]').get_attribute(\"class\")\n        before_checked = affairs.get_find_element_xpath('//label[span[text()=\"站内\"]]/span[1]').get_attribute(\"class\")\n        affairs.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        ele = driver.find_elements(By.XPATH, f'//div[@class=\"template-card__title\"]/div[text()=\"{name}\"]')\n        value = ele[0].find_element(By.XPATH, './ancestor::div[3]/div[3]/div').text\n>       affairs.right_refresh()\n\nTests\\test_system\\test_affairs.py:372: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\affairs_page.py:56: in right_refresh\n    self.click_button('//li[text()=\"刷新\"]')\nPages\\systemPage\\affairs_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.affairs_page.AffairsPage object at 0x0000023BD63A6DA0>, by_or_element = 'xpath', value = '//li[text()=\"刷新\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //li[text()=\"刷新\"]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"f9a530bdba951d1","name":"test_affairs_template_addall_failure","source":"f9a530bdba951d1.png","type":"image/png","size":105388},{"uid":"1283f2a0582ea50f","name":"test_affairs_template_addall_source","source":"1283f2a0582ea50f.html","type":"text/html","size":1127814},{"uid":"7a602fd2b4b785c4","name":"log","source":"7a602fd2b4b785c4.txt","type":"text/plain","size":4043}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_affairs::0","time":{"start":1755107126271,"stop":1755107128546,"duration":2275},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"事务管理页用例"},{"name":"story","value":"事务模版-添加全部成功"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_affairs"},{"name":"subSuite","value":"TestAffairsPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_affairs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"3891393e9193e77d.json","parameterValues":[]}