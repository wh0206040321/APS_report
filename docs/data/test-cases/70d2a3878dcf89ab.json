{"uid":"70d2a3878dcf89ab","name":"test_item_selectcodesuccess","fullName":"Tests.test_material.test_materialShortageDetails.TestItemPage#test_item_selectcodesuccess","historyId":"9c751b5dfe8b22469b41ad0d0243046b","time":{"start":1754322199017,"stop":1754322207666,"duration":8649},"status":"failed","statusMessage":"AssertionError: assert ('111' == '111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"cf0faa9c21b1a3569051aa3f2bd72679\", element=\"f.98B07B4170B7FB3001A4F9AE84FB3543.d.9B3C99FF37BEE452DDFE2112411A3C20.e.314\")>])","statusTrace":"self = <test_material.test_materialShortageDetails.TestItemPage object at 0x0000012C8E48AE90>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf0faa9c21b1a3569051aa3f2bd72679\")>\n\n    @allure.story(\"查询物料代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectcodesuccess(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击工厂代码\n        item.click_button('//div[text()=\"物料代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"111\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        # 定位第一行是否为产品A\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        itemcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert itemcode == \"111\" and len(itemcode2) == 0\nE       assert ('111' == '111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"cf0faa9c21b1a3569051aa3f2bd72679\", element=\"f.98B07B4170B7FB3001A4F9AE84FB3543.d.9B3C99FF37BEE452DDFE2112411A3C20.e.314\")>])\n\nTests\\test_material\\test_materialShortageDetails.py:471: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1754322191393,"stop":1754322199014,"duration":7621},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"setup","time":{"start":1754322199014,"stop":1754322199016,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('111' == '111'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\n +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"cf0faa9c21b1a3569051aa3f2bd72679\", element=\"f.98B07B4170B7FB3001A4F9AE84FB3543.d.9B3C99FF37BEE452DDFE2112411A3C20.e.314\")>])","statusTrace":"self = <test_material.test_materialShortageDetails.TestItemPage object at 0x0000012C8E48AE90>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf0faa9c21b1a3569051aa3f2bd72679\")>\n\n    @allure.story(\"查询物料代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_selectcodesuccess(self, login_to_item):\n        driver = login_to_item  # WebDriver 实例\n        item = WarehouseLocationPage(driver)  # 用 driver 初始化 ItemPage\n    \n        # 点击查询\n        item.click_sel_button()\n        sleep(1)\n        # 定位名称输入框\n        element_to_double_click = driver.find_element(\n            By.XPATH,\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[4]',\n        )\n        # 创建一个 ActionChains 对象\n        actions = ActionChains(driver)\n        # 双击命令\n        actions.double_click(element_to_double_click).perform()\n        sleep(1)\n        # 点击工厂代码\n        item.click_button('//div[text()=\"物料代码\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击比较关系框\n        item.click_button(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[5]//input'\n        )\n        sleep(1)\n        # 点击=\n        item.click_button('//div[text()=\"=\" and contains(@optid,\"opt_\")]')\n        sleep(1)\n        # 点击输入数值\n        item.enter_texts(\n            '(//div[@class=\"vxe-table--render-wrapper\"])[3]/div[1]/div[2]//tr[1]/td[6]//input',\n            \"111\",\n        )\n        sleep(1)\n    \n        # 点击确认\n        item.click_button(\n            '(//button[@class=\"ivu-btn ivu-btn-primary\"]/span[text()=\"确定\"])[2]'\n        )\n        sleep(1)\n        # 定位第一行是否为产品A\n        itemcode = item.get_find_element_xpath(\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][1]/td[2]'\n        ).text\n        # 定位第二行没有数据\n        itemcode2 = driver.find_elements(\n            By.XPATH,\n            '(//table[contains(@class, \"vxe-table--body\")])[2]//tr[@class=\"vxe-body--row\"][2]/td[2]',\n        )\n>       assert itemcode == \"111\" and len(itemcode2) == 0\nE       assert ('111' == '111'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m 111\u001B[90m\u001B[39;49;00m and 1 == 0)\nE        +  where 1 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"cf0faa9c21b1a3569051aa3f2bd72679\", element=\"f.98B07B4170B7FB3001A4F9AE84FB3543.d.9B3C99FF37BEE452DDFE2112411A3C20.e.314\")>])\n\nTests\\test_material\\test_materialShortageDetails.py:471: AssertionError","steps":[],"attachments":[{"uid":"e35bb9892a855535","name":"test_item_selectcodesuccess_failure","source":"e35bb9892a855535.png","type":"image/png","size":109920},{"uid":"6992f80689747cd0","name":"test_item_selectcodesuccess_source","source":"6992f80689747cd0.html","type":"text/html","size":1276746},{"uid":"6d58114f5f831f22","name":"log","source":"6d58114f5f831f22.txt","type":"text/plain","size":3167}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"login_to_item::0","time":{"start":1754322207828,"stop":1754322209980,"duration":2152},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"story","value":"查询物料代码成功"},{"name":"feature","value":"交付需求明细测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialShortageDetails"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialShortageDetails"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"112698905d25f480","status":"failed","statusDetails":"AssertionError: assert ('M001' == '111'\n  \n  \u001B[0m\u001B[91m- 111\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ M001\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","time":{"start":1754322180313,"stop":1754322189057,"duration":8744}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"70d2a3878dcf89ab.json","parameterValues":[]}