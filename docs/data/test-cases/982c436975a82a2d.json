{"uid":"982c436975a82a2d","name":"test_item_refreshsuccess","fullName":"Tests.test_material.test_materialBuyer.TestItemPage#test_item_refreshsuccess","historyId":"7c7331eb8a28e609a9b8e55592c94a12","time":{"start":1755185725176,"stop":1755185735344,"duration":10168},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9be02ea]\n\t(No symbol) [0x0x7ff7f9be059c]\n\t(No symbol) [0x0x7ff7f9c33f37]\n\t(No symbol) [0x0x7ff7f9c086af]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","statusTrace":"self = <test_material.test_materialBuyer.TestItemPage object at 0x0000019971700F10>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1f922067bd1c63d44dcb95fa7becb26e\")>\n\n    @allure.story(\"刷新成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_refreshsuccess(self, login_to_item):\n    \n        # 物料代码筛选框输入123\n>       self.item.enter_texts(\n            '//p[text()=\"物料代码\"]/ancestor::div[2]//input', \"123\"\n        )\n\nTests\\test_material\\test_materialBuyer.py:331: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\materialPage\\warehouseLocation_page.py:56: in enter_texts\n    self.enter_text(By.XPATH, xpath, text)\nPages\\base_page.py:66: in enter_text\n    element = WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1f922067bd1c63d44dcb95fa7becb26e\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000199720067A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\nE       \t(No symbol) [0x0x7ff7f9b89dda]\nE       \t(No symbol) [0x0x7ff7f9be02ea]\nE       \t(No symbol) [0x0x7ff7f9be059c]\nE       \t(No symbol) [0x0x7ff7f9c33f37]\nE       \t(No symbol) [0x0x7ff7f9c086af]\nE       \t(No symbol) [0x0x7ff7f9c30dbe]\nE       \t(No symbol) [0x0x7ff7f9c08443]\nE       \t(No symbol) [0x0x7ff7f9bd1311]\nE       \t(No symbol) [0x0x7ff7f9bd20a3]\nE       \tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcd4147374+20]\nE       \tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1755185716643,"stop":1755185725171,"duration":8528},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"setup","time":{"start":1755185725171,"stop":1755185725175,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9be02ea]\n\t(No symbol) [0x0x7ff7f9be059c]\n\t(No symbol) [0x0x7ff7f9c33f37]\n\t(No symbol) [0x0x7ff7f9c086af]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","statusTrace":"self = <test_material.test_materialBuyer.TestItemPage object at 0x0000019971700F10>\nlogin_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1f922067bd1c63d44dcb95fa7becb26e\")>\n\n    @allure.story(\"刷新成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_refreshsuccess(self, login_to_item):\n    \n        # 物料代码筛选框输入123\n>       self.item.enter_texts(\n            '//p[text()=\"物料代码\"]/ancestor::div[2]//input', \"123\"\n        )\n\nTests\\test_material\\test_materialBuyer.py:331: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\materialPage\\warehouseLocation_page.py:56: in enter_texts\n    self.enter_text(By.XPATH, xpath, text)\nPages\\base_page.py:66: in enter_text\n    element = WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1f922067bd1c63d44dcb95fa7becb26e\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000199720067A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\nE       \t(No symbol) [0x0x7ff7f9b89dda]\nE       \t(No symbol) [0x0x7ff7f9be02ea]\nE       \t(No symbol) [0x0x7ff7f9be059c]\nE       \t(No symbol) [0x0x7ff7f9c33f37]\nE       \t(No symbol) [0x0x7ff7f9c086af]\nE       \t(No symbol) [0x0x7ff7f9c30dbe]\nE       \t(No symbol) [0x0x7ff7f9c08443]\nE       \t(No symbol) [0x0x7ff7f9bd1311]\nE       \t(No symbol) [0x0x7ff7f9bd20a3]\nE       \tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcd4147374+20]\nE       \tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"303a5cb9c8ef4c3e","name":"test_item_refreshsuccess_failure","source":"303a5cb9c8ef4c3e.png","type":"image/png","size":81741},{"uid":"d79629f49b318a1","name":"test_item_refreshsuccess_source","source":"d79629f49b318a1.html","type":"text/html","size":1190063},{"uid":"eb8afd641a506096","name":"log","source":"eb8afd641a506096.txt","type":"text/plain","size":777}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_item::0","time":{"start":1755185735495,"stop":1755185737641,"duration":2146},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"刷新成功"},{"name":"feature","value":"物料员测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialBuyer"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"16980-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialBuyer"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"982c436975a82a2d.json","parameterValues":[]}