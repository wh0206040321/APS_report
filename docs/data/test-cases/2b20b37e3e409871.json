{"uid":"2b20b37e3e409871","name":"test_synchronize_all_plan2","fullName":"Tests.test_system.test_synchronize.TestSynchronizePage#test_synchronize_all_plan2","historyId":"e17565ab4c2989457c40e6ad2fbb0803","time":{"start":1761074643512,"stop":1761074669578,"duration":26066},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //ul/li[text()=\"1测试A\"]","statusTrace":"self = <Pages.systemPage.synchronize_page.SynchronizePage object at 0x00000173A54D9BD0>, by_or_element = 'xpath', value = '//ul/li[text()=\"1测试A\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d32673d65402be82e7cf1868397ef2a7\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000173A88670A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196602ea]\nE       \t(No symbol) [0x0x7ff71966059c]\nE       \t(No symbol) [0x0x7ff7196b3f37]\nE       \t(No symbol) [0x0x7ff7196886af]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_synchronize.TestSynchronizePage object at 0x00000173A6742830>, login_to_synchronize = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d32673d65402be82e7cf1868397ef2a7\")>\n\n    @allure.story(\"同步1个计划方案到多个计划单元成功\")\n    # @pytest.mark.run(order=1)\n    def test_synchronize_all_plan2(self, login_to_synchronize):\n        driver = login_to_synchronize  # WebDriver 实例\n        synchronize = SynchronizePage(driver)  # 用 driver 初始化 SynchronizePage\n        plan_name = [\n            \"排产方案(订单级)同步3\",\n        ]\n        plan_names = [\n            \"1测试计划单元标准\",\n            \"1测试A\",\n        ]\n        synchronize.click_checkbox_value(plan_name, plan_names, \"2\")\n        synchronize.click_synchronize_button()\n        synchronize.click_synchronize_pop(True)\n        message = synchronize.get_find_message()\n        synchronize.switch_plane(plan_names[0], 2)\n        for name in plan_name:\n            elements = synchronize.finds_elements(\n                By.XPATH,\n                f'//span[text()=\"{name}\" and @class=\"ivu-tree-title\"]'\n            )\n            assert len(elements) == 1, f\"未找到或找到多个{name}\"\n        synchronize.click_button(f'//div[contains(text(),\"{plan_names[0]}\")]')\n>       synchronize.switch_plane(plan_names[1], 2, js=False)\n\nTests\\test_system\\test_synchronize.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\synchronize_page.py:89: in switch_plane\n    self.click_button(f'//ul/li[text()=\"{name}\"]')\nPages\\systemPage\\synchronize_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.synchronize_page.SynchronizePage object at 0x00000173A54D9BD0>, by_or_element = 'xpath', value = '//ul/li[text()=\"1测试A\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //ul/li[text()=\"1测试A\"]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_synchronize","time":{"start":1761074623305,"stop":1761074643509,"duration":20204},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //ul/li[text()=\"1测试A\"]","statusTrace":"self = <Pages.systemPage.synchronize_page.SynchronizePage object at 0x00000173A54D9BD0>, by_or_element = 'xpath', value = '//ul/li[text()=\"1测试A\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d32673d65402be82e7cf1868397ef2a7\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000173A88670A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196602ea]\nE       \t(No symbol) [0x0x7ff71966059c]\nE       \t(No symbol) [0x0x7ff7196b3f37]\nE       \t(No symbol) [0x0x7ff7196886af]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_synchronize.TestSynchronizePage object at 0x00000173A6742830>, login_to_synchronize = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d32673d65402be82e7cf1868397ef2a7\")>\n\n    @allure.story(\"同步1个计划方案到多个计划单元成功\")\n    # @pytest.mark.run(order=1)\n    def test_synchronize_all_plan2(self, login_to_synchronize):\n        driver = login_to_synchronize  # WebDriver 实例\n        synchronize = SynchronizePage(driver)  # 用 driver 初始化 SynchronizePage\n        plan_name = [\n            \"排产方案(订单级)同步3\",\n        ]\n        plan_names = [\n            \"1测试计划单元标准\",\n            \"1测试A\",\n        ]\n        synchronize.click_checkbox_value(plan_name, plan_names, \"2\")\n        synchronize.click_synchronize_button()\n        synchronize.click_synchronize_pop(True)\n        message = synchronize.get_find_message()\n        synchronize.switch_plane(plan_names[0], 2)\n        for name in plan_name:\n            elements = synchronize.finds_elements(\n                By.XPATH,\n                f'//span[text()=\"{name}\" and @class=\"ivu-tree-title\"]'\n            )\n            assert len(elements) == 1, f\"未找到或找到多个{name}\"\n        synchronize.click_button(f'//div[contains(text(),\"{plan_names[0]}\")]')\n>       synchronize.switch_plane(plan_names[1], 2, js=False)\n\nTests\\test_system\\test_synchronize.py:321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\synchronize_page.py:89: in switch_plane\n    self.click_button(f'//ul/li[text()=\"{name}\"]')\nPages\\systemPage\\synchronize_page.py:24: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.synchronize_page.SynchronizePage object at 0x00000173A54D9BD0>, by_or_element = 'xpath', value = '//ul/li[text()=\"1测试A\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //ul/li[text()=\"1测试A\"]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"fa52bb517975ed1f","name":"test_synchronize_all_plan2_failure","source":"fa52bb517975ed1f.png","type":"image/png","size":67591},{"uid":"42e86951da5a1d21","name":"test_synchronize_all_plan2_source","source":"42e86951da5a1d21.html","type":"text/html","size":1075015},{"uid":"c217e2b498452d63","name":"log","source":"c217e2b498452d63.txt","type":"text/plain","size":6089}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_synchronize::0","time":{"start":1761074670120,"stop":1761074672567,"duration":2447},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"同步1个计划方案到多个计划单元成功"},{"name":"feature","value":"配置同步页用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_synchronize"},{"name":"subSuite","value":"TestSynchronizePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_synchronize"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3b489e6b34ae4dd5","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //ul/li[text()=\"1测试A\"]","time":{"start":1761074591525,"stop":1761074620251,"duration":28726}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"2b20b37e3e409871.json","parameterValues":[]}