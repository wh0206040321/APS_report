{"uid":"87cf85d43dfb7279","name":"test_setting_layoutlist_updatefail","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_layoutlist_updatefail","historyId":"9871941699426fafe0b0464cce205826","time":{"start":1753799558988,"stop":1753799564291,"duration":5303},"status":"failed","statusMessage":"AssertionError: assert '布局名称不能重复！' == '布局名称已存在，请重新输入'\n  \n  \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 布局名称不能重复！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x000001DD81E8BC40>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"032ceab85fdacd4be63ab9e277b36e47\")>\n\n    @allure.story(\"重复修改布局 不允许修改\")\n    # @pytest.mark.run(order=1)\n    def test_setting_layoutlist_updatefail(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"修改布局\"\n        sleep(2)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n        sleep(1)\n        setting.click_button(f'//span[./span[text()=\"{layout}\"]]/following-sibling::i[2]')\n    \n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n        target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n    \n        # 获取父容器下所有 div\n        # 这一步是为了确定目标 div 在其父容器中的位置\n        parent_div = setting.get_find_element_xpath(f'//div[@id=\"container\"]')\n        all_children = parent_div.find_elements(By.XPATH, \"./div\")\n    \n        # 获取目标 div 的位置索引（从0开始）\n        # 这里是为了后续操作，比如点击目标 div 相关的按钮\n        index = all_children.index(target_div)\n        print(f\"目标 div 是第 {index + 1} 个 div\")  # 输出 3（如果从0开始则是2）\n    \n        setting.click_button(f'(//div[text()=\"重命名\"])[{index + 1}]')\n        ele = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input'\n        )\n        ele.send_keys(Keys.CONTROL, 'a')\n        ele.send_keys(Keys.DELETE)\n        setting.enter_texts(f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input', \"测试布局A\")\n    \n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(1)\n        # 获取设置后的提示信息\n        message = setting.get_find_message()\n        # 断言提示信息是否符合预期，以验证设置是否生效\n>       assert message.text == \"布局名称已存在，请重新输入\"\nE       AssertionError: assert '布局名称不能重复！' == '布局名称已存在，请重新输入'\nE         \nE         \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 布局名称不能重复！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:2218: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1753799549798,"stop":1753799558987,"duration":9189},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '布局名称不能重复！' == '布局名称已存在，请重新输入'\n  \n  \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 布局名称不能重复！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x000001DD81E8BC40>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"032ceab85fdacd4be63ab9e277b36e47\")>\n\n    @allure.story(\"重复修改布局 不允许修改\")\n    # @pytest.mark.run(order=1)\n    def test_setting_layoutlist_updatefail(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"修改布局\"\n        sleep(2)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n        sleep(1)\n        setting.click_button(f'//span[./span[text()=\"{layout}\"]]/following-sibling::i[2]')\n    \n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n        target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n    \n        # 获取父容器下所有 div\n        # 这一步是为了确定目标 div 在其父容器中的位置\n        parent_div = setting.get_find_element_xpath(f'//div[@id=\"container\"]')\n        all_children = parent_div.find_elements(By.XPATH, \"./div\")\n    \n        # 获取目标 div 的位置索引（从0开始）\n        # 这里是为了后续操作，比如点击目标 div 相关的按钮\n        index = all_children.index(target_div)\n        print(f\"目标 div 是第 {index + 1} 个 div\")  # 输出 3（如果从0开始则是2）\n    \n        setting.click_button(f'(//div[text()=\"重命名\"])[{index + 1}]')\n        ele = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input'\n        )\n        ele.send_keys(Keys.CONTROL, 'a')\n        ele.send_keys(Keys.DELETE)\n        setting.enter_texts(f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]//input', \"测试布局A\")\n    \n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[2]/button[2]')\n        sleep(1)\n        # 获取设置后的提示信息\n        message = setting.get_find_message()\n        # 断言提示信息是否符合预期，以验证设置是否生效\n>       assert message.text == \"布局名称已存在，请重新输入\"\nE       AssertionError: assert '布局名称不能重复！' == '布局名称已存在，请重新输入'\nE         \nE         \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 布局名称不能重复！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:2218: AssertionError","steps":[],"attachments":[{"uid":"2f3df4bc1c2067ff","name":"test_setting_layoutlist_updatefail_failure","source":"2f3df4bc1c2067ff.png","type":"image/png","size":121685},{"uid":"dcd1f10fdcaaf521","name":"test_setting_layoutlist_updatefail_source","source":"dcd1f10fdcaaf521.html","type":"text/html","size":1272447},{"uid":"d4251b4196d873bc","name":"log","source":"d4251b4196d873bc.txt","type":"text/plain","size":3129}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_setting::0","time":{"start":1753799564557,"stop":1753799566739,"duration":2182},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"标准应用设置测试用例"},{"name":"story","value":"重复修改布局 不允许修改"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"45800-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a0c60b6a20ae4c8a","status":"failed","statusDetails":"AssertionError: assert '布局名称不能重复！' == '布局名称已存在，请重新输入'\n  \n  \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 布局名称不能重复！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","time":{"start":1753799542380,"stop":1753799547313,"duration":4933}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"87cf85d43dfb7279.json","parameterValues":[]}