{"uid":"227a037081bd20b2","name":"test_setting_addrepeat","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_addrepeat","historyId":"b6eaadb60c91444d3d0b44a2be8053e9","time":{"start":1758724219020,"stop":1758724225332,"duration":6312},"status":"failed","statusMessage":"AssertionError: assert '保存成功' == '布局名称已存在，请重新输入'\n  \n  \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 保存成功\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x00000271F34980A0>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b8d34cc9cc958ee7630e4cc807d6fb5f\")>\n\n    @allure.story(\"添加测试布局重复，添加失败\")\n    # @pytest.mark.run(order=1)\n    def test_setting_addrepeat(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.add_layout_ok(layout)\n    \n        # 获取设置后的提示信息\n        message = setting.get_find_message()\n        # 断言提示信息是否符合预期，以验证设置是否生效\n>       assert message.text == \"布局名称已存在，请重新输入\"\nE       AssertionError: assert '保存成功' == '布局名称已存在，请重新输入'\nE         \nE         \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 保存成功\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1758724209189,"stop":1758724219019,"duration":9830},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '保存成功' == '布局名称已存在，请重新输入'\n  \n  \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 保存成功\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x00000271F34980A0>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b8d34cc9cc958ee7630e4cc807d6fb5f\")>\n\n    @allure.story(\"添加测试布局重复，添加失败\")\n    # @pytest.mark.run(order=1)\n    def test_setting_addrepeat(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.add_layout_ok(layout)\n    \n        # 获取设置后的提示信息\n        message = setting.get_find_message()\n        # 断言提示信息是否符合预期，以验证设置是否生效\n>       assert message.text == \"布局名称已存在，请重新输入\"\nE       AssertionError: assert '保存成功' == '布局名称已存在，请重新输入'\nE         \nE         \u001B[0m\u001B[91m- 布局名称已存在，请重新输入\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 保存成功\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_setting.py:135: AssertionError","steps":[],"attachments":[{"uid":"cf6bcca80a5d942e","name":"test_setting_addrepeat_failure","source":"cf6bcca80a5d942e.png","type":"image/png","size":120005},{"uid":"1dce8a7dac0a9f30","name":"test_setting_addrepeat_source","source":"1dce8a7dac0a9f30.html","type":"text/html","size":1478882},{"uid":"731021d46cb2c0fe","name":"log","source":"731021d46cb2c0fe.txt","type":"text/plain","size":1728}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_setting::0","time":{"start":1758724225673,"stop":1758724227914,"duration":2241},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"标准应用设置测试用例"},{"name":"story","value":"添加测试布局重复，添加失败"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"15904-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"227a037081bd20b2.json","parameterValues":[]}