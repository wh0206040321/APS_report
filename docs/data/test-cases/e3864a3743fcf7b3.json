{"uid":"e3864a3743fcf7b3","name":"test_setting_display4","fullName":"Tests.test_items.test_setting.TestSettingPage#test_setting_display4","historyId":"ed4fb15665672310cbd24faa1faf4c9c","time":{"start":1758724574816,"stop":1758724577662,"duration":2846},"status":"failed","statusMessage":"AssertionError: assert ('物料种类' != '物料种类')","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x00000271F3499A50>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"507bba11e8a5ffaec38e2e45945d588f\")>\n\n    @allure.story(\"设置表格布局-设置物料组代码自定义显示改为之前的值\")\n    # @pytest.mark.run(order=1)\n    def test_setting_display4(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        # 查找包含物料代码的表格，并获取相关文本\n        after_text = setting.get_find_element_xpath(\n            '//table[.//th[.//p[text()=\"物料代码\"]]]//th[4]//p'\n        ).text\n        # 点击设置按钮，进入显示设置界面\n        setting.click_setting_button()\n        setting.click_button('//div[text()=\" 显示设置 \"]')\n        input_text = setting.get_find_element_xpath(\n            '//tr[./td[3][.//span[text()=\"物料组代码\"]]]/td[4]//input'\n        )\n        input_text.send_keys(Keys.CONTROL, \"a\")\n        input_text.send_keys(Keys.DELETE)\n    \n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n        sleep(1)\n        before_text = setting.get_find_element_xpath(\n            '//table[.//th[.//p[text()=\"物料代码\"]]]//th[4]//p'\n        ).text\n>       assert before_text != after_text and before_text == \"物料组代码\"\nE       AssertionError: assert ('物料种类' != '物料种类')\n\nTests\\test_items\\test_setting.py:671: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1758724565896,"stop":1758724574815,"duration":8919},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('物料种类' != '物料种类')","statusTrace":"self = <test_items.test_setting.TestSettingPage object at 0x00000271F3499A50>, login_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"507bba11e8a5ffaec38e2e45945d588f\")>\n\n    @allure.story(\"设置表格布局-设置物料组代码自定义显示改为之前的值\")\n    # @pytest.mark.run(order=1)\n    def test_setting_display4(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"测试布局A\"\n        setting.click_button(f'//div[@class=\"tabsDivItemCon\"]/div[text()=\" {layout} \"]')\n        # 查找包含物料代码的表格，并获取相关文本\n        after_text = setting.get_find_element_xpath(\n            '//table[.//th[.//p[text()=\"物料代码\"]]]//th[4]//p'\n        ).text\n        # 点击设置按钮，进入显示设置界面\n        setting.click_setting_button()\n        setting.click_button('//div[text()=\" 显示设置 \"]')\n        input_text = setting.get_find_element_xpath(\n            '//tr[./td[3][.//span[text()=\"物料组代码\"]]]/td[4]//input'\n        )\n        input_text.send_keys(Keys.CONTROL, \"a\")\n        input_text.send_keys(Keys.DELETE)\n    \n        setting.click_button('(//div[@class=\"demo-drawer-footer\"])[3]/button[2]')\n        sleep(1)\n        before_text = setting.get_find_element_xpath(\n            '//table[.//th[.//p[text()=\"物料代码\"]]]//th[4]//p'\n        ).text\n>       assert before_text != after_text and before_text == \"物料组代码\"\nE       AssertionError: assert ('物料种类' != '物料种类')\n\nTests\\test_items\\test_setting.py:671: AssertionError","steps":[],"attachments":[{"uid":"369afcaf25761d63","name":"test_setting_display4_failure","source":"369afcaf25761d63.png","type":"image/png","size":120520},{"uid":"cca86ccc1264b57d","name":"test_setting_display4_source","source":"cca86ccc1264b57d.html","type":"text/html","size":1481648},{"uid":"adf25ed1356065ad","name":"log","source":"adf25ed1356065ad.txt","type":"text/plain","size":1640}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_setting::0","time":{"start":1758724577926,"stop":1758724580098,"duration":2172},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"设置表格布局-设置物料组代码自定义显示改为之前的值"},{"name":"feature","value":"标准应用设置测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"15904-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e3864a3743fcf7b3.json","parameterValues":[]}