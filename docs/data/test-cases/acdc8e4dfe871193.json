{"uid":"acdc8e4dfe871193","name":"test_item_refreshsuccess","fullName":"Tests.test_material.test_materialVendors.TestItemPage#test_item_refreshsuccess","historyId":"b1d85437580e1d2f42a858938cb56e48","time":{"start":1753110768228,"stop":1753110778369,"duration":10141},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff77a1f6f65+78965]\n\tGetHandleVerifier [0x0x7ff77a1f6fc0+79056]\n\t(No symbol) [0x0x7ff779f89dda]\n\t(No symbol) [0x0x7ff779fe02ea]\n\t(No symbol) [0x0x7ff779fe059c]\n\t(No symbol) [0x0x7ff77a033f37]\n\t(No symbol) [0x0x7ff77a0086af]\n\t(No symbol) [0x0x7ff77a030dbe]\n\t(No symbol) [0x0x7ff77a008443]\n\t(No symbol) [0x0x7ff779fd1311]\n\t(No symbol) [0x0x7ff779fd20a3]\n\tGetHandleVerifier [0x0x7ff77a4ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff77a4a8993+2903715]\n\tGetHandleVerifier [0x0x7ff77a4c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff77a2116fe+187406]\n\tGetHandleVerifier [0x0x7ff77a2196ef+220159]\n\tGetHandleVerifier [0x0x7ff77a1ffaf4+114692]\n\tGetHandleVerifier [0x0x7ff77a1ffca9+115129]\n\tGetHandleVerifier [0x0x7ff77a1e64d8+10728]\n\tBaseThreadInitThunk [0x0x7fff79487374+20]\n\tRtlUserThreadStart [0x0x7fff7967cc91+33]","statusTrace":"self = <test_materialVendors.TestItemPage object at 0x0000024D1F9984C0>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8b4387cb7d18aa4630f82c62fab629c6\")>\n\n    @allure.story(\"刷新成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_refreshsuccess(self, login_to_item):\n    \n        # 物料代码筛选框输入123\n>       self.item.enter_texts(\n            '//p[text()=\"物料代码\"]/ancestor::div[2]//input', \"123\"\n        )\n\nTests\\test_material\\test_materialVendors.py:339: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\materialPage\\warehouseLocation_page.py:35: in enter_texts\n    self.enter_text(By.XPATH, xpath, text)\nPages\\base_page.py:65: in enter_text\n    element = WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8b4387cb7d18aa4630f82c62fab629c6\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000024D2151D870>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff77a1f6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff77a1f6fc0+79056]\nE       \t(No symbol) [0x0x7ff779f89dda]\nE       \t(No symbol) [0x0x7ff779fe02ea]\nE       \t(No symbol) [0x0x7ff779fe059c]\nE       \t(No symbol) [0x0x7ff77a033f37]\nE       \t(No symbol) [0x0x7ff77a0086af]\nE       \t(No symbol) [0x0x7ff77a030dbe]\nE       \t(No symbol) [0x0x7ff77a008443]\nE       \t(No symbol) [0x0x7ff779fd1311]\nE       \t(No symbol) [0x0x7ff779fd20a3]\nE       \tGetHandleVerifier [0x0x7ff77a4ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff77a4a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff77a4c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff77a2116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff77a2196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff77a1ffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff77a1ffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff77a1e64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff79487374+20]\nE       \tRtlUserThreadStart [0x0x7fff7967cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1753110759943,"stop":1753110768225,"duration":8282},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"setup","time":{"start":1753110768225,"stop":1753110768228,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff77a1f6f65+78965]\n\tGetHandleVerifier [0x0x7ff77a1f6fc0+79056]\n\t(No symbol) [0x0x7ff779f89dda]\n\t(No symbol) [0x0x7ff779fe02ea]\n\t(No symbol) [0x0x7ff779fe059c]\n\t(No symbol) [0x0x7ff77a033f37]\n\t(No symbol) [0x0x7ff77a0086af]\n\t(No symbol) [0x0x7ff77a030dbe]\n\t(No symbol) [0x0x7ff77a008443]\n\t(No symbol) [0x0x7ff779fd1311]\n\t(No symbol) [0x0x7ff779fd20a3]\n\tGetHandleVerifier [0x0x7ff77a4ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff77a4a8993+2903715]\n\tGetHandleVerifier [0x0x7ff77a4c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff77a2116fe+187406]\n\tGetHandleVerifier [0x0x7ff77a2196ef+220159]\n\tGetHandleVerifier [0x0x7ff77a1ffaf4+114692]\n\tGetHandleVerifier [0x0x7ff77a1ffca9+115129]\n\tGetHandleVerifier [0x0x7ff77a1e64d8+10728]\n\tBaseThreadInitThunk [0x0x7fff79487374+20]\n\tRtlUserThreadStart [0x0x7fff7967cc91+33]","statusTrace":"self = <test_materialVendors.TestItemPage object at 0x0000024D1F9984C0>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8b4387cb7d18aa4630f82c62fab629c6\")>\n\n    @allure.story(\"刷新成功\")\n    # @pytest.mark.run(order=1)\n    def test_item_refreshsuccess(self, login_to_item):\n    \n        # 物料代码筛选框输入123\n>       self.item.enter_texts(\n            '//p[text()=\"物料代码\"]/ancestor::div[2]//input', \"123\"\n        )\n\nTests\\test_material\\test_materialVendors.py:339: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\materialPage\\warehouseLocation_page.py:35: in enter_texts\n    self.enter_text(By.XPATH, xpath, text)\nPages\\base_page.py:65: in enter_text\n    element = WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8b4387cb7d18aa4630f82c62fab629c6\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000024D2151D870>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff77a1f6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff77a1f6fc0+79056]\nE       \t(No symbol) [0x0x7ff779f89dda]\nE       \t(No symbol) [0x0x7ff779fe02ea]\nE       \t(No symbol) [0x0x7ff779fe059c]\nE       \t(No symbol) [0x0x7ff77a033f37]\nE       \t(No symbol) [0x0x7ff77a0086af]\nE       \t(No symbol) [0x0x7ff77a030dbe]\nE       \t(No symbol) [0x0x7ff77a008443]\nE       \t(No symbol) [0x0x7ff779fd1311]\nE       \t(No symbol) [0x0x7ff779fd20a3]\nE       \tGetHandleVerifier [0x0x7ff77a4ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff77a4a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff77a4c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff77a2116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff77a2196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff77a1ffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff77a1ffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff77a1e64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff79487374+20]\nE       \tRtlUserThreadStart [0x0x7fff7967cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"11e975ee5941099c","name":"test_item_refreshsuccess_failure","source":"11e975ee5941099c.png","type":"image/png","size":88107},{"uid":"9ae7ee0123319886","name":"test_item_refreshsuccess_source","source":"9ae7ee0123319886.html","type":"text/html","size":1175893},{"uid":"bda2547d87d34984","name":"log","source":"bda2547d87d34984.txt","type":"text/plain","size":1573}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_item::0","time":{"start":1753110778530,"stop":1753110780653,"duration":2123},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"供应商信息测试用例"},{"name":"story","value":"刷新成功"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialVendors"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26464-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialVendors"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c16540ac3c774e28","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff77a1f6f65+78965]\n\tGetHandleVerifier [0x0x7ff77a1f6fc0+79056]\n\t(No symbol) [0x0x7ff779f89dda]\n\t(No symbol) [0x0x7ff779fe02ea]\n\t(No symbol) [0x0x7ff779fe059c]\n\t(No symbol) [0x0x7ff77a033f37]\n\t(No symbol) [0x0x7ff77a0086af]\n\t(No symbol) [0x0x7ff77a030dbe]\n\t(No symbol) [0x0x7ff77a008443]\n\t(No symbol) [0x0x7ff779fd1311]\n\t(No symbol) [0x0x7ff779fd20a3]\n\tGetHandleVerifier [0x0x7ff77a4ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff77a4a8993+2903715]\n\tGetHandleVerifier [0x0x7ff77a4c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff77a2116fe+187406]\n\tGetHandleVerifier [0x0x7ff77a2196ef+220159]\n\tGetHandleVerifier [0x0x7ff77a1ffaf4+114692]\n\tGetHandleVerifier [0x0x7ff77a1ffca9+115129]\n\tGetHandleVerifier [0x0x7ff77a1e64d8+10728]\n\tBaseThreadInitThunk [0x0x7fff79487374+20]\n\tRtlUserThreadStart [0x0x7fff7967cc91+33]","time":{"start":1753110747452,"stop":1753110757649,"duration":10197}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"acdc8e4dfe871193.json","parameterValues":[]}