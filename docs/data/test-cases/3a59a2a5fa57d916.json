{"uid":"3a59a2a5fa57d916","name":"test_previewPlan_delete","fullName":"Tests.test_items.test_previewplan.TestPreviewPlanPage#test_previewPlan_delete","historyId":"b5a004c1e5a78d634189c0edd5495391","time":{"start":1758723223791,"stop":1758723247043,"duration":23252},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7ee406f65+78965]\n\tGetHandleVerifier [0x0x7ff7ee406fc0+79056]\n\t(No symbol) [0x0x7ff7ee199dda]\n\t(No symbol) [0x0x7ff7ee1f02ea]\n\t(No symbol) [0x0x7ff7ee1f059c]\n\t(No symbol) [0x0x7ff7ee243f37]\n\t(No symbol) [0x0x7ff7ee2186af]\n\t(No symbol) [0x0x7ff7ee240dbe]\n\t(No symbol) [0x0x7ff7ee218443]\n\t(No symbol) [0x0x7ff7ee1e1311]\n\t(No symbol) [0x0x7ff7ee1e20a3]\n\tGetHandleVerifier [0x0x7ff7ee6be26d+2926461]\n\tGetHandleVerifier [0x0x7ff7ee6b8993+2903715]\n\tGetHandleVerifier [0x0x7ff7ee6d6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7ee4216fe+187406]\n\tGetHandleVerifier [0x0x7ff7ee4296ef+220159]\n\tGetHandleVerifier [0x0x7ff7ee40faf4+114692]\n\tGetHandleVerifier [0x0x7ff7ee40fca9+115129]\n\tGetHandleVerifier [0x0x7ff7ee3f64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcefb37374+20]\n\tRtlUserThreadStart [0x0x7ffcf06bcc91+33]","statusTrace":"self = <test_items.test_previewplan.TestPreviewPlanPage object at 0x00000271F33D85B0>, login_to_previewPlan = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3f512edfd6881002961e18a6a8b196ae\")>\n\n    @allure.story(\"删除工作指示成功，并且工作指示发布重新可以查询信息\")\n    # @pytest.mark.run(order=1)\n    def test_previewPlan_delete(self, login_to_previewPlan):\n        driver = login_to_previewPlan  # WebDriver 实例\n        previewPlan = PreviewPlanPage(driver)  # 用 previewPlan 初始化 PreviewPlanPage\n        operationPlan = operationPlanPage(driver)\n        shared_data = SharedDataUtil.load_data()\n        resource1 = shared_data.get(\"master_res1\")\n        resource2 = shared_data.get(\"master_res2\")\n        previewPlan.enter_texts(\n            '//div[./p[text()=\"订单代码\"]]/parent::div//input', \"1测试C订单\"\n        )\n        ele_resource1 = previewPlan.get_find_element_xpath(\n            '//table[.//td[4]//span[text()=\"1测试C订单\"]]//tr[1]/td[7]'\n        ).text\n        ele_resource2 = previewPlan.get_find_element_xpath(\n            '//table[.//td[4]//span[text()=\"1测试C订单\"]]//tr[2]/td[7]'\n        ).text\n        if ele_resource1 == resource1 and ele_resource2 == resource2:\n            sleep(2)\n            previewPlan.click_button(\n                '(//span[@class=\"vxe-checkbox--icon vxe-icon-checkbox-unchecked\"])[2]'\n            )\n            sleep(1)\n            previewPlan.click_del_button()\n            previewPlan.click_button('//div[@class=\"ivu-modal-confirm-footer\"]//span[text()=\"确定\"]')\n        sleep(1)\n        ele_none = driver.find_elements(\n            By.XPATH, '//table[.//td[4]//span[text()=\"1测试C订单\"]]/tbody//tr'\n        )\n    \n        previewPlan.click_button('(//span[text()=\"工作指示发布\"])[1]')\n        sleep(1)\n        # 搜索框输入资源代码\n        operationPlan.enter_texts(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]',\n            f\"{resource1}\",\n        )\n        # 勾选资源\n        sleep(1)\n        row_number = driver.execute_script(\n            \"return document.evaluate(\"\n            f'\"count(//tr[.//span[text()=\\\\\"{resource1}\\\\\"]]/preceding-sibling::tr) + 1\",'\n            \"document, null, XPathResult.NUMBER_TYPE, null\"\n            \").numberValue;\"\n        )\n        print(f\"行号: {int(row_number)}\")\n        operationPlan.click_button(\n            f'//table[@class=\"vxe-table--body\"]//tr[{int(row_number)}]/td[2]//span[1]/span'\n        )\n        sleep(1)\n        # 清除资源代码的输入\n        ele = operationPlan.get_find_element_xpath(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]'\n        )\n        ele.send_keys(Keys.CONTROL, \"a\")\n        ele.send_keys(Keys.DELETE)\n        # 搜索框输入资源代码\n        operationPlan.enter_texts(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]',\n            f\"{resource2}\",\n        )\n        sleep(1)\n        # 勾选资源\n        row_number2 = driver.execute_script(\n            \"return document.evaluate(\"\n            f'\"count(//tr[.//span[text()=\\\\\"{resource2}\\\\\"]]/preceding-sibling::tr) + 1\",'\n            \"document, null, XPathResult.NUMBER_TYPE, null\"\n            \").numberValue;\"\n        )\n        print(f\"行号: {int(row_number2)}\")\n        operationPlan.click_button(\n            f'//table[@class=\"vxe-table--body\"]//tr[{int(row_number2)}]/td[2]//span[1]/span'\n        )\n        # 清除资源代码的输入\n        ele = operationPlan.get_find_element_xpath(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]'\n        )\n        ele.send_keys(Keys.CONTROL, \"a\")\n        ele.send_keys(Keys.DELETE)\n    \n        # 打开时间段选择弹窗（点击时间选择按钮）\n        operationPlan.click_inputbutton()\n        # 选择当前日期（点击带有 today 和 focused 样式的日期单元格）\n        operationPlan.click_button(\n            '//span[@class=\"ivu-date-picker-cells-cell ivu-date-picker-cells-cell-today ivu-date-picker-cells-focused\"]'\n        )\n        # 点击下月按钮\n        operationPlan.click_button(\n            '(//span[@class=\"ivu-picker-panel-icon-btn ivu-date-picker-next-btn ivu-date-picker-next-btn-arrow\"])[2]/i')\n        sleep(0.5)\n        operationPlan.click_button(\n            '(//span[@class=\"ivu-picker-panel-icon-btn ivu-date-picker-next-btn ivu-date-picker-next-btn-arrow\"])[2]/i')\n        # 选择具体的时间点（例如：28 日）\n        operationPlan.click_button('(//em[text()=\"28\"])[last()]')\n        # 点击确认按钮以完成时间段的选择\n        operationPlan.click_okbutton()\n    \n        # 点击查询\n        operationPlan.click_selebutton()\n        operationPlan.enter_texts(\n            '//div[./p[text()=\"订单代码\"]]/parent::div//input', \"1测试C订单\"\n        )\n    \n        input_text1 = operationPlan.get_find_element_xpath(\n            f'(//table[.//span[text()=\"{resource1}\"]])[last()]//tr[1]//td[7]'\n        ).text\n>       input_text2 = operationPlan.get_find_element_xpath(\n            f'(//table[.//span[text()=\"{resource2}\"]])[last()]//tr[2]//td[7]'\n        ).text\n\nTests\\test_items\\test_previewplan.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\operationPlan_page.py:38: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3f512edfd6881002961e18a6a8b196ae\")>, method = <function presence_of_element_located.<locals>._predicate at 0x00000271F3CE3520>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7ee406f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7ee406fc0+79056]\nE       \t(No symbol) [0x0x7ff7ee199dda]\nE       \t(No symbol) [0x0x7ff7ee1f02ea]\nE       \t(No symbol) [0x0x7ff7ee1f059c]\nE       \t(No symbol) [0x0x7ff7ee243f37]\nE       \t(No symbol) [0x0x7ff7ee2186af]\nE       \t(No symbol) [0x0x7ff7ee240dbe]\nE       \t(No symbol) [0x0x7ff7ee218443]\nE       \t(No symbol) [0x0x7ff7ee1e1311]\nE       \t(No symbol) [0x0x7ff7ee1e20a3]\nE       \tGetHandleVerifier [0x0x7ff7ee6be26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7ee6b8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7ee6d6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7ee4216fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7ee4296ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7ee40faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7ee40fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7ee3f64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcefb37374+20]\nE       \tRtlUserThreadStart [0x0x7ffcf06bcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_previewPlan","time":{"start":1758723214271,"stop":1758723223790,"duration":9519},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7ee406f65+78965]\n\tGetHandleVerifier [0x0x7ff7ee406fc0+79056]\n\t(No symbol) [0x0x7ff7ee199dda]\n\t(No symbol) [0x0x7ff7ee1f02ea]\n\t(No symbol) [0x0x7ff7ee1f059c]\n\t(No symbol) [0x0x7ff7ee243f37]\n\t(No symbol) [0x0x7ff7ee2186af]\n\t(No symbol) [0x0x7ff7ee240dbe]\n\t(No symbol) [0x0x7ff7ee218443]\n\t(No symbol) [0x0x7ff7ee1e1311]\n\t(No symbol) [0x0x7ff7ee1e20a3]\n\tGetHandleVerifier [0x0x7ff7ee6be26d+2926461]\n\tGetHandleVerifier [0x0x7ff7ee6b8993+2903715]\n\tGetHandleVerifier [0x0x7ff7ee6d6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7ee4216fe+187406]\n\tGetHandleVerifier [0x0x7ff7ee4296ef+220159]\n\tGetHandleVerifier [0x0x7ff7ee40faf4+114692]\n\tGetHandleVerifier [0x0x7ff7ee40fca9+115129]\n\tGetHandleVerifier [0x0x7ff7ee3f64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcefb37374+20]\n\tRtlUserThreadStart [0x0x7ffcf06bcc91+33]","statusTrace":"self = <test_items.test_previewplan.TestPreviewPlanPage object at 0x00000271F33D85B0>, login_to_previewPlan = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3f512edfd6881002961e18a6a8b196ae\")>\n\n    @allure.story(\"删除工作指示成功，并且工作指示发布重新可以查询信息\")\n    # @pytest.mark.run(order=1)\n    def test_previewPlan_delete(self, login_to_previewPlan):\n        driver = login_to_previewPlan  # WebDriver 实例\n        previewPlan = PreviewPlanPage(driver)  # 用 previewPlan 初始化 PreviewPlanPage\n        operationPlan = operationPlanPage(driver)\n        shared_data = SharedDataUtil.load_data()\n        resource1 = shared_data.get(\"master_res1\")\n        resource2 = shared_data.get(\"master_res2\")\n        previewPlan.enter_texts(\n            '//div[./p[text()=\"订单代码\"]]/parent::div//input', \"1测试C订单\"\n        )\n        ele_resource1 = previewPlan.get_find_element_xpath(\n            '//table[.//td[4]//span[text()=\"1测试C订单\"]]//tr[1]/td[7]'\n        ).text\n        ele_resource2 = previewPlan.get_find_element_xpath(\n            '//table[.//td[4]//span[text()=\"1测试C订单\"]]//tr[2]/td[7]'\n        ).text\n        if ele_resource1 == resource1 and ele_resource2 == resource2:\n            sleep(2)\n            previewPlan.click_button(\n                '(//span[@class=\"vxe-checkbox--icon vxe-icon-checkbox-unchecked\"])[2]'\n            )\n            sleep(1)\n            previewPlan.click_del_button()\n            previewPlan.click_button('//div[@class=\"ivu-modal-confirm-footer\"]//span[text()=\"确定\"]')\n        sleep(1)\n        ele_none = driver.find_elements(\n            By.XPATH, '//table[.//td[4]//span[text()=\"1测试C订单\"]]/tbody//tr'\n        )\n    \n        previewPlan.click_button('(//span[text()=\"工作指示发布\"])[1]')\n        sleep(1)\n        # 搜索框输入资源代码\n        operationPlan.enter_texts(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]',\n            f\"{resource1}\",\n        )\n        # 勾选资源\n        sleep(1)\n        row_number = driver.execute_script(\n            \"return document.evaluate(\"\n            f'\"count(//tr[.//span[text()=\\\\\"{resource1}\\\\\"]]/preceding-sibling::tr) + 1\",'\n            \"document, null, XPathResult.NUMBER_TYPE, null\"\n            \").numberValue;\"\n        )\n        print(f\"行号: {int(row_number)}\")\n        operationPlan.click_button(\n            f'//table[@class=\"vxe-table--body\"]//tr[{int(row_number)}]/td[2]//span[1]/span'\n        )\n        sleep(1)\n        # 清除资源代码的输入\n        ele = operationPlan.get_find_element_xpath(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]'\n        )\n        ele.send_keys(Keys.CONTROL, \"a\")\n        ele.send_keys(Keys.DELETE)\n        # 搜索框输入资源代码\n        operationPlan.enter_texts(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]',\n            f\"{resource2}\",\n        )\n        sleep(1)\n        # 勾选资源\n        row_number2 = driver.execute_script(\n            \"return document.evaluate(\"\n            f'\"count(//tr[.//span[text()=\\\\\"{resource2}\\\\\"]]/preceding-sibling::tr) + 1\",'\n            \"document, null, XPathResult.NUMBER_TYPE, null\"\n            \").numberValue;\"\n        )\n        print(f\"行号: {int(row_number2)}\")\n        operationPlan.click_button(\n            f'//table[@class=\"vxe-table--body\"]//tr[{int(row_number2)}]/td[2]//span[1]/span'\n        )\n        # 清除资源代码的输入\n        ele = operationPlan.get_find_element_xpath(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]'\n        )\n        ele.send_keys(Keys.CONTROL, \"a\")\n        ele.send_keys(Keys.DELETE)\n    \n        # 打开时间段选择弹窗（点击时间选择按钮）\n        operationPlan.click_inputbutton()\n        # 选择当前日期（点击带有 today 和 focused 样式的日期单元格）\n        operationPlan.click_button(\n            '//span[@class=\"ivu-date-picker-cells-cell ivu-date-picker-cells-cell-today ivu-date-picker-cells-focused\"]'\n        )\n        # 点击下月按钮\n        operationPlan.click_button(\n            '(//span[@class=\"ivu-picker-panel-icon-btn ivu-date-picker-next-btn ivu-date-picker-next-btn-arrow\"])[2]/i')\n        sleep(0.5)\n        operationPlan.click_button(\n            '(//span[@class=\"ivu-picker-panel-icon-btn ivu-date-picker-next-btn ivu-date-picker-next-btn-arrow\"])[2]/i')\n        # 选择具体的时间点（例如：28 日）\n        operationPlan.click_button('(//em[text()=\"28\"])[last()]')\n        # 点击确认按钮以完成时间段的选择\n        operationPlan.click_okbutton()\n    \n        # 点击查询\n        operationPlan.click_selebutton()\n        operationPlan.enter_texts(\n            '//div[./p[text()=\"订单代码\"]]/parent::div//input', \"1测试C订单\"\n        )\n    \n        input_text1 = operationPlan.get_find_element_xpath(\n            f'(//table[.//span[text()=\"{resource1}\"]])[last()]//tr[1]//td[7]'\n        ).text\n>       input_text2 = operationPlan.get_find_element_xpath(\n            f'(//table[.//span[text()=\"{resource2}\"]])[last()]//tr[2]//td[7]'\n        ).text\n\nTests\\test_items\\test_previewplan.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\operationPlan_page.py:38: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3f512edfd6881002961e18a6a8b196ae\")>, method = <function presence_of_element_located.<locals>._predicate at 0x00000271F3CE3520>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7ee406f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7ee406fc0+79056]\nE       \t(No symbol) [0x0x7ff7ee199dda]\nE       \t(No symbol) [0x0x7ff7ee1f02ea]\nE       \t(No symbol) [0x0x7ff7ee1f059c]\nE       \t(No symbol) [0x0x7ff7ee243f37]\nE       \t(No symbol) [0x0x7ff7ee2186af]\nE       \t(No symbol) [0x0x7ff7ee240dbe]\nE       \t(No symbol) [0x0x7ff7ee218443]\nE       \t(No symbol) [0x0x7ff7ee1e1311]\nE       \t(No symbol) [0x0x7ff7ee1e20a3]\nE       \tGetHandleVerifier [0x0x7ff7ee6be26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7ee6b8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7ee6d6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7ee4216fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7ee4296ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7ee40faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7ee40fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7ee3f64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcefb37374+20]\nE       \tRtlUserThreadStart [0x0x7ffcf06bcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"79d89a011613f7ee","name":"test_previewPlan_delete_failure","source":"79d89a011613f7ee.png","type":"image/png","size":150904},{"uid":"4468c99478936b45","name":"test_previewPlan_delete_source","source":"4468c99478936b45.html","type":"text/html","size":2123701},{"uid":"188bb2b31358824e","name":"test_previewPlan_delete_failure","source":"188bb2b31358824e.png","type":"image/png","size":104490},{"uid":"145fe7a86ba0390b","name":"test_previewPlan_delete_source","source":"145fe7a86ba0390b.html","type":"text/html","size":1177619},{"uid":"a67721a99b789e9c","name":"log","source":"a67721a99b789e9c.txt","type":"text/plain","size":3415}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":5},"afterStages":[{"name":"login_to_previewPlan::0","time":{"start":1758723247549,"stop":1758723249769,"duration":2220},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"工作指示一览表测试用例"},{"name":"story","value":"删除工作指示成功，并且工作指示发布重新可以查询信息"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_previewplan"},{"name":"subSuite","value":"TestPreviewPlanPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"15904-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_previewplan"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"3a59a2a5fa57d916.json","parameterValues":[]}