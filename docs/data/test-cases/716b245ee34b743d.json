{"uid":"716b245ee34b743d","name":"test_expression_updatesuccess2","fullName":"Tests.test_system.test_expression.TestSExpressionPage#test_expression_updatesuccess2","historyId":"16ce0a5cfadc0f28985eb19696f248b4","time":{"start":1760986438543,"stop":1760986448513,"duration":9970},"status":"failed","statusMessage":"AssertionError: assert ('图棒显示颜色' == '反派规则'\n  \n  \u001B[0m\u001B[91m- 反派规则\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 图棒显示颜色\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_system.test_expression.TestSExpressionPage object at 0x0000014AE2D89F30>, login_to_expression = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b93813e771e05b04c45efa4c66a94d0e\")>\n\n    @allure.story(\"修改分类和表达式成功\")\n    # @pytest.mark.run(order=1)\n    def test_expression_updatesuccess2(self, login_to_expression):\n        driver = login_to_expression  # WebDriver 实例\n        expression = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n        sleep(1)\n        name = '1测试表达式管理2'\n        text = '1111'\n        expression.select_input_expression(name)\n        expression.click_button('//table[@class=\"vxe-table--body\"]//tr[1]/td[2]')\n        expression.click_all_button(\"编辑\")\n        expression.click_button('//div[p[text()=\"分类: \"]]//input[@type=\"text\"]')\n        expression.click_button('//li[text()=\"分派规则\"]')\n        expression.enter_texts('//div[p[text()=\"表达式: \"]]//textarea', text)\n        expression.click_all_button(\"保存\")\n        message = expression.get_find_message()\n        expression.select_input_expression(name)\n        sleep(1)\n        eles = expression.get_find_element_xpath('//table[@class=\"vxe-table--body\"]//tr[1]/td[3]').text\n        testarea = expression.get_find_element_xpath('//div[p[text()=\"表达式: \"]]//textarea').get_attribute('value')\n>       assert eles == '反派规则' and testarea == text\nE       AssertionError: assert ('图棒显示颜色' == '反派规则'\nE         \nE         \u001B[0m\u001B[91m- 反派规则\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 图棒显示颜色\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_system\\test_expression.py:181: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_expression","time":{"start":1760986423258,"stop":1760986438541,"duration":15283},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('图棒显示颜色' == '反派规则'\n  \n  \u001B[0m\u001B[91m- 反派规则\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 图棒显示颜色\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_system.test_expression.TestSExpressionPage object at 0x0000014AE2D89F30>, login_to_expression = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b93813e771e05b04c45efa4c66a94d0e\")>\n\n    @allure.story(\"修改分类和表达式成功\")\n    # @pytest.mark.run(order=1)\n    def test_expression_updatesuccess2(self, login_to_expression):\n        driver = login_to_expression  # WebDriver 实例\n        expression = ExpressionPage(driver)  # 用 driver 初始化 ExpressionPage\n        sleep(1)\n        name = '1测试表达式管理2'\n        text = '1111'\n        expression.select_input_expression(name)\n        expression.click_button('//table[@class=\"vxe-table--body\"]//tr[1]/td[2]')\n        expression.click_all_button(\"编辑\")\n        expression.click_button('//div[p[text()=\"分类: \"]]//input[@type=\"text\"]')\n        expression.click_button('//li[text()=\"分派规则\"]')\n        expression.enter_texts('//div[p[text()=\"表达式: \"]]//textarea', text)\n        expression.click_all_button(\"保存\")\n        message = expression.get_find_message()\n        expression.select_input_expression(name)\n        sleep(1)\n        eles = expression.get_find_element_xpath('//table[@class=\"vxe-table--body\"]//tr[1]/td[3]').text\n        testarea = expression.get_find_element_xpath('//div[p[text()=\"表达式: \"]]//textarea').get_attribute('value')\n>       assert eles == '反派规则' and testarea == text\nE       AssertionError: assert ('图棒显示颜色' == '反派规则'\nE         \nE         \u001B[0m\u001B[91m- 反派规则\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 图棒显示颜色\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_system\\test_expression.py:181: AssertionError","steps":[],"attachments":[{"uid":"c2aa5d3d0b3f2654","name":"test_expression_updatesuccess2_failure","source":"c2aa5d3d0b3f2654.png","type":"image/png","size":75125},{"uid":"dcc30ca5b53b13d9","name":"test_expression_updatesuccess2_source","source":"dcc30ca5b53b13d9.html","type":"text/html","size":1091345},{"uid":"ede414ee33ed70fc","name":"log","source":"ede414ee33ed70fc.txt","type":"text/plain","size":1917}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_expression::0","time":{"start":1760986449115,"stop":1760986451678,"duration":2563},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"表达式管理页用例"},{"name":"story","value":"修改分类和表达式成功"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_expression"},{"name":"subSuite","value":"TestSExpressionPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_expression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"716b245ee34b743d.json","parameterValues":[]}