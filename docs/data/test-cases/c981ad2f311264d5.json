{"uid":"c981ad2f311264d5","name":"test_order_editcodesuccess","fullName":"Tests.test_items.test_order.TestOrderPage#test_order_editcodesuccess","historyId":"8dc3bc061a6c67b891a4e79524b80e4c","time":{"start":1760969695734,"stop":1760969703925,"duration":8191},"status":"failed","statusMessage":"AssertionError: 预期1测试A\nassert '1测试A' == '1测试A3'\n  \n  \u001B[0m\u001B[91m- 1测试A3\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?     -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x0000014AE2BCBC70>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8e688b2a87cc4ce5a24bcaac56fbd97f\")>\n\n    @allure.story(\"修改制造订单代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_order_editcodesuccess(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        name = \"1测试A\"\n        # 选中1测试A制造订单代码\n        order.click_button(f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]')\n        # 点击修改按钮\n        order.click_edi_button()\n    \n        # 生成随机数\n        random_int = random.randint(1, 10)\n        text = name + f\"{random_int}\"\n        sleep(1)\n        # 制造订单代码输入\n        order.enter_texts(\n            '(//label[text()=\"订单代码\"])[1]/parent::div//input', f\"{text}\"\n        )\n        # 点击确定\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n        sleep(3)\n        # 定位表格内容\n        orderdata = order.get_find_element_xpath(\n            f'//tr[./td[2][.//span[contains(text(),\"{name}\")]]]/td[2]'\n        ).text\n>       assert orderdata == text, f\"预期{orderdata}\"\nE       AssertionError: 预期1测试A\nE       assert '1测试A' == '1测试A3'\nE         \nE         \u001B[0m\u001B[91m- 1测试A3\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?     -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_order.py:519: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_order","time":{"start":1760969682898,"stop":1760969695732,"duration":12834},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期1测试A\nassert '1测试A' == '1测试A3'\n  \n  \u001B[0m\u001B[91m- 1测试A3\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?     -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x0000014AE2BCBC70>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8e688b2a87cc4ce5a24bcaac56fbd97f\")>\n\n    @allure.story(\"修改制造订单代码成功\")\n    # @pytest.mark.run(order=1)\n    def test_order_editcodesuccess(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        name = \"1测试A\"\n        # 选中1测试A制造订单代码\n        order.click_button(f'//tr[./td[2][.//span[text()=\"{name}\"]]]/td[2]')\n        # 点击修改按钮\n        order.click_edi_button()\n    \n        # 生成随机数\n        random_int = random.randint(1, 10)\n        text = name + f\"{random_int}\"\n        sleep(1)\n        # 制造订单代码输入\n        order.enter_texts(\n            '(//label[text()=\"订单代码\"])[1]/parent::div//input', f\"{text}\"\n        )\n        # 点击确定\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]/button[1]'\n        )\n        sleep(3)\n        # 定位表格内容\n        orderdata = order.get_find_element_xpath(\n            f'//tr[./td[2][.//span[contains(text(),\"{name}\")]]]/td[2]'\n        ).text\n>       assert orderdata == text, f\"预期{orderdata}\"\nE       AssertionError: 预期1测试A\nE       assert '1测试A' == '1测试A3'\nE         \nE         \u001B[0m\u001B[91m- 1测试A3\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         ?     -\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 1测试A\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_order.py:519: AssertionError","steps":[],"attachments":[{"uid":"1a99da87c058a759","name":"test_order_editcodesuccess_failure","source":"1a99da87c058a759.png","type":"image/png","size":151164},{"uid":"4006a3f7ecb55ba4","name":"test_order_editcodesuccess_source","source":"4006a3f7ecb55ba4.html","type":"text/html","size":1648816},{"uid":"17028fb6487cf5f2","name":"log","source":"17028fb6487cf5f2.txt","type":"text/plain","size":1280}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_order::0","time":{"start":1760969704905,"stop":1760969707223,"duration":2318},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"修改制造订单代码成功"},{"name":"feature","value":"制造订单表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_order"},{"name":"subSuite","value":"TestOrderPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"c981ad2f311264d5.json","parameterValues":[]}