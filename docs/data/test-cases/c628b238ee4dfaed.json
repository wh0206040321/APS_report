{"uid":"c628b238ee4dfaed","name":"test_order_addall","fullName":"Tests.test_items.test_order.TestOrderPage#test_order_addall","historyId":"234d4fa2c78d00cf81411c8808857971","time":{"start":1756776486829,"stop":1756776656027,"duration":169198},"status":"failed","statusMessage":"AssertionError: assert (['11测试全部数据', ...1测试全部数据', ...] == ['11测试全部数据', ...1测试全部数据', ...]\n  \n  Full diff:\n  \u001B[0m\u001B[90m \u001B[39;49;00m [\u001B[90m\u001B[39;49;00m\n  \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\n  \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\n  \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\n  \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m...\n  \n  ...Full output truncated (158 lines hidden), use '-vv' to show and 'hongaoqing' == 'hongaoqing'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m hongaoqing\u001B[90m\u001B[39;49;00m and '2025/09/02' in '2025/09/02 09:30:41' and 18 == (161 + 17))\n +  where 18 = int('18')\n +  and   161 = int(161)","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x00000157D991CA90>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"21abeb560f64ac88c823e7b74e156e4c\")>\n\n    @allure.story(\"输入全部数据，添加保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_order_addall(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        adds = AddsPages(driver)\n        input_value = '11测试全部数据'\n        order.click_add_button()\n        custom_xpath_list = [\n            f'//label[text()=\"自定义字符{i}\"]/following-sibling::div//input'\n            for i in range(1, 51) if i != 3\n        ]\n        text_list = [\n            '//label[text()=\"订单代码\"]/following-sibling::div//input',\n            '//label[text()=\"指定产线\"]/following-sibling::div//input',\n            '//label[text()=\"关联订单组\"]/following-sibling::div//input',\n            '//label[text()=\"备注\"]/following-sibling::div//input',\n        ]\n        text_list.extend(custom_xpath_list)\n        adds.batch_modify_input(text_list, input_value)\n    \n        value_bos = '//div[@class=\"vxe-modal--body\"]//table[@class=\"vxe-table--body\"]//tr[1]/td[3]'\n        spe_xpath_list = [\n            f'//label[text()=\"生产特征{i}\"]/following-sibling::div//i'\n            for i in range(1, 11)\n        ]\n        box_list = [\n            '//label[text()=\"物料\"]/following-sibling::div//i',\n            '//label[text()=\"BASE物料\"]/following-sibling::div//i',\n            '//label[text()=\"客户\"]/following-sibling::div//i',\n            '//label[text()=\"一对一关联指定料号\"]/following-sibling::div//i',\n            '//label[text()=\"后订单\"]/following-sibling::div//i',\n            '//label[text()=\"用户指定资源\"]/following-sibling::div//i',\n            '//label[text()=\"首工序资源\"]/following-sibling::div//i',\n        ]\n        box_list.extend(spe_xpath_list)\n        adds.batch_modify_dialog_box(box_list, value_bos)\n    \n        select_list = [\n            {\"select\": '//label[text()=\"订单区分\"]/following-sibling::div//i', \"value\": '//li[text()=\"补充\"]'},\n            {\"select\": '//label[text()=\"显示颜色\"]/following-sibling::div//i',\n             \"value\": '//span[text()=\"RGB(128,128,255)\"]'},\n            {\"select\": '//label[text()=\"分派方向\"]/following-sibling::div//i', \"value\": '//li[text()=\"遵从优先度\"]'},\n            {\"select\": '//label[text()=\"订单状态\"]/following-sibling::div//i', \"value\": '//li[text()=\"开始生产\"]'},\n        ]\n        adds.batch_modify_select_input(select_list)\n    \n        input_num_value = '1'\n        num_xpath_list1 = [\n            f'//label[text()=\"数值特征{i}\"]/following-sibling::div//input'\n            for i in range(1, 6)\n        ]\n        num_xpath_list2 = [\n            f'//label[text()=\"自定义数字{i}\"]/following-sibling::div//input'\n            for i in range(1, 51)\n        ]\n    \n        num_list = [\n            '//label[text()=\"计划数量\"]/following-sibling::div//input',\n            '//label[text()=\"用户指定订单数量固定级别\"]/following-sibling::div//input',\n            '//label[text()=\"优先度\"]/following-sibling::div//input',\n            '//label[text()=\"显示顺序\"]/following-sibling::div//input',\n            '//label[text()=\"制造效率\"]/following-sibling::div//input',\n            '//label[text()=\"实绩数量\"]/following-sibling::div//input',\n            '//label[text()=\"系统内部资源计划顺序\"]/following-sibling::div//input',\n            '//label[text()=\"用户调整计划顺序\"]/following-sibling::div//input',\n        ]\n        num_list.extend(num_xpath_list1 + num_xpath_list2)\n        adds.batch_modify_input(num_list, input_num_value)\n    \n        time_xpath_list = [\n            f'//label[text()=\"自定义日期{i}\"]/following-sibling::div//input'\n            for i in range(1, 21)\n        ]\n        time_list = [\n            '//label[text()=\"订货时间\"]/following-sibling::div//input',\n            '//label[text()=\"最早开始时间\"]/following-sibling::div//input',\n            '//label[text()=\"交货期\"]/following-sibling::div//input',\n            '//label[text()=\"实绩结束时间\"]/following-sibling::div//input',\n        ]\n        time_list.extend(time_xpath_list)\n        adds.batch_order_time_input(time_list)\n    \n        box_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in box_list]\n        select_input_list = [item[\"select\"].replace(\"//i\", \"//input\") for item in select_list]\n    \n        checked = order.get_find_element_xpath('//label[text()=\"非分派对象标志\"]/following-sibling::div//label/span')\n        if checked.get_attribute(\"class\") == \"ivu-checkbox\":\n            checked.click()\n        before_checked = order.get_find_element_xpath(\n            '//label[text()=\"非分派对象标志\"]/following-sibling::div//label/span').get_attribute(\"class\")\n    \n        all_value = text_list + box_input_list + select_input_list + num_list + time_list\n        len_num = len(all_value)\n        before_all_value = adds.batch_acquisition_input(all_value)\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        sleep(1)\n        driver.refresh()\n        sleep(3)\n        num = adds.go_settings_page()\n        sleep(2)\n        order.enter_texts(\n            '//p[text()=\"订单代码\"]/ancestor::div[2]//input', input_value\n        )\n        sleep(1)\n        order.click_button(\n            f'(//div[@class=\"vxe-table--main-wrapper\"])[2]//table[@class=\"vxe-table--body\"]//tr/td[2][.//span[text()=\"{input_value}\"]]')\n        sleep(1)\n        order.click_edi_button()\n        after_all_value = adds.batch_acquisition_input(all_value)\n        after_checked = order.get_find_element_xpath(\n            '//label[text()=\"非分派对象标志\"]/following-sibling::div//label/span').get_attribute(\"class\")\n        username = order.get_find_element_xpath('//label[text()=\"更新者\"]/following-sibling::div//input').get_attribute(\n            \"value\")\n        updatatime = order.get_find_element_xpath(\n            '//label[text()=\"更新时间\"]/following-sibling::div//input').get_attribute(\"value\")\n        today_str = date.today().strftime('%Y/%m/%d')\n>       assert before_all_value == after_all_value and username == DateDriver().username and today_str in updatatime and int(\n            num) == (int(len_num) + 17) and before_checked == after_checked\nE       AssertionError: assert (['11测试全部数据', ...1测试全部数据', ...] == ['11测试全部数据', ...1测试全部数据', ...]\nE         \nE         Full diff:\nE         \u001B[0m\u001B[90m \u001B[39;49;00m [\u001B[90m\u001B[39;49;00m\nE         \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\nE         \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\nE         \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\nE         \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m...\nE         \nE         ...Full output truncated (158 lines hidden), use '-vv' to show and 'hongaoqing' == 'hongaoqing'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m hongaoqing\u001B[90m\u001B[39;49;00m and '2025/09/02' in '2025/09/02 09:30:41' and 18 == (161 + 17))\nE        +  where 18 = int('18')\nE        +  and   161 = int(161)\n\nTests\\test_items\\test_order.py:1062: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"login_to_order","time":{"start":1756776477980,"stop":1756776486829,"duration":8849},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (['11测试全部数据', ...1测试全部数据', ...] == ['11测试全部数据', ...1测试全部数据', ...]\n  \n  Full diff:\n  \u001B[0m\u001B[90m \u001B[39;49;00m [\u001B[90m\u001B[39;49;00m\n  \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\n  \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\n  \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\n  \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m...\n  \n  ...Full output truncated (158 lines hidden), use '-vv' to show and 'hongaoqing' == 'hongaoqing'\n  \n  \u001B[0m\u001B[90m \u001B[39;49;00m hongaoqing\u001B[90m\u001B[39;49;00m and '2025/09/02' in '2025/09/02 09:30:41' and 18 == (161 + 17))\n +  where 18 = int('18')\n +  and   161 = int(161)","statusTrace":"self = <test_items.test_order.TestOrderPage object at 0x00000157D991CA90>, login_to_order = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"21abeb560f64ac88c823e7b74e156e4c\")>\n\n    @allure.story(\"输入全部数据，添加保存成功\")\n    # @pytest.mark.run(order=1)\n    def test_order_addall(self, login_to_order):\n        driver = login_to_order  # WebDriver 实例\n        order = OrderPage(driver)  # 用 driver 初始化 OrderPage\n        adds = AddsPages(driver)\n        input_value = '11测试全部数据'\n        order.click_add_button()\n        custom_xpath_list = [\n            f'//label[text()=\"自定义字符{i}\"]/following-sibling::div//input'\n            for i in range(1, 51) if i != 3\n        ]\n        text_list = [\n            '//label[text()=\"订单代码\"]/following-sibling::div//input',\n            '//label[text()=\"指定产线\"]/following-sibling::div//input',\n            '//label[text()=\"关联订单组\"]/following-sibling::div//input',\n            '//label[text()=\"备注\"]/following-sibling::div//input',\n        ]\n        text_list.extend(custom_xpath_list)\n        adds.batch_modify_input(text_list, input_value)\n    \n        value_bos = '//div[@class=\"vxe-modal--body\"]//table[@class=\"vxe-table--body\"]//tr[1]/td[3]'\n        spe_xpath_list = [\n            f'//label[text()=\"生产特征{i}\"]/following-sibling::div//i'\n            for i in range(1, 11)\n        ]\n        box_list = [\n            '//label[text()=\"物料\"]/following-sibling::div//i',\n            '//label[text()=\"BASE物料\"]/following-sibling::div//i',\n            '//label[text()=\"客户\"]/following-sibling::div//i',\n            '//label[text()=\"一对一关联指定料号\"]/following-sibling::div//i',\n            '//label[text()=\"后订单\"]/following-sibling::div//i',\n            '//label[text()=\"用户指定资源\"]/following-sibling::div//i',\n            '//label[text()=\"首工序资源\"]/following-sibling::div//i',\n        ]\n        box_list.extend(spe_xpath_list)\n        adds.batch_modify_dialog_box(box_list, value_bos)\n    \n        select_list = [\n            {\"select\": '//label[text()=\"订单区分\"]/following-sibling::div//i', \"value\": '//li[text()=\"补充\"]'},\n            {\"select\": '//label[text()=\"显示颜色\"]/following-sibling::div//i',\n             \"value\": '//span[text()=\"RGB(128,128,255)\"]'},\n            {\"select\": '//label[text()=\"分派方向\"]/following-sibling::div//i', \"value\": '//li[text()=\"遵从优先度\"]'},\n            {\"select\": '//label[text()=\"订单状态\"]/following-sibling::div//i', \"value\": '//li[text()=\"开始生产\"]'},\n        ]\n        adds.batch_modify_select_input(select_list)\n    \n        input_num_value = '1'\n        num_xpath_list1 = [\n            f'//label[text()=\"数值特征{i}\"]/following-sibling::div//input'\n            for i in range(1, 6)\n        ]\n        num_xpath_list2 = [\n            f'//label[text()=\"自定义数字{i}\"]/following-sibling::div//input'\n            for i in range(1, 51)\n        ]\n    \n        num_list = [\n            '//label[text()=\"计划数量\"]/following-sibling::div//input',\n            '//label[text()=\"用户指定订单数量固定级别\"]/following-sibling::div//input',\n            '//label[text()=\"优先度\"]/following-sibling::div//input',\n            '//label[text()=\"显示顺序\"]/following-sibling::div//input',\n            '//label[text()=\"制造效率\"]/following-sibling::div//input',\n            '//label[text()=\"实绩数量\"]/following-sibling::div//input',\n            '//label[text()=\"系统内部资源计划顺序\"]/following-sibling::div//input',\n            '//label[text()=\"用户调整计划顺序\"]/following-sibling::div//input',\n        ]\n        num_list.extend(num_xpath_list1 + num_xpath_list2)\n        adds.batch_modify_input(num_list, input_num_value)\n    \n        time_xpath_list = [\n            f'//label[text()=\"自定义日期{i}\"]/following-sibling::div//input'\n            for i in range(1, 21)\n        ]\n        time_list = [\n            '//label[text()=\"订货时间\"]/following-sibling::div//input',\n            '//label[text()=\"最早开始时间\"]/following-sibling::div//input',\n            '//label[text()=\"交货期\"]/following-sibling::div//input',\n            '//label[text()=\"实绩结束时间\"]/following-sibling::div//input',\n        ]\n        time_list.extend(time_xpath_list)\n        adds.batch_order_time_input(time_list)\n    \n        box_input_list = [xpath.replace(\"//i\", \"//input\") for xpath in box_list]\n        select_input_list = [item[\"select\"].replace(\"//i\", \"//input\") for item in select_list]\n    \n        checked = order.get_find_element_xpath('//label[text()=\"非分派对象标志\"]/following-sibling::div//label/span')\n        if checked.get_attribute(\"class\") == \"ivu-checkbox\":\n            checked.click()\n        before_checked = order.get_find_element_xpath(\n            '//label[text()=\"非分派对象标志\"]/following-sibling::div//label/span').get_attribute(\"class\")\n    \n        all_value = text_list + box_input_list + select_input_list + num_list + time_list\n        len_num = len(all_value)\n        before_all_value = adds.batch_acquisition_input(all_value)\n        order.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[1]//span[text()=\"确定\"]')\n        sleep(1)\n        driver.refresh()\n        sleep(3)\n        num = adds.go_settings_page()\n        sleep(2)\n        order.enter_texts(\n            '//p[text()=\"订单代码\"]/ancestor::div[2]//input', input_value\n        )\n        sleep(1)\n        order.click_button(\n            f'(//div[@class=\"vxe-table--main-wrapper\"])[2]//table[@class=\"vxe-table--body\"]//tr/td[2][.//span[text()=\"{input_value}\"]]')\n        sleep(1)\n        order.click_edi_button()\n        after_all_value = adds.batch_acquisition_input(all_value)\n        after_checked = order.get_find_element_xpath(\n            '//label[text()=\"非分派对象标志\"]/following-sibling::div//label/span').get_attribute(\"class\")\n        username = order.get_find_element_xpath('//label[text()=\"更新者\"]/following-sibling::div//input').get_attribute(\n            \"value\")\n        updatatime = order.get_find_element_xpath(\n            '//label[text()=\"更新时间\"]/following-sibling::div//input').get_attribute(\"value\")\n        today_str = date.today().strftime('%Y/%m/%d')\n>       assert before_all_value == after_all_value and username == DateDriver().username and today_str in updatatime and int(\n            num) == (int(len_num) + 17) and before_checked == after_checked\nE       AssertionError: assert (['11测试全部数据', ...1测试全部数据', ...] == ['11测试全部数据', ...1测试全部数据', ...]\nE         \nE         Full diff:\nE         \u001B[0m\u001B[90m \u001B[39;49;00m [\u001B[90m\u001B[39;49;00m\nE         \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\nE         \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\nE         \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m\nE         \u001B[90m \u001B[39;49;00m     '11测试全部数据',\u001B[90m\u001B[39;49;00m...\nE         \nE         ...Full output truncated (158 lines hidden), use '-vv' to show and 'hongaoqing' == 'hongaoqing'\nE         \nE         \u001B[0m\u001B[90m \u001B[39;49;00m hongaoqing\u001B[90m\u001B[39;49;00m and '2025/09/02' in '2025/09/02 09:30:41' and 18 == (161 + 17))\nE        +  where 18 = int('18')\nE        +  and   161 = int(161)\n\nTests\\test_items\\test_order.py:1062: AssertionError","steps":[],"attachments":[{"uid":"a1d97076fb24aa87","name":"test_order_addall_failure","source":"a1d97076fb24aa87.png","type":"image/png","size":94191},{"uid":"559b7ffc708ddcc","name":"test_order_addall_source","source":"559b7ffc708ddcc.html","type":"text/html","size":1595613},{"uid":"635d02a11a939910","name":"log","source":"635d02a11a939910.txt","type":"text/plain","size":62296}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"login_to_order::0","time":{"start":1756776656277,"stop":1756776658491,"duration":2214},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"story","value":"输入全部数据，添加保存成功"},{"name":"feature","value":"制造订单表测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_order"},{"name":"subSuite","value":"TestOrderPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"19352-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bbec7b8730a2b6b4","status":"passed","time":{"start":1755784172439,"stop":1755784331191,"duration":158752}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"c628b238ee4dfaed.json","parameterValues":[]}