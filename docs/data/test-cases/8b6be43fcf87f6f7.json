{"uid":"8b6be43fcf87f6f7","name":"test_role_updatedata1","fullName":"Tests.test_system.test_role.TestRolePage#test_role_updatedata1","historyId":"de762058599f2ab2cf3ff5810d2766eb","time":{"start":1760982339420,"stop":1760982356395,"duration":16975},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff613186f65+78965]\n\tGetHandleVerifier [0x0x7ff613186fc0+79056]\n\t(No symbol) [0x0x7ff612f19dda]\n\t(No symbol) [0x0x7ff612f702ea]\n\t(No symbol) [0x0x7ff612f7059c]\n\t(No symbol) [0x0x7ff612fc3f37]\n\t(No symbol) [0x0x7ff612f986af]\n\t(No symbol) [0x0x7ff612fc0dbe]\n\t(No symbol) [0x0x7ff612f98443]\n\t(No symbol) [0x0x7ff612f61311]\n\t(No symbol) [0x0x7ff612f620a3]\n\tGetHandleVerifier [0x0x7ff61343e26d+2926461]\n\tGetHandleVerifier [0x0x7ff613438993+2903715]\n\tGetHandleVerifier [0x0x7ff613456aed+3026941]\n\tGetHandleVerifier [0x0x7ff6131a16fe+187406]\n\tGetHandleVerifier [0x0x7ff6131a96ef+220159]\n\tGetHandleVerifier [0x0x7ff61318faf4+114692]\n\tGetHandleVerifier [0x0x7ff61318fca9+115129]\n\tGetHandleVerifier [0x0x7ff6131764d8+10728]\n\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\n\tRtlUserThreadStart [0x0x7fff513dcc91+33]","statusTrace":"self = <test_system.test_role.TestRolePage object at 0x0000014AE2F39C90>, login_to_role = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6d7b308f0f066cf472e7ac90e558e983\")>\n\n    @allure.story(\"修改和角色名称成功，并且可切换计划单元\")\n    # @pytest.mark.run(order=1)\n    def test_role_updatedata1(self, login_to_role):\n        driver = login_to_role  # WebDriver 实例\n        role = RolePage(driver)  # 用 driver 初始化 RolePage\n        date_driver = DateDriver()\n        before_name = \"1测试角色代码3\"\n        after_name = \"修改角色名称\"\n        module = \"1测试计划单元标准\"\n        role.update_role(before_name, after_name, module)\n        role.click_all_button(\"保存\")\n>       message = role.get_find_message()\n\nTests\\test_system\\test_role.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\role_page.py:35: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6d7b308f0f066cf472e7ac90e558e983\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x0000014AE4E3F2E0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE       \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE       \t(No symbol) [0x0x7ff612f19dda]\nE       \t(No symbol) [0x0x7ff612f702ea]\nE       \t(No symbol) [0x0x7ff612f7059c]\nE       \t(No symbol) [0x0x7ff612fc3f37]\nE       \t(No symbol) [0x0x7ff612f986af]\nE       \t(No symbol) [0x0x7ff612fc0dbe]\nE       \t(No symbol) [0x0x7ff612f98443]\nE       \t(No symbol) [0x0x7ff612f61311]\nE       \t(No symbol) [0x0x7ff612f620a3]\nE       \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE       \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_role","time":{"start":1760982320949,"stop":1760982339417,"duration":18468},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff613186f65+78965]\n\tGetHandleVerifier [0x0x7ff613186fc0+79056]\n\t(No symbol) [0x0x7ff612f19dda]\n\t(No symbol) [0x0x7ff612f702ea]\n\t(No symbol) [0x0x7ff612f7059c]\n\t(No symbol) [0x0x7ff612fc3f37]\n\t(No symbol) [0x0x7ff612f986af]\n\t(No symbol) [0x0x7ff612fc0dbe]\n\t(No symbol) [0x0x7ff612f98443]\n\t(No symbol) [0x0x7ff612f61311]\n\t(No symbol) [0x0x7ff612f620a3]\n\tGetHandleVerifier [0x0x7ff61343e26d+2926461]\n\tGetHandleVerifier [0x0x7ff613438993+2903715]\n\tGetHandleVerifier [0x0x7ff613456aed+3026941]\n\tGetHandleVerifier [0x0x7ff6131a16fe+187406]\n\tGetHandleVerifier [0x0x7ff6131a96ef+220159]\n\tGetHandleVerifier [0x0x7ff61318faf4+114692]\n\tGetHandleVerifier [0x0x7ff61318fca9+115129]\n\tGetHandleVerifier [0x0x7ff6131764d8+10728]\n\tBaseThreadInitThunk [0x0x7fff4faa7374+20]\n\tRtlUserThreadStart [0x0x7fff513dcc91+33]","statusTrace":"self = <test_system.test_role.TestRolePage object at 0x0000014AE2F39C90>, login_to_role = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6d7b308f0f066cf472e7ac90e558e983\")>\n\n    @allure.story(\"修改和角色名称成功，并且可切换计划单元\")\n    # @pytest.mark.run(order=1)\n    def test_role_updatedata1(self, login_to_role):\n        driver = login_to_role  # WebDriver 实例\n        role = RolePage(driver)  # 用 driver 初始化 RolePage\n        date_driver = DateDriver()\n        before_name = \"1测试角色代码3\"\n        after_name = \"修改角色名称\"\n        module = \"1测试计划单元标准\"\n        role.update_role(before_name, after_name, module)\n        role.click_all_button(\"保存\")\n>       message = role.get_find_message()\n\nTests\\test_system\\test_role.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\role_page.py:35: in get_find_message\n    message = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6d7b308f0f066cf472e7ac90e558e983\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x0000014AE4E3F2E0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff613186f65+78965]\nE       \tGetHandleVerifier [0x0x7ff613186fc0+79056]\nE       \t(No symbol) [0x0x7ff612f19dda]\nE       \t(No symbol) [0x0x7ff612f702ea]\nE       \t(No symbol) [0x0x7ff612f7059c]\nE       \t(No symbol) [0x0x7ff612fc3f37]\nE       \t(No symbol) [0x0x7ff612f986af]\nE       \t(No symbol) [0x0x7ff612fc0dbe]\nE       \t(No symbol) [0x0x7ff612f98443]\nE       \t(No symbol) [0x0x7ff612f61311]\nE       \t(No symbol) [0x0x7ff612f620a3]\nE       \tGetHandleVerifier [0x0x7ff61343e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff613438993+2903715]\nE       \tGetHandleVerifier [0x0x7ff613456aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff6131a16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff6131a96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff61318faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff61318fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff6131764d8+10728]\nE       \tBaseThreadInitThunk [0x0x7fff4faa7374+20]\nE       \tRtlUserThreadStart [0x0x7fff513dcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"9da515524bad1afc","name":"test_role_updatedata1_failure","source":"9da515524bad1afc.png","type":"image/png","size":107251},{"uid":"2af51877520d8a25","name":"test_role_updatedata1_source","source":"2af51877520d8a25.html","type":"text/html","size":1123047},{"uid":"bc270ad31546600b","name":"log","source":"bc270ad31546600b.txt","type":"text/plain","size":1616}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_role::0","time":{"start":1760982357074,"stop":1760982359495,"duration":2421},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"修改和角色名称成功，并且可切换计划单元"},{"name":"feature","value":"角色管理页用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_role"},{"name":"subSuite","value":"TestRolePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"3232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_role"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"8b6be43fcf87f6f7.json","parameterValues":[]}