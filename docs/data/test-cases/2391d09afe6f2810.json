{"uid":"2391d09afe6f2810","name":"test_warehouselocation_addfail","fullName":"Tests.test_material.test_materialVendors.TestItemPage#test_warehouselocation_addfail","historyId":"fd781fefe0282cbb73c9143f9fe276af","time":{"start":1753110334879,"stop":1753110338976,"duration":4097},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D200AEC50>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D200AEC50> = <test_materialVendors.TestItemPage object at 0x0000024D1FABB2B0>.item","statusTrace":"self = <test_materialVendors.TestItemPage object at 0x0000024D1FABB2B0>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"72c29d28ef20d03a075b19084f27e5e9\")>\n\n    @allure.story(\"添加供应商信息 不填写数据点击确认 不允许提交\")\n    # @pytest.mark.run(order=1)\n    def test_warehouselocation_addfail(self, login_to_item):\n        self.item.click_add_button()\n        # 供应商代码xpath\n        input_box = self.item.get_find_element_xpath(\n            \"//div[@id='tx0gv6lt-z2dv']//input\"\n        )\n        # 联系人xpath\n        inputname_box = self.item.get_find_element_xpath(\n            \"//div[@id='e4589osf-fgn3']//input\"\n        )\n        # 电话xpath\n        whs_code_box = self.item.get_find_element_xpath(\n            \"//div[@id='tnkc4719-huz5']//input\"\n        )\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        # 断言边框颜色是否为红色（可以根据实际RGB值调整）\n        sleep(1)\n        border_color = input_box.value_of_css_property(\"border-color\")\n        bordername_color = inputname_box.value_of_css_property(\"border-color\")\n        whs_code_color = whs_code_box.value_of_css_property(\"border-color\")\n        expected_color = \"rgb(255, 0, 0)\"  # 红色的 rgb 值\n        assert (\n            border_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{border_color}\"\n        assert (\n            bordername_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{bordername_color}\"\n        assert (\n                whs_code_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{whs_code_color}\"\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D200AEC50>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D200AEC50> = <test_materialVendors.TestItemPage object at 0x0000024D1FABB2B0>.item\n\nTests\\test_material\\test_materialVendors.py:72: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_item","time":{"start":1753110326774,"stop":1753110334877,"duration":8103},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"setup","time":{"start":1753110334877,"stop":1753110334879,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D200AEC50>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D200AEC50> = <test_materialVendors.TestItemPage object at 0x0000024D1FABB2B0>.item","statusTrace":"self = <test_materialVendors.TestItemPage object at 0x0000024D1FABB2B0>, login_to_item = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"72c29d28ef20d03a075b19084f27e5e9\")>\n\n    @allure.story(\"添加供应商信息 不填写数据点击确认 不允许提交\")\n    # @pytest.mark.run(order=1)\n    def test_warehouselocation_addfail(self, login_to_item):\n        self.item.click_add_button()\n        # 供应商代码xpath\n        input_box = self.item.get_find_element_xpath(\n            \"//div[@id='tx0gv6lt-z2dv']//input\"\n        )\n        # 联系人xpath\n        inputname_box = self.item.get_find_element_xpath(\n            \"//div[@id='e4589osf-fgn3']//input\"\n        )\n        # 电话xpath\n        whs_code_box = self.item.get_find_element_xpath(\n            \"//div[@id='tnkc4719-huz5']//input\"\n        )\n        self.item.click_button('(//button[@type=\"button\"]/span[text()=\"确定\"])[4]')\n        # 断言边框颜色是否为红色（可以根据实际RGB值调整）\n        sleep(1)\n        border_color = input_box.value_of_css_property(\"border-color\")\n        bordername_color = inputname_box.value_of_css_property(\"border-color\")\n        whs_code_color = whs_code_box.value_of_css_property(\"border-color\")\n        expected_color = \"rgb(255, 0, 0)\"  # 红色的 rgb 值\n        assert (\n            border_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{border_color}\"\n        assert (\n            bordername_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{bordername_color}\"\n        assert (\n                whs_code_color == expected_color\n        ), f\"预期边框颜色为{expected_color}, 但得到{whs_code_color}\"\n>       assert not self.item.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D200AEC50>.has_fail_message\nE        +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D200AEC50> = <test_materialVendors.TestItemPage object at 0x0000024D1FABB2B0>.item\n\nTests\\test_material\\test_materialVendors.py:72: AssertionError","steps":[],"attachments":[{"uid":"ccf1c9cc21a699ba","name":"test_warehouselocation_addfail_failure","source":"ccf1c9cc21a699ba.png","type":"image/png","size":101842},{"uid":"5205c31a92344e6","name":"test_warehouselocation_addfail_source","source":"5205c31a92344e6.html","type":"text/html","size":1235271},{"uid":"91275486bb94568a","name":"log","source":"91275486bb94568a.txt","type":"text/plain","size":3155}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"login_to_item::0","time":{"start":1753110339175,"stop":1753110341317,"duration":2142},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"story","value":"添加供应商信息 不填写数据点击确认 不允许提交"},{"name":"feature","value":"供应商信息测试用例"},{"name":"parentSuite","value":"Tests.test_material"},{"name":"suite","value":"test_materialVendors"},{"name":"subSuite","value":"TestItemPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26464-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_material.test_materialVendors"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f7a03a6b14f647f5","status":"failed","statusDetails":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D2120DD50>.has_fail_message\n +      where <Pages.materialPage.warehouseLocation_page.WarehouseLocationPage object at 0x0000024D2120DD50> = <test_materialVendors.TestItemPage object at 0x0000024D1FABB2B0>.item","time":{"start":1753110320779,"stop":1753110324459,"duration":3680}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"2391d09afe6f2810.json","parameterValues":[]}