{"uid":"9e88797da81d1c51","name":"test_spec_addrepeat","fullName":"Tests.test_items.test_spec1.TestSpecPage#test_spec_addrepeat","historyId":"36216ed4aca17ca01e03e5290e855d93","time":{"start":1756813724064,"stop":1756813728512,"duration":4448},"status":"failed","statusMessage":"AssertionError: 预期数据是记录已存在,请检查，实际得到\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_spec1.TestSpecPage object at 0x000001E26620BD60>, login_to_spec1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"89ed2a06dde4ea0c20a736f874e1fdb9\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_spec_addrepeat(self, login_to_spec1):\n        driver = login_to_spec1  # WebDriver 实例\n        spec = Spec1Page(driver)  # 用 driver 初始化 Spec1Page\n        name = \"111\"\n        spec.add_test_data(name)\n        spec.click_add_button()  # 检查点击添加\n    \n        # 点击确定\n        spec.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        # 获取重复弹窗文字\n        error_popup = spec.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert (\n            error_popup == \"记录已存在,请检查！\"\n        ), f\"预期数据是记录已存在,请检查，实际得到{error_popup}\"\nE       AssertionError: 预期数据是记录已存在,请检查，实际得到\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_spec1.py:177: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_spec1","time":{"start":1756813715744,"stop":1756813724064,"duration":8320},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期数据是记录已存在,请检查，实际得到\nassert '' == '记录已存在,请检查！'\n  \n  \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_items.test_spec1.TestSpecPage object at 0x000001E26620BD60>, login_to_spec1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"89ed2a06dde4ea0c20a736f874e1fdb9\")>\n\n    @allure.story(\"添加数据重复\")\n    # @pytest.mark.run(order=1)\n    def test_spec_addrepeat(self, login_to_spec1):\n        driver = login_to_spec1  # WebDriver 实例\n        spec = Spec1Page(driver)  # 用 driver 初始化 Spec1Page\n        name = \"111\"\n        spec.add_test_data(name)\n        spec.click_add_button()  # 检查点击添加\n    \n        # 点击确定\n        spec.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        # 获取重复弹窗文字\n        error_popup = spec.get_find_element_xpath(\n            '//div[text()=\" 记录已存在,请检查！ \"]'\n        ).text\n>       assert (\n            error_popup == \"记录已存在,请检查！\"\n        ), f\"预期数据是记录已存在,请检查，实际得到{error_popup}\"\nE       AssertionError: 预期数据是记录已存在,请检查，实际得到\nE       assert '' == '记录已存在,请检查！'\nE         \nE         \u001B[0m\u001B[91m- 记录已存在,请检查！\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_items\\test_spec1.py:177: AssertionError","steps":[],"attachments":[{"uid":"24bb9543d03da5fb","name":"test_spec_addrepeat_failure","source":"24bb9543d03da5fb.png","type":"image/png","size":105789},{"uid":"195595ad516f59d2","name":"test_spec_addrepeat_source","source":"195595ad516f59d2.html","type":"text/html","size":1292818},{"uid":"783e3264541b1f52","name":"log","source":"783e3264541b1f52.txt","type":"text/plain","size":1344}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_spec1::0","time":{"start":1756813728717,"stop":1756813730916,"duration":2199},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"生产特征表测试用例"},{"name":"story","value":"添加数据重复"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_spec1"},{"name":"subSuite","value":"TestSpecPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"31324-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_spec1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"9e88797da81d1c51.json","parameterValues":[]}