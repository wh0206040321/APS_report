{"uid":"564837170cfff2a9","name":"test_production_add3","fullName":"Tests.test_items.test_production.TestProductionPage#test_production_add3","historyId":"4121d572afd5f52929ccbde3bfcd1dec","time":{"start":1753710661186,"stop":1753710676271,"duration":15085},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff787026f65+78965]\n\tGetHandleVerifier [0x0x7ff787026fc0+79056]\n\t(No symbol) [0x0x7ff786db9dda]\n\t(No symbol) [0x0x7ff786e102ea]\n\t(No symbol) [0x0x7ff786e1059c]\n\t(No symbol) [0x0x7ff786e63f37]\n\t(No symbol) [0x0x7ff786e386af]\n\t(No symbol) [0x0x7ff786e60dbe]\n\t(No symbol) [0x0x7ff786e38443]\n\t(No symbol) [0x0x7ff786e01311]\n\t(No symbol) [0x0x7ff786e020a3]\n\tGetHandleVerifier [0x0x7ff7872de26d+2926461]\n\tGetHandleVerifier [0x0x7ff7872d8993+2903715]\n\tGetHandleVerifier [0x0x7ff7872f6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7870416fe+187406]\n\tGetHandleVerifier [0x0x7ff7870496ef+220159]\n\tGetHandleVerifier [0x0x7ff78702faf4+114692]\n\tGetHandleVerifier [0x0x7ff78702fca9+115129]\n\tGetHandleVerifier [0x0x7ff7870164d8+10728]\n\tBaseThreadInitThunk [0x0x7ffe499c7374+20]\n\tRtlUserThreadStart [0x0x7ffe4a2fcc91+33]","statusTrace":"self = <test_items.test_production.TestProductionPage object at 0x000002CDB7C3BB50>\nlogin_to_production = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a54206cf26bd9fd47d5d4718c1440c1d\")>\n\n    @allure.story(\"添加测试数据\")\n    # @pytest.mark.run(order=1)\n    def test_production_add3(self, login_to_production):\n        driver = login_to_production  # WebDriver 实例\n        production = ProductionPage(driver)  # 用 driver 初始化 ProductionPage\n        production.click_add_button()\n    \n        # 点击工作代码对话框\n        production.click_button('//label[text()=\"工作代码\"]/following-sibling::div//i')\n        # 在订单代码输入框中输入“1测试C订单”\n        production.enter_texts(\n            '(//div[./p[text()=\"订单代码\"]])[2]/parent::div//input',\n            \"1测试C订单\",\n        )\n        sleep(1)\n        # 选择搜索到的第一个订单“1测试C订单”\n        production.click_button(\n            '//table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]'\n        )\n        # 点击确认按钮\n        production.click_button('(//button[@class=\"ivu-btn ivu-btn-primary\"])[5]')\n    \n        sleep(1)\n        # 定位“报工数量”输入框，并清空已填写内容\n        input_num = production.get_find_element_xpath(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input'\n        )\n        input_num.send_keys(Keys.CONTROL, \"a\")  # 全选输入框内容\n        input_num.send_keys(Keys.BACK_SPACE)  # 删除已填写的内容\n        production.enter_texts(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input', \"100\"\n        )\n    \n        # 点击提交按钮\n        production.click_button('(//button[@class=\"ivu-btn ivu-btn-primary\"])[4]')\n        # 获取提示信息\n        sleep(1)\n>       message = production.get_find_element_xpath(\n            '//p[text()=\"当前工作报工数量大于计划数量加完成数量，是否将实绩状态改为结束\"]'\n        ).text\n\nTests\\test_items\\test_production.py:326: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\production_page.py:44: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a54206cf26bd9fd47d5d4718c1440c1d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002CDB859B9A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff787026f65+78965]\nE       \tGetHandleVerifier [0x0x7ff787026fc0+79056]\nE       \t(No symbol) [0x0x7ff786db9dda]\nE       \t(No symbol) [0x0x7ff786e102ea]\nE       \t(No symbol) [0x0x7ff786e1059c]\nE       \t(No symbol) [0x0x7ff786e63f37]\nE       \t(No symbol) [0x0x7ff786e386af]\nE       \t(No symbol) [0x0x7ff786e60dbe]\nE       \t(No symbol) [0x0x7ff786e38443]\nE       \t(No symbol) [0x0x7ff786e01311]\nE       \t(No symbol) [0x0x7ff786e020a3]\nE       \tGetHandleVerifier [0x0x7ff7872de26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7872d8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7872f6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7870416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7870496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff78702faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff78702fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7870164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe499c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffe4a2fcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_production","time":{"start":1753710652669,"stop":1753710661185,"duration":8516},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff787026f65+78965]\n\tGetHandleVerifier [0x0x7ff787026fc0+79056]\n\t(No symbol) [0x0x7ff786db9dda]\n\t(No symbol) [0x0x7ff786e102ea]\n\t(No symbol) [0x0x7ff786e1059c]\n\t(No symbol) [0x0x7ff786e63f37]\n\t(No symbol) [0x0x7ff786e386af]\n\t(No symbol) [0x0x7ff786e60dbe]\n\t(No symbol) [0x0x7ff786e38443]\n\t(No symbol) [0x0x7ff786e01311]\n\t(No symbol) [0x0x7ff786e020a3]\n\tGetHandleVerifier [0x0x7ff7872de26d+2926461]\n\tGetHandleVerifier [0x0x7ff7872d8993+2903715]\n\tGetHandleVerifier [0x0x7ff7872f6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7870416fe+187406]\n\tGetHandleVerifier [0x0x7ff7870496ef+220159]\n\tGetHandleVerifier [0x0x7ff78702faf4+114692]\n\tGetHandleVerifier [0x0x7ff78702fca9+115129]\n\tGetHandleVerifier [0x0x7ff7870164d8+10728]\n\tBaseThreadInitThunk [0x0x7ffe499c7374+20]\n\tRtlUserThreadStart [0x0x7ffe4a2fcc91+33]","statusTrace":"self = <test_items.test_production.TestProductionPage object at 0x000002CDB7C3BB50>\nlogin_to_production = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a54206cf26bd9fd47d5d4718c1440c1d\")>\n\n    @allure.story(\"添加测试数据\")\n    # @pytest.mark.run(order=1)\n    def test_production_add3(self, login_to_production):\n        driver = login_to_production  # WebDriver 实例\n        production = ProductionPage(driver)  # 用 driver 初始化 ProductionPage\n        production.click_add_button()\n    \n        # 点击工作代码对话框\n        production.click_button('//label[text()=\"工作代码\"]/following-sibling::div//i')\n        # 在订单代码输入框中输入“1测试C订单”\n        production.enter_texts(\n            '(//div[./p[text()=\"订单代码\"]])[2]/parent::div//input',\n            \"1测试C订单\",\n        )\n        sleep(1)\n        # 选择搜索到的第一个订单“1测试C订单”\n        production.click_button(\n            '//table[.//tr[./td[3]//span[text()=\"1测试C订单:1\"]]]//td[3]//span[text()=\"1测试C订单:1\"]'\n        )\n        # 点击确认按钮\n        production.click_button('(//button[@class=\"ivu-btn ivu-btn-primary\"])[5]')\n    \n        sleep(1)\n        # 定位“报工数量”输入框，并清空已填写内容\n        input_num = production.get_find_element_xpath(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input'\n        )\n        input_num.send_keys(Keys.CONTROL, \"a\")  # 全选输入框内容\n        input_num.send_keys(Keys.BACK_SPACE)  # 删除已填写的内容\n        production.enter_texts(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input', \"100\"\n        )\n    \n        # 点击提交按钮\n        production.click_button('(//button[@class=\"ivu-btn ivu-btn-primary\"])[4]')\n        # 获取提示信息\n        sleep(1)\n>       message = production.get_find_element_xpath(\n            '//p[text()=\"当前工作报工数量大于计划数量加完成数量，是否将实绩状态改为结束\"]'\n        ).text\n\nTests\\test_items\\test_production.py:326: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\production_page.py:44: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a54206cf26bd9fd47d5d4718c1440c1d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002CDB859B9A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff787026f65+78965]\nE       \tGetHandleVerifier [0x0x7ff787026fc0+79056]\nE       \t(No symbol) [0x0x7ff786db9dda]\nE       \t(No symbol) [0x0x7ff786e102ea]\nE       \t(No symbol) [0x0x7ff786e1059c]\nE       \t(No symbol) [0x0x7ff786e63f37]\nE       \t(No symbol) [0x0x7ff786e386af]\nE       \t(No symbol) [0x0x7ff786e60dbe]\nE       \t(No symbol) [0x0x7ff786e38443]\nE       \t(No symbol) [0x0x7ff786e01311]\nE       \t(No symbol) [0x0x7ff786e020a3]\nE       \tGetHandleVerifier [0x0x7ff7872de26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7872d8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7872f6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7870416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7870496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff78702faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff78702fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7870164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe499c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffe4a2fcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"15810f09d9f40430","name":"test_find_element_timeout","source":"15810f09d9f40430.png","type":"image/png","size":103659},{"uid":"33adcc65e2858a53","name":"log","source":"33adcc65e2858a53.txt","type":"text/plain","size":2073}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"login_to_production::0","time":{"start":1753710676283,"stop":1753710678405,"duration":2122},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"feature","value":"生产报工测试用例"},{"name":"story","value":"添加测试数据"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_production"},{"name":"subSuite","value":"TestProductionPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26924-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_production"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"564837170cfff2a9.json","parameterValues":[]}