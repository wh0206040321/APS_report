{"uid":"ea45243e0a70641a","name":"test_production_textverify","fullName":"Tests.test_items.test_production.TestProductionPage#test_production_textverify","historyId":"f0b83d72d041530be67b433f828e967b","time":{"start":1761058916563,"stop":1761058923769,"duration":7206},"status":"failed","statusMessage":"AssertionError: assert ('10000' == '1000000000000000000'\n  \n  \u001B[0m\u001B[91m- 1000000000000000000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 10000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_production.TestProductionPage object at 0x00000173A64EBCD0>, login_to_production = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"71ac9cc4022415e67342f461f0e373e7\")>\n\n    @allure.story(\"校验数字文本框和文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_production_textverify(self, login_to_production):\n        driver = login_to_production  # WebDriver 实例\n        production = ProductionPage(driver)  # 用 driver 初始化 ProductionPage\n        num = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        production.click_add_button()\n        name = \"1测试C订单\"\n        # 点击工作代码对话框\n        production.click_button('//label[text()=\"工作代码\"]/following-sibling::div//i')\n        # 在订单代码输入框中输入“1测试C订单”\n        production.enter_texts(\n            '(//div[./p[text()=\"订单代码\"]])[2]/parent::div//input',\n            name,\n        )\n    \n        production.click_button(\n            f'//table[.//tr[./td[3]//span[text()=\"{name}:2\"]]]//td[3]//span[text()=\"{name}:2\"]'\n        )\n        # 点击确认按钮\n        production.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[last()]//span[text()=\"确定\"]')\n        production.enter_texts(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input',\n            num,\n        )\n        production.enter_texts(\n            '//label[text()=\"异常原因\"]/following-sibling::div//input',\n            num,\n        )\n        production.click_button(\n            '//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        production.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"返回\"]')\n        num_ = production.get_find_element_xpath(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input'\n        ).get_attribute(\"value\")\n        text_ = production.get_find_element_xpath(\n            '//label[text()=\"异常原因\"]/following-sibling::div//input'\n        ).get_attribute(\"value\")\n>       assert num_ == '1000000000000000000' and text_ == name\nE       AssertionError: assert ('10000' == '1000000000000000000'\nE         \nE         \u001B[0m\u001B[91m- 1000000000000000000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 10000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_production.py:491: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_production","time":{"start":1761058901386,"stop":1761058916561,"duration":15175},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert ('10000' == '1000000000000000000'\n  \n  \u001B[0m\u001B[91m- 1000000000000000000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ 10000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)","statusTrace":"self = <test_items.test_production.TestProductionPage object at 0x00000173A64EBCD0>, login_to_production = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"71ac9cc4022415e67342f461f0e373e7\")>\n\n    @allure.story(\"校验数字文本框和文本框成功\")\n    # @pytest.mark.run(order=1)\n    def test_production_textverify(self, login_to_production):\n        driver = login_to_production  # WebDriver 实例\n        production = ProductionPage(driver)  # 用 driver 初始化 ProductionPage\n        num = \"111111111111111133331122221111222221111111113333111111144444111111111111111111111111111111111111111111111111\"\n        production.click_add_button()\n        name = \"1测试C订单\"\n        # 点击工作代码对话框\n        production.click_button('//label[text()=\"工作代码\"]/following-sibling::div//i')\n        # 在订单代码输入框中输入“1测试C订单”\n        production.enter_texts(\n            '(//div[./p[text()=\"订单代码\"]])[2]/parent::div//input',\n            name,\n        )\n    \n        production.click_button(\n            f'//table[.//tr[./td[3]//span[text()=\"{name}:2\"]]]//td[3]//span[text()=\"{name}:2\"]'\n        )\n        # 点击确认按钮\n        production.click_button(\n            '(//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"])[last()]//span[text()=\"确定\"]')\n        production.enter_texts(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input',\n            num,\n        )\n        production.enter_texts(\n            '//label[text()=\"异常原因\"]/following-sibling::div//input',\n            num,\n        )\n        production.click_button(\n            '//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        production.click_button('//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"返回\"]')\n        num_ = production.get_find_element_xpath(\n            '//label[text()=\"报工数量\"]/following-sibling::div//input'\n        ).get_attribute(\"value\")\n        text_ = production.get_find_element_xpath(\n            '//label[text()=\"异常原因\"]/following-sibling::div//input'\n        ).get_attribute(\"value\")\n>       assert num_ == '1000000000000000000' and text_ == name\nE       AssertionError: assert ('10000' == '1000000000000000000'\nE         \nE         \u001B[0m\u001B[91m- 1000000000000000000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE         \u001B[92m+ 10000\u001B[39;49;00m\u001B[90m\u001B[39;49;00m)\n\nTests\\test_items\\test_production.py:491: AssertionError","steps":[],"attachments":[{"uid":"f18693af615d4fc7","name":"test_production_textverify_failure","source":"f18693af615d4fc7.png","type":"image/png","size":99519},{"uid":"9bb03d7cdfb78af9","name":"test_production_textverify_source","source":"9bb03d7cdfb78af9.html","type":"text/html","size":1322776},{"uid":"ea6a2fe3c7602042","name":"log","source":"ea6a2fe3c7602042.txt","type":"text/plain","size":1946}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_production::0","time":{"start":1761058924221,"stop":1761058926485,"duration":2264},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"校验数字文本框和文本框成功"},{"name":"feature","value":"生产报工测试用例"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_production"},{"name":"subSuite","value":"TestProductionPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_production"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"ea45243e0a70641a.json","parameterValues":[]}