{"uid":"a870e0ac009ba7de","name":"test_operationPlan_success","fullName":"Tests.test_items.test_operationPlan.TestOperationPlanPage#test_operationPlan_success","historyId":"17baab8dc104c938e55e598eac4453b4","time":{"start":1755139037979,"stop":1755139055253,"duration":17274},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9be02ea]\n\t(No symbol) [0x0x7ff7f9be059c]\n\t(No symbol) [0x0x7ff7f9c33f37]\n\t(No symbol) [0x0x7ff7f9c086af]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","statusTrace":"self = <test_items.test_operationPlan.TestOperationPlanPage object at 0x000001BF1D4F7190>\nlogin_to_operationPlan = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"318876ac9e37bcfab2a422c39ac9db05\")>\n\n    @allure.story(\"勾选资源，勾选时间段，点击查询 查询成功,发布指示成功\")\n    # @pytest.mark.run(order=1)\n    def test_operationPlan_success(self, login_to_operationPlan):\n        driver = login_to_operationPlan  # WebDriver 实例\n        operationPlan = operationPlanPage(\n            driver\n        )  # 用 operationPlan 初始化 operationPlanPage\n        shared_data = SharedDataUtil.load_data()\n        resource1 = shared_data.get(\"master_res1\")\n        resource2 = shared_data.get(\"master_res2\")\n        sleep(1)\n        # 搜索框输入资源代码\n        operationPlan.enter_texts(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]',\n            f\"{resource1}\",\n        )\n        # 勾选资源\n        sleep(1)\n        row_number = driver.execute_script(\n            \"return document.evaluate(\"\n            f'\"count(//tr[.//span[text()=\\\\\"{resource1}\\\\\"]]/preceding-sibling::tr) + 1\",'\n            \"document, null, XPathResult.NUMBER_TYPE, null\"\n            \").numberValue;\"\n        )\n        print(f\"行号: {int(row_number)}\")\n        operationPlan.click_button(\n            f'//table[@class=\"vxe-table--body\"]//tr[{int(row_number)}]/td[2]//span[1]/span'\n        )\n        sleep(1)\n        # 清除资源代码的输入\n        ele = operationPlan.get_find_element_xpath(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]'\n        )\n        ele.send_keys(Keys.CONTROL, \"a\")\n        ele.send_keys(Keys.DELETE)\n        # 搜索框输入资源代码\n        operationPlan.enter_texts(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]',\n            f\"{resource2}\",\n        )\n        sleep(1)\n        # 勾选资源\n        row_number2 = driver.execute_script(\n            \"return document.evaluate(\"\n            f'\"count(//tr[.//span[text()=\\\\\"{resource2}\\\\\"]]/preceding-sibling::tr) + 1\",'\n            \"document, null, XPathResult.NUMBER_TYPE, null\"\n            \").numberValue;\"\n        )\n        print(f\"行号: {int(row_number2)}\")\n        operationPlan.click_button(\n            f'//table[@class=\"vxe-table--body\"]//tr[{int(row_number2)}]/td[2]//span[1]/span'\n        )\n        # 清除资源代码的输入\n        ele = operationPlan.get_find_element_xpath(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]'\n        )\n        ele.send_keys(Keys.CONTROL, \"a\")\n        ele.send_keys(Keys.DELETE)\n    \n        # 打开时间段选择弹窗（点击时间选择按钮）\n        operationPlan.click_inputbutton()\n        # 选择当前日期（点击带有 today 和 focused 样式的日期单元格）\n        operationPlan.click_button(\n            '//span[@class=\"ivu-date-picker-cells-cell ivu-date-picker-cells-cell-today ivu-date-picker-cells-focused\"]'\n        )\n        # 点击下月按钮\n        operationPlan.click_button('(//span[@class=\"ivu-picker-panel-icon-btn ivu-date-picker-next-btn ivu-date-picker-next-btn-arrow\"])[2]/i')\n        sleep(0.5)\n        operationPlan.click_button(\n            '(//span[@class=\"ivu-picker-panel-icon-btn ivu-date-picker-next-btn ivu-date-picker-next-btn-arrow\"])[2]/i')\n        # 选择具体的时间点（例如：28 日）\n        operationPlan.click_button('(//em[text()=\"28\"])[last()]')\n        # 点击确认按钮以完成时间段的选择\n        operationPlan.click_okbutton()\n    \n        # 点击查询\n        operationPlan.click_selebutton()\n        operationPlan.enter_texts(\n            '//div[./p[text()=\"订单代码\"]]/parent::div//input', \"1测试C订单\"\n        )\n    \n>       input_text1 = operationPlan.get_find_element_xpath(\n            f'(//table[.//span[text()=\"{resource1}\"]])[last()]//tr[1]//td[7]'\n        ).text\n\nTests\\test_items\\test_operationPlan.py:199: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\operationPlan_page.py:38: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"318876ac9e37bcfab2a422c39ac9db05\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001BF1D57CDC0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\nE       \t(No symbol) [0x0x7ff7f9b89dda]\nE       \t(No symbol) [0x0x7ff7f9be02ea]\nE       \t(No symbol) [0x0x7ff7f9be059c]\nE       \t(No symbol) [0x0x7ff7f9c33f37]\nE       \t(No symbol) [0x0x7ff7f9c086af]\nE       \t(No symbol) [0x0x7ff7f9c30dbe]\nE       \t(No symbol) [0x0x7ff7f9c08443]\nE       \t(No symbol) [0x0x7ff7f9bd1311]\nE       \t(No symbol) [0x0x7ff7f9bd20a3]\nE       \tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcd4147374+20]\nE       \tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_operationPlan","time":{"start":1755139029487,"stop":1755139037979,"duration":8492},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9be02ea]\n\t(No symbol) [0x0x7ff7f9be059c]\n\t(No symbol) [0x0x7ff7f9c33f37]\n\t(No symbol) [0x0x7ff7f9c086af]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","statusTrace":"self = <test_items.test_operationPlan.TestOperationPlanPage object at 0x000001BF1D4F7190>\nlogin_to_operationPlan = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"318876ac9e37bcfab2a422c39ac9db05\")>\n\n    @allure.story(\"勾选资源，勾选时间段，点击查询 查询成功,发布指示成功\")\n    # @pytest.mark.run(order=1)\n    def test_operationPlan_success(self, login_to_operationPlan):\n        driver = login_to_operationPlan  # WebDriver 实例\n        operationPlan = operationPlanPage(\n            driver\n        )  # 用 operationPlan 初始化 operationPlanPage\n        shared_data = SharedDataUtil.load_data()\n        resource1 = shared_data.get(\"master_res1\")\n        resource2 = shared_data.get(\"master_res2\")\n        sleep(1)\n        # 搜索框输入资源代码\n        operationPlan.enter_texts(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]',\n            f\"{resource1}\",\n        )\n        # 勾选资源\n        sleep(1)\n        row_number = driver.execute_script(\n            \"return document.evaluate(\"\n            f'\"count(//tr[.//span[text()=\\\\\"{resource1}\\\\\"]]/preceding-sibling::tr) + 1\",'\n            \"document, null, XPathResult.NUMBER_TYPE, null\"\n            \").numberValue;\"\n        )\n        print(f\"行号: {int(row_number)}\")\n        operationPlan.click_button(\n            f'//table[@class=\"vxe-table--body\"]//tr[{int(row_number)}]/td[2]//span[1]/span'\n        )\n        sleep(1)\n        # 清除资源代码的输入\n        ele = operationPlan.get_find_element_xpath(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]'\n        )\n        ele.send_keys(Keys.CONTROL, \"a\")\n        ele.send_keys(Keys.DELETE)\n        # 搜索框输入资源代码\n        operationPlan.enter_texts(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]',\n            f\"{resource2}\",\n        )\n        sleep(1)\n        # 勾选资源\n        row_number2 = driver.execute_script(\n            \"return document.evaluate(\"\n            f'\"count(//tr[.//span[text()=\\\\\"{resource2}\\\\\"]]/preceding-sibling::tr) + 1\",'\n            \"document, null, XPathResult.NUMBER_TYPE, null\"\n            \").numberValue;\"\n        )\n        print(f\"行号: {int(row_number2)}\")\n        operationPlan.click_button(\n            f'//table[@class=\"vxe-table--body\"]//tr[{int(row_number2)}]/td[2]//span[1]/span'\n        )\n        # 清除资源代码的输入\n        ele = operationPlan.get_find_element_xpath(\n            '(//div[./p[text()=\"资源代码\"]]/following-sibling::div//input)[1]'\n        )\n        ele.send_keys(Keys.CONTROL, \"a\")\n        ele.send_keys(Keys.DELETE)\n    \n        # 打开时间段选择弹窗（点击时间选择按钮）\n        operationPlan.click_inputbutton()\n        # 选择当前日期（点击带有 today 和 focused 样式的日期单元格）\n        operationPlan.click_button(\n            '//span[@class=\"ivu-date-picker-cells-cell ivu-date-picker-cells-cell-today ivu-date-picker-cells-focused\"]'\n        )\n        # 点击下月按钮\n        operationPlan.click_button('(//span[@class=\"ivu-picker-panel-icon-btn ivu-date-picker-next-btn ivu-date-picker-next-btn-arrow\"])[2]/i')\n        sleep(0.5)\n        operationPlan.click_button(\n            '(//span[@class=\"ivu-picker-panel-icon-btn ivu-date-picker-next-btn ivu-date-picker-next-btn-arrow\"])[2]/i')\n        # 选择具体的时间点（例如：28 日）\n        operationPlan.click_button('(//em[text()=\"28\"])[last()]')\n        # 点击确认按钮以完成时间段的选择\n        operationPlan.click_okbutton()\n    \n        # 点击查询\n        operationPlan.click_selebutton()\n        operationPlan.enter_texts(\n            '//div[./p[text()=\"订单代码\"]]/parent::div//input', \"1测试C订单\"\n        )\n    \n>       input_text1 = operationPlan.get_find_element_xpath(\n            f'(//table[.//span[text()=\"{resource1}\"]])[last()]//tr[1]//td[7]'\n        ).text\n\nTests\\test_items\\test_operationPlan.py:199: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\operationPlan_page.py:38: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:28: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"318876ac9e37bcfab2a422c39ac9db05\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001BF1D57CDC0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\nE       \t(No symbol) [0x0x7ff7f9b89dda]\nE       \t(No symbol) [0x0x7ff7f9be02ea]\nE       \t(No symbol) [0x0x7ff7f9be059c]\nE       \t(No symbol) [0x0x7ff7f9c33f37]\nE       \t(No symbol) [0x0x7ff7f9c086af]\nE       \t(No symbol) [0x0x7ff7f9c30dbe]\nE       \t(No symbol) [0x0x7ff7f9c08443]\nE       \t(No symbol) [0x0x7ff7f9bd1311]\nE       \t(No symbol) [0x0x7ff7f9bd20a3]\nE       \tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcd4147374+20]\nE       \tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"f075297ec135efc0","name":"test_operationPlan_success_failure","source":"f075297ec135efc0.png","type":"image/png","size":104290},{"uid":"cf3c62c3071ae529","name":"test_operationPlan_success_source","source":"cf3c62c3071ae529.html","type":"text/html","size":1173545},{"uid":"e125e297ecec86e3","name":"log","source":"e125e297ecec86e3.txt","type":"text/plain","size":5165}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true},"afterStages":[{"name":"login_to_operationPlan::0","time":{"start":1755139055430,"stop":1755139057599,"duration":2169},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"工作指示发布表测试用例"},{"name":"story","value":"勾选资源，勾选时间段，点击查询 查询成功,发布指示成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_operationPlan"},{"name":"subSuite","value":"TestOperationPlanPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"17648-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_operationPlan"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e23740ee1ddb648a","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7f9df6f65+78965]\n\tGetHandleVerifier [0x0x7ff7f9df6fc0+79056]\n\t(No symbol) [0x0x7ff7f9b89dda]\n\t(No symbol) [0x0x7ff7f9be02ea]\n\t(No symbol) [0x0x7ff7f9be059c]\n\t(No symbol) [0x0x7ff7f9c33f37]\n\t(No symbol) [0x0x7ff7f9c086af]\n\t(No symbol) [0x0x7ff7f9c30dbe]\n\t(No symbol) [0x0x7ff7f9c08443]\n\t(No symbol) [0x0x7ff7f9bd1311]\n\t(No symbol) [0x0x7ff7f9bd20a3]\n\tGetHandleVerifier [0x0x7ff7fa0ae26d+2926461]\n\tGetHandleVerifier [0x0x7ff7fa0a8993+2903715]\n\tGetHandleVerifier [0x0x7ff7fa0c6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7f9e116fe+187406]\n\tGetHandleVerifier [0x0x7ff7f9e196ef+220159]\n\tGetHandleVerifier [0x0x7ff7f9dffaf4+114692]\n\tGetHandleVerifier [0x0x7ff7f9dffca9+115129]\n\tGetHandleVerifier [0x0x7ff7f9de64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcd4147374+20]\n\tRtlUserThreadStart [0x0x7ffcd4dfcc91+33]","time":{"start":1755139009984,"stop":1755139027006,"duration":17022}},{"uid":"496af3458efc57d3","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@style=\"width: 140px; margin-top: 0px;\"]//tr[1]/td[2]//span[1]/span","time":{"start":1755096256050,"stop":1755096268817,"duration":12767}},{"uid":"337edfd319851572","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //table[@style=\"width: 140px; margin-top: 0px;\"]//tr[1]/td[2]//span[1]/span","time":{"start":1755096231682,"stop":1755096244431,"duration":12749}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"a870e0ac009ba7de.json","parameterValues":[]}