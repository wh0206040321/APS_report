{"uid":"745cd4d3a8d15d7d","name":"test_master_delsuccess3","fullName":"Tests.test_item.test_master.TestMasterPage#test_master_delsuccess3","historyId":"c6fc3f8acaa7b3c3358d329b785cffe5","time":{"start":1752810429062,"stop":1752810440516,"duration":11454},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7793d6f65+78965]\n\tGetHandleVerifier [0x0x7ff7793d6fc0+79056]\n\t(No symbol) [0x0x7ff779169dda]\n\t(No symbol) [0x0x7ff7791c02ea]\n\t(No symbol) [0x0x7ff7791c059c]\n\t(No symbol) [0x0x7ff779213f37]\n\t(No symbol) [0x0x7ff7791e86af]\n\t(No symbol) [0x0x7ff779210dbe]\n\t(No symbol) [0x0x7ff7791e8443]\n\t(No symbol) [0x0x7ff7791b1311]\n\t(No symbol) [0x0x7ff7791b20a3]\n\tGetHandleVerifier [0x0x7ff77968e26d+2926461]\n\tGetHandleVerifier [0x0x7ff779688993+2903715]\n\tGetHandleVerifier [0x0x7ff7796a6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7793f16fe+187406]\n\tGetHandleVerifier [0x0x7ff7793f96ef+220159]\n\tGetHandleVerifier [0x0x7ff7793dfaf4+114692]\n\tGetHandleVerifier [0x0x7ff7793dfca9+115129]\n\tGetHandleVerifier [0x0x7ff7793c64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffa099e7374+20]\n\tRtlUserThreadStart [0x0x7ffa0b89cc91+33]","statusTrace":"self = <test_item.test_master.TestMasterPage object at 0x000001CF75469210>\nlogin_to_master = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"46394f070fcc86758aa20042c42e6a80\")>\n\n    @allure.story(\"删除数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_master_delsuccess3(self, login_to_master):\n        driver = login_to_master  # WebDriver 实例\n        master = MasterPage(driver)  # 用 driver 初始化 MasterPage\n    \n        wait = WebDriverWait(driver, 3)\n        # 循环删除元素直到不存在\n        while True:\n            eles = driver.find_elements(\n                By.XPATH, '//tr[.//span[text()=\"1211\"]]/td[2]//span[text()=\"1211\"]'\n            )\n            if not eles:\n                break  # 没有找到元素时退出循环\n                # 存在元素，点击删除按钮\n            eles[0].click()\n            master.click_del_button()\n            # 点击确定\n            # 找到共同的父元素\n>           parent = master.get_find_element_class(\"ivu-modal-confirm-footer\")\n\nTests\\test_item\\test_master.py:658: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\master_page.py:97: in get_find_element_class\n    return self.find_element(By.CLASS_NAME, classname)\nPages\\base_page.py:24: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"46394f070fcc86758aa20042c42e6a80\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001CF754A5990>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7793d6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7793d6fc0+79056]\nE       \t(No symbol) [0x0x7ff779169dda]\nE       \t(No symbol) [0x0x7ff7791c02ea]\nE       \t(No symbol) [0x0x7ff7791c059c]\nE       \t(No symbol) [0x0x7ff779213f37]\nE       \t(No symbol) [0x0x7ff7791e86af]\nE       \t(No symbol) [0x0x7ff779210dbe]\nE       \t(No symbol) [0x0x7ff7791e8443]\nE       \t(No symbol) [0x0x7ff7791b1311]\nE       \t(No symbol) [0x0x7ff7791b20a3]\nE       \tGetHandleVerifier [0x0x7ff77968e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff779688993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7796a6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7793f16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7793f96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7793dfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7793dfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7793c64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffa099e7374+20]\nE       \tRtlUserThreadStart [0x0x7ffa0b89cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_master","time":{"start":1752810421543,"stop":1752810429062,"duration":7519},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7793d6f65+78965]\n\tGetHandleVerifier [0x0x7ff7793d6fc0+79056]\n\t(No symbol) [0x0x7ff779169dda]\n\t(No symbol) [0x0x7ff7791c02ea]\n\t(No symbol) [0x0x7ff7791c059c]\n\t(No symbol) [0x0x7ff779213f37]\n\t(No symbol) [0x0x7ff7791e86af]\n\t(No symbol) [0x0x7ff779210dbe]\n\t(No symbol) [0x0x7ff7791e8443]\n\t(No symbol) [0x0x7ff7791b1311]\n\t(No symbol) [0x0x7ff7791b20a3]\n\tGetHandleVerifier [0x0x7ff77968e26d+2926461]\n\tGetHandleVerifier [0x0x7ff779688993+2903715]\n\tGetHandleVerifier [0x0x7ff7796a6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7793f16fe+187406]\n\tGetHandleVerifier [0x0x7ff7793f96ef+220159]\n\tGetHandleVerifier [0x0x7ff7793dfaf4+114692]\n\tGetHandleVerifier [0x0x7ff7793dfca9+115129]\n\tGetHandleVerifier [0x0x7ff7793c64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffa099e7374+20]\n\tRtlUserThreadStart [0x0x7ffa0b89cc91+33]","statusTrace":"self = <test_item.test_master.TestMasterPage object at 0x000001CF75469210>\nlogin_to_master = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"46394f070fcc86758aa20042c42e6a80\")>\n\n    @allure.story(\"删除数据成功\")\n    # @pytest.mark.run(order=1)\n    def test_master_delsuccess3(self, login_to_master):\n        driver = login_to_master  # WebDriver 实例\n        master = MasterPage(driver)  # 用 driver 初始化 MasterPage\n    \n        wait = WebDriverWait(driver, 3)\n        # 循环删除元素直到不存在\n        while True:\n            eles = driver.find_elements(\n                By.XPATH, '//tr[.//span[text()=\"1211\"]]/td[2]//span[text()=\"1211\"]'\n            )\n            if not eles:\n                break  # 没有找到元素时退出循环\n                # 存在元素，点击删除按钮\n            eles[0].click()\n            master.click_del_button()\n            # 点击确定\n            # 找到共同的父元素\n>           parent = master.get_find_element_class(\"ivu-modal-confirm-footer\")\n\nTests\\test_item\\test_master.py:658: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\master_page.py:97: in get_find_element_class\n    return self.find_element(By.CLASS_NAME, classname)\nPages\\base_page.py:24: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"46394f070fcc86758aa20042c42e6a80\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001CF754A5990>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7793d6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff7793d6fc0+79056]\nE       \t(No symbol) [0x0x7ff779169dda]\nE       \t(No symbol) [0x0x7ff7791c02ea]\nE       \t(No symbol) [0x0x7ff7791c059c]\nE       \t(No symbol) [0x0x7ff779213f37]\nE       \t(No symbol) [0x0x7ff7791e86af]\nE       \t(No symbol) [0x0x7ff779210dbe]\nE       \t(No symbol) [0x0x7ff7791e8443]\nE       \t(No symbol) [0x0x7ff7791b1311]\nE       \t(No symbol) [0x0x7ff7791b20a3]\nE       \tGetHandleVerifier [0x0x7ff77968e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff779688993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7796a6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7793f16fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7793f96ef+220159]\nE       \tGetHandleVerifier [0x0x7ff7793dfaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff7793dfca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7793c64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffa099e7374+20]\nE       \tRtlUserThreadStart [0x0x7ffa0b89cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"9658d4a3dfd6d8b","name":"test_find_element_timeout","source":"9658d4a3dfd6d8b.png","type":"image/png","size":132177},{"uid":"f10e538addb0503a","name":"log","source":"f10e538addb0503a.txt","type":"text/plain","size":1248}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"login_to_master::0","time":{"start":1752810440617,"stop":1752810442737,"duration":2120},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"story","value":"删除数据成功"},{"name":"feature","value":"工艺产能表测试用例"},{"name":"parentSuite","value":"Tests.test_item"},{"name":"suite","value":"test_master"},{"name":"subSuite","value":"TestMasterPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"26136-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_item.test_master"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"745cd4d3a8d15d7d.json","parameterValues":[]}