{"uid":"77e0fcf04f3ad9c3","name":"test_chart_editlayout","fullName":"Tests.test_items.test_chart.TestChartPage#test_chart_editlayout","historyId":"a6e41127478246e45a7847cdd53a1a46","time":{"start":1756824250035,"stop":1756824256471,"duration":6436},"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.itemsPage.chart_page.ChartPage object at 0x000001E26683A6E0>.has_fail_message","statusTrace":"self = <test_items.test_chart.TestChartPage object at 0x000001E265F98DC0>, login_to_chart = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"632fab6ce02267dfc1c5473710267e51\")>\n\n    @allure.story(\"修改布局名称成功\")\n    # @pytest.mark.run(order=1)\n    def test_chart_editlayout(self, login_to_chart):\n        driver = login_to_chart  # WebDriver 实例\n        chart = ChartPage(driver)  # 用 driver 初始化 ChartPage\n        wait = WebDriverWait(driver, 10)\n        chart.click_button(\n            '//div[@class=\"el-tabs__nav is-top\"]/div[@role=\"tab\" and text()=\"测试布局\"]'\n        )\n        chart.click_button('//a[@title=\"设置\"]')\n        input_text = chart.get_find_element_xpath(\n            '//label[text()=\"布局名称\"]/following-sibling::div//input'\n        )\n        input_text.send_keys(Keys.CONTROL + \"a\")\n        input_text.send_keys(Keys.DELETE)\n        chart.enter_texts(\n            '//label[text()=\"布局名称\"]/following-sibling::div//input', \"测试布局修改\"\n        )\n        chart.click_button('(//button[@class=\"ivu-btn ivu-btn-primary\"])[3]')\n        sleep(2)\n        element = wait.until(\n            EC.presence_of_element_located(\n                (\n                    By.XPATH,\n                    '//div[@class=\"el-tabs__nav is-top\"]/div[@role=\"tab\" and text()=\"测试布局修改\"]',\n                )\n            )\n        )\n        assert element.text == \"测试布局修改\"\n>       assert not chart.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.itemsPage.chart_page.ChartPage object at 0x000001E26683A6E0>.has_fail_message\n\nTests\\test_items\\test_chart.py:143: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_chart","time":{"start":1756824231496,"stop":1756824250034,"duration":18538},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert not True\n +  where True = has_fail_message()\n +    where has_fail_message = <Pages.itemsPage.chart_page.ChartPage object at 0x000001E26683A6E0>.has_fail_message","statusTrace":"self = <test_items.test_chart.TestChartPage object at 0x000001E265F98DC0>, login_to_chart = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"632fab6ce02267dfc1c5473710267e51\")>\n\n    @allure.story(\"修改布局名称成功\")\n    # @pytest.mark.run(order=1)\n    def test_chart_editlayout(self, login_to_chart):\n        driver = login_to_chart  # WebDriver 实例\n        chart = ChartPage(driver)  # 用 driver 初始化 ChartPage\n        wait = WebDriverWait(driver, 10)\n        chart.click_button(\n            '//div[@class=\"el-tabs__nav is-top\"]/div[@role=\"tab\" and text()=\"测试布局\"]'\n        )\n        chart.click_button('//a[@title=\"设置\"]')\n        input_text = chart.get_find_element_xpath(\n            '//label[text()=\"布局名称\"]/following-sibling::div//input'\n        )\n        input_text.send_keys(Keys.CONTROL + \"a\")\n        input_text.send_keys(Keys.DELETE)\n        chart.enter_texts(\n            '//label[text()=\"布局名称\"]/following-sibling::div//input', \"测试布局修改\"\n        )\n        chart.click_button('(//button[@class=\"ivu-btn ivu-btn-primary\"])[3]')\n        sleep(2)\n        element = wait.until(\n            EC.presence_of_element_located(\n                (\n                    By.XPATH,\n                    '//div[@class=\"el-tabs__nav is-top\"]/div[@role=\"tab\" and text()=\"测试布局修改\"]',\n                )\n            )\n        )\n        assert element.text == \"测试布局修改\"\n>       assert not chart.has_fail_message()\nE       assert not True\nE        +  where True = has_fail_message()\nE        +    where has_fail_message = <Pages.itemsPage.chart_page.ChartPage object at 0x000001E26683A6E0>.has_fail_message\n\nTests\\test_items\\test_chart.py:143: AssertionError","steps":[],"attachments":[{"uid":"79d510e70ae0ba82","name":"test_chart_editlayout_failure","source":"79d510e70ae0ba82.png","type":"image/png","size":76677},{"uid":"5c6f86587cd720b","name":"test_chart_editlayout_source","source":"5c6f86587cd720b.html","type":"text/html","size":1129277},{"uid":"c7099351b8086110","name":"log","source":"c7099351b8086110.txt","type":"text/plain","size":1654}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_chart::0","time":{"start":1756824256671,"stop":1756824258892,"duration":2221},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"资源甘特图测试用例"},{"name":"story","value":"修改布局名称成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_chart"},{"name":"subSuite","value":"TestChartPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"31324-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_chart"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"77e0fcf04f3ad9c3.json","parameterValues":[]}