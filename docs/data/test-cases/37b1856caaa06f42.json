{"uid":"37b1856caaa06f42","name":"test_login_success","fullName":"Tests.test_items.test_login.TestLoginPage#test_login_success","historyId":"a57593ab350c7920ee6cf7042063d5bb","time":{"start":1753788254906,"stop":1753788254907,"duration":1},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=137.0.7151.69)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff787026f65+78965]\n\tGetHandleVerifier [0x0x7ff787026fc0+79056]\n\t(No symbol) [0x0x7ff786db9dda]\n\t(No symbol) [0x0x7ff786d920d1]\n\t(No symbol) [0x0x7ff786e3ff4e]\n\t(No symbol) [0x0x7ff786e606cd]\n\t(No symbol) [0x0x7ff786e38443]\n\t(No symbol) [0x0x7ff786e01311]\n\t(No symbol) [0x0x7ff786e020a3]\n\tGetHandleVerifier [0x0x7ff7872de26d+2926461]\n\tGetHandleVerifier [0x0x7ff7872d8993+2903715]\n\tGetHandleVerifier [0x0x7ff7872f6aed+3026941]\n\tGetHandleVerifier [0x0x7ff7870416fe+187406]\n\tGetHandleVerifier [0x0x7ff7870496ef+220159]\n\tGetHandleVerifier [0x0x7ff78702faf4+114692]\n\tGetHandleVerifier [0x0x7ff78702fca9+115129]\n\tGetHandleVerifier [0x0x7ff7870164d8+10728]\n\tBaseThreadInitThunk [0x0x7ffe499c7374+20]\n\tRtlUserThreadStart [0x0x7ffe4a2fcc91+33]","statusTrace":"self = <test_items.test_login.TestLoginPage object at 0x0000013D24898FD0>, login_pa = <Pages.itemsPage.login_page.LoginPage object at 0x0000013D25497AF0>\n\n    @allure.story(\"登录成功\")\n    def test_login_success(self, login_pa):\n>       login_pa.enter_username(f\"{DateDriver().username}\")  # 输入用户名\n\nTests\\test_items\\test_login.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\itemsPage\\login_page.py:14: in enter_username\n    self.enter_text(By.XPATH, '//input[@placeholder=\"请输入账户\"]', username)\nPages\\base_page.py:66: in enter_text\n    element = WebDriverWait(self.driver, wait_time).until(\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:217: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000013D25497790>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...ff7870164d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffe499c7374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffe4a2fcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=137.0.7151.69)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff787026f65+78965]\nE       \tGetHandleVerifier [0x0x7ff787026fc0+79056]\nE       \t(No symbol) [0x0x7ff786db9dda]\nE       \t(No symbol) [0x0x7ff786d920d1]\nE       \t(No symbol) [0x0x7ff786e3ff4e]\nE       \t(No symbol) [0x0x7ff786e606cd]\nE       \t(No symbol) [0x0x7ff786e38443]\nE       \t(No symbol) [0x0x7ff786e01311]\nE       \t(No symbol) [0x0x7ff786e020a3]\nE       \tGetHandleVerifier [0x0x7ff7872de26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff7872d8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff7872f6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7870416fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7870496ef+220159]\nE       \tGetHandleVerifier [0x0x7ff78702faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff78702fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7870164d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffe499c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffe4a2fcc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_pa","time":{"start":1753788252022,"stop":1753788254905,"duration":2883},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[{"name":"login_pa::0","time":{"start":1753788254970,"stop":1753788257090,"duration":2120},"status":"broken","statusMessage":"KeyboardInterrupt\n","statusTrace":"  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\allure_commons\\_allure.py\", line 231, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\_pytest\\fixtures.py\", line 938, in _teardown_yield_fixture\n    next(it)\n  File \"D:\\PycharmProjects\\APS\\Tests\\test_items\\test_login.py\", line 23, in login_pa\n    safe_quit(driver)\n  File \"D:\\PycharmProjects\\APS\\Utils\\driver_manager.py\", line 49, in safe_quit\n    driver.quit()  # 尝试正常关闭浏览器\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py\", line 224, in quit\n    self.service.stop()\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py\", line 150, in stop\n    self.send_remote_shutdown_command()\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py\", line 135, in send_remote_shutdown_command\n    if not self.is_connectable():\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\selenium\\webdriver\\common\\service.py\", line 124, in is_connectable\n    return utils.is_connectable(self.port)\n  File \"D:\\PycharmProjects\\APS\\myenv\\lib\\site-packages\\selenium\\webdriver\\common\\utils.py\", line 98, in is_connectable\n    socket_ = socket.create_connection((host, port), 1)\n  File \"D:\\Program Files\\Python310\\lib\\socket.py\", line 833, in create_connection\n    sock.connect(sa)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"feature","value":"登录页面测试用例"},{"name":"story","value":"登录成功"},{"name":"parentSuite","value":"Tests.test_items"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLoginPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"33540-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_items.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"37b1856caaa06f42.json","parameterValues":[]}