{"uid":"1f0507b6520d8d36","name":"test_imp_update","fullName":"Tests.test_system.test_imp.TestImpPage#test_imp_update","historyId":"6c925cfdaf73b2b37df6c7fddf34649b","time":{"start":1761073803372,"stop":1761073824053,"duration":20681},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[@class=\"d-alIt-ba cursor-pointer m-l-22 col-black font14\"]//span[text()=\" 执行方案\"]","statusTrace":"self = <Pages.systemPage.imp_page.ImpPage object at 0x00000173A6D23D30>, by_or_element = 'xpath', value = '//div[@class=\"d-alIt-ba cursor-pointer m-l-22 col-black font14\"]//span[text()=\" 执行方案\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"183df2973d5955dcc82a23992b201d03\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000173A88BD480>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196602ea]\nE       \t(No symbol) [0x0x7ff71966059c]\nE       \t(No symbol) [0x0x7ff7196b3f37]\nE       \t(No symbol) [0x0x7ff7196886af]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_imp.TestImpPage object at 0x00000173A686F4C0>, login_to_imp = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"183df2973d5955dcc82a23992b201d03\")>\n\n    @allure.story(\"编辑方案成功，取消勾选客户，勾选工序成功。右键映射点击确定不报错，点击方案不报错\")\n    # @pytest.mark.run(order=1)\n    def test_imp_update(self, login_to_imp):\n        driver = login_to_imp  # WebDriver 实例\n        imp = ImpPage(driver)  # 用 driver 初始化 ImpPage\n        name = \"1导入设置方案\"\n        kh = \"客户\"\n        gx = \"工序\"\n        imp.click_button(\n            '//div[@class=\"flex-alignItems-center background-ffffff h-36px w-b-100 m-l-12 toolbar-container\"]//input[@class=\"ivu-select-input\"]')\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, f'//ul/li[text()=\"{name}\"]'))).click()\n        imp.click_button('//ul[@class=\"ivu-tree-children\"]//span[text()=\"导入\"]')\n        imp.click_impall_button(\"编辑\")\n        sleep(1)\n        imp.click_button(f'//ul[@class=\"ivu-tree-children\"]//span[text()=\"{kh}\"]/ancestor::ul[1]//label/span')\n        imp.click_button(f'//ul[@class=\"ivu-tree-children\"]//span[text()=\"{gx}\"]/ancestor::ul[1]//label/span')\n        ele = imp.get_find_element_xpath(f'//ul[@class=\"ivu-tree-children\"]//span[text()=\"{gx}\"]')\n        ActionChains(driver).context_click(ele).perform()\n        imp.click_button('//li[text()=\"映射编辑\"]')\n        sleep(1)\n        imp.click_button(\n            '//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        imp.click_impall_button(\"保存\")\n        message = imp.get_find_message()\n>       imp.click_button('//div[@class=\"d-alIt-ba cursor-pointer m-l-22 col-black font14\"]//span[text()=\" 执行方案\"]')\n\nTests\\test_system\\test_imp.py:191: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\imp_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.imp_page.ImpPage object at 0x00000173A6D23D30>, by_or_element = 'xpath', value = '//div[@class=\"d-alIt-ba cursor-pointer m-l-22 col-black font14\"]//span[text()=\" 执行方案\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[@class=\"d-alIt-ba cursor-pointer m-l-22 col-black font14\"]//span[text()=\" 执行方案\"]\n\nPages\\base_page.py:50: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_imp","time":{"start":1761073787431,"stop":1761073803369,"duration":15938},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[@class=\"d-alIt-ba cursor-pointer m-l-22 col-black font14\"]//span[text()=\" 执行方案\"]","statusTrace":"self = <Pages.systemPage.imp_page.ImpPage object at 0x00000173A6D23D30>, by_or_element = 'xpath', value = '//div[@class=\"d-alIt-ba cursor-pointer m-l-22 col-black font14\"]//span[text()=\" 执行方案\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"183df2973d5955dcc82a23992b201d03\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000173A88BD480>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff719876f65+78965]\nE       \tGetHandleVerifier [0x0x7ff719876fc0+79056]\nE       \t(No symbol) [0x0x7ff719609dda]\nE       \t(No symbol) [0x0x7ff7196602ea]\nE       \t(No symbol) [0x0x7ff71966059c]\nE       \t(No symbol) [0x0x7ff7196b3f37]\nE       \t(No symbol) [0x0x7ff7196886af]\nE       \t(No symbol) [0x0x7ff7196b0dbe]\nE       \t(No symbol) [0x0x7ff719688443]\nE       \t(No symbol) [0x0x7ff719651311]\nE       \t(No symbol) [0x0x7ff7196520a3]\nE       \tGetHandleVerifier [0x0x7ff719b2e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff719b28993+2903715]\nE       \tGetHandleVerifier [0x0x7ff719b46aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff7198916fe+187406]\nE       \tGetHandleVerifier [0x0x7ff7198996ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71987faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71987fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff7198664d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffee1537374+20]\nE       \tRtlUserThreadStart [0x0x7ffee1a7cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_system.test_imp.TestImpPage object at 0x00000173A686F4C0>, login_to_imp = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"183df2973d5955dcc82a23992b201d03\")>\n\n    @allure.story(\"编辑方案成功，取消勾选客户，勾选工序成功。右键映射点击确定不报错，点击方案不报错\")\n    # @pytest.mark.run(order=1)\n    def test_imp_update(self, login_to_imp):\n        driver = login_to_imp  # WebDriver 实例\n        imp = ImpPage(driver)  # 用 driver 初始化 ImpPage\n        name = \"1导入设置方案\"\n        kh = \"客户\"\n        gx = \"工序\"\n        imp.click_button(\n            '//div[@class=\"flex-alignItems-center background-ffffff h-36px w-b-100 m-l-12 toolbar-container\"]//input[@class=\"ivu-select-input\"]')\n        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, f'//ul/li[text()=\"{name}\"]'))).click()\n        imp.click_button('//ul[@class=\"ivu-tree-children\"]//span[text()=\"导入\"]')\n        imp.click_impall_button(\"编辑\")\n        sleep(1)\n        imp.click_button(f'//ul[@class=\"ivu-tree-children\"]//span[text()=\"{kh}\"]/ancestor::ul[1]//label/span')\n        imp.click_button(f'//ul[@class=\"ivu-tree-children\"]//span[text()=\"{gx}\"]/ancestor::ul[1]//label/span')\n        ele = imp.get_find_element_xpath(f'//ul[@class=\"ivu-tree-children\"]//span[text()=\"{gx}\"]')\n        ActionChains(driver).context_click(ele).perform()\n        imp.click_button('//li[text()=\"映射编辑\"]')\n        sleep(1)\n        imp.click_button(\n            '//div[@class=\"h-40px flex-justify-end flex-align-items-end b-t-s-d9e3f3\"]//span[text()=\"确定\"]')\n        imp.click_impall_button(\"保存\")\n        message = imp.get_find_message()\n>       imp.click_button('//div[@class=\"d-alIt-ba cursor-pointer m-l-22 col-black font14\"]//span[text()=\" 执行方案\"]')\n\nTests\\test_system\\test_imp.py:191: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\systemPage\\imp_page.py:23: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.systemPage.imp_page.ImpPage object at 0x00000173A6D23D30>, by_or_element = 'xpath', value = '//div[@class=\"d-alIt-ba cursor-pointer m-l-22 col-black font14\"]//span[text()=\" 执行方案\"]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //div[@class=\"d-alIt-ba cursor-pointer m-l-22 col-black font14\"]//span[text()=\" 执行方案\"]\n\nPages\\base_page.py:50: TimeoutException","steps":[],"attachments":[{"uid":"fcb4d7916f6c3247","name":"test_imp_update_failure","source":"fcb4d7916f6c3247.png","type":"image/png","size":59444},{"uid":"f4782c47898ab919","name":"test_imp_update_source","source":"f4782c47898ab919.html","type":"text/html","size":1113068},{"uid":"18db026f479bb8ee","name":"log","source":"18db026f479bb8ee.txt","type":"text/plain","size":2660}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_imp::0","time":{"start":1761073824693,"stop":1761073827145,"duration":2452},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"编辑方案成功，取消勾选客户，勾选工序成功。右键映射点击确定不报错，点击方案不报错"},{"name":"feature","value":"导入设置页用例"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_imp"},{"name":"subSuite","value":"TestImpPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"14388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_imp"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"1f0507b6520d8d36.json","parameterValues":[]}