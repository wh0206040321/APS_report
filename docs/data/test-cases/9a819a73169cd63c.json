{"uid":"9a819a73169cd63c","name":"test_affairs_process_addfail5","fullName":"Tests.test_system.test_affairs.TestAffairsPage#test_affairs_process_addfail5","historyId":"408f8e50b5b850a44a4a63e44520c717","time":{"start":1754936056654,"stop":1754936063413,"duration":6759},"status":"failed","statusMessage":"AssertionError: assert (0 == 1)\n +  where 0 = len([])","statusTrace":"self = <test_system.test_affairs.TestAffairsPage object at 0x000001C1DEB5C100>\nlogin_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"580c78a590a020192dc2ca7cca0c2466\")>\n\n    @allure.story(\"我的流程-频率为每天，不填写间隔执行，不允许保存\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_process_addfail5(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        affairs.click_process()\n        affairs.add_process(name=\"测试流程1\", type=\"服务\", frequency=\"每天\")\n        affairs.click_save()\n        eles = affairs.finds_elements(By.XPATH, '//div[@class=\"el-form-item__error\"]')\n        list_ = [ele.text for ele in eles]\n>       assert len(list_) == 1 and list_ == ['请填写间隔执行']\nE       assert (0 == 1)\nE        +  where 0 = len([])\n\nTests\\test_system\\test_affairs.py:567: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_affairs","time":{"start":1754936048248,"stop":1754936056653,"duration":8405},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (0 == 1)\n +  where 0 = len([])","statusTrace":"self = <test_system.test_affairs.TestAffairsPage object at 0x000001C1DEB5C100>\nlogin_to_affairs = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"580c78a590a020192dc2ca7cca0c2466\")>\n\n    @allure.story(\"我的流程-频率为每天，不填写间隔执行，不允许保存\")\n    # @pytest.mark.run(order=1)\n    def test_affairs_process_addfail5(self, login_to_affairs):\n        driver = login_to_affairs  # WebDriver 实例\n        affairs = AffairsPage(driver)  # 用 driver 初始化 AffairsPage\n        affairs.click_process()\n        affairs.add_process(name=\"测试流程1\", type=\"服务\", frequency=\"每天\")\n        affairs.click_save()\n        eles = affairs.finds_elements(By.XPATH, '//div[@class=\"el-form-item__error\"]')\n        list_ = [ele.text for ele in eles]\n>       assert len(list_) == 1 and list_ == ['请填写间隔执行']\nE       assert (0 == 1)\nE        +  where 0 = len([])\n\nTests\\test_system\\test_affairs.py:567: AssertionError","steps":[],"attachments":[{"uid":"678fe993819e36b6","name":"test_affairs_process_addfail5_failure","source":"678fe993819e36b6.png","type":"image/png","size":160259},{"uid":"6f83211e6088906c","name":"test_affairs_process_addfail5_source","source":"6f83211e6088906c.html","type":"text/html","size":1155263},{"uid":"44539e21f81661b6","name":"log","source":"44539e21f81661b6.txt","type":"text/plain","size":4205}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":3,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"login_to_affairs::0","time":{"start":1754936063576,"stop":1754936065745,"duration":2169},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"事务管理页用例"},{"name":"story","value":"我的流程-频率为每天，不填写间隔执行，不允许保存"},{"name":"parentSuite","value":"Tests.test_system"},{"name":"suite","value":"test_affairs"},{"name":"subSuite","value":"TestAffairsPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"24412-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_system.test_affairs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6fec9e332f4def1e","status":"failed","statusDetails":"AssertionError: assert (0 == 1)\n +  where 0 = len([])","time":{"start":1754936038735,"stop":1754936045912,"duration":7177}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"9a819a73169cd63c.json","parameterValues":[]}