{"uid":"e44cb6beab60ffcc","name":"test_coverage_addnum","fullName":"Tests.test_item.test_coverage.TestCoveragePage#test_coverage_addnum","historyId":"51dfd00cde387159fbb940b9cda6ffc5","time":{"start":1752669682581,"stop":1752669685028,"duration":2447},"status":"failed","statusMessage":"AssertionError: 预期\nassert '' == '1138'\n  \n  \u001B[0m\u001B[91m- 1138\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_item.test_coverage.TestCoveragePage object at 0x000001B950DA99C0>\nlogin_to_coverage = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"df0b58b4225a19828ca7ddb2d4608af3\")>\n\n    @allure.story(\"数字文本框 只允许填写数字\")\n    # @pytest.mark.run(order=1)\n    def test_coverage_addnum(self, login_to_coverage):\n        driver = login_to_coverage  # WebDriver 实例\n        coverage = Coverage(driver)  # 用 driver 初始化 Coverage\n    \n        coverage.click_add_button()  # 检查点击添加\n        # 输入文本\n        coverage.enter_texts(\n            '//div[@id=\"k0z05daz-8tok\"]//input',\n            \"1文字abc。？~1++3.,/=8\",\n        )\n        sleep(1)\n        # 获取表示顺序数字框\n        coveragenum = coverage.get_find_element_xpath(\n            '//div[@id=\"k0z05daz-8tok\"]//input'\n        ).get_attribute(\"value\")\n>       assert coveragenum == \"1138\", f\"预期{coveragenum}\"\nE       AssertionError: 预期\nE       assert '' == '1138'\nE         \nE         \u001B[0m\u001B[91m- 1138\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_item\\test_coverage.py:145: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_coverage","time":{"start":1752669673341,"stop":1752669682580,"duration":9239},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 预期\nassert '' == '1138'\n  \n  \u001B[0m\u001B[91m- 1138\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <test_item.test_coverage.TestCoveragePage object at 0x000001B950DA99C0>\nlogin_to_coverage = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"df0b58b4225a19828ca7ddb2d4608af3\")>\n\n    @allure.story(\"数字文本框 只允许填写数字\")\n    # @pytest.mark.run(order=1)\n    def test_coverage_addnum(self, login_to_coverage):\n        driver = login_to_coverage  # WebDriver 实例\n        coverage = Coverage(driver)  # 用 driver 初始化 Coverage\n    \n        coverage.click_add_button()  # 检查点击添加\n        # 输入文本\n        coverage.enter_texts(\n            '//div[@id=\"k0z05daz-8tok\"]//input',\n            \"1文字abc。？~1++3.,/=8\",\n        )\n        sleep(1)\n        # 获取表示顺序数字框\n        coveragenum = coverage.get_find_element_xpath(\n            '//div[@id=\"k0z05daz-8tok\"]//input'\n        ).get_attribute(\"value\")\n>       assert coveragenum == \"1138\", f\"预期{coveragenum}\"\nE       AssertionError: 预期\nE       assert '' == '1138'\nE         \nE         \u001B[0m\u001B[91m- 1138\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nTests\\test_item\\test_coverage.py:145: AssertionError","steps":[],"attachments":[{"uid":"4c36a13c8a8779f3","name":"test_coverage_addnum_failure","source":"4c36a13c8a8779f3.png","type":"image/png","size":89292},{"uid":"d0dbbfec7ca777ad","name":"test_coverage_addnum_source","source":"d0dbbfec7ca777ad.html","type":"text/html","size":1238778},{"uid":"3b6cfd519cf0e32b","name":"log","source":"3b6cfd519cf0e32b.txt","type":"text/plain","size":974}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_coverage::0","time":{"start":1752669685192,"stop":1752669687316,"duration":2124},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"数字文本框 只允许填写数字"},{"name":"feature","value":"覆盖日历表测试用例"},{"name":"parentSuite","value":"Tests.test_item"},{"name":"suite","value":"test_coverage"},{"name":"subSuite","value":"TestCoveragePage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"30052-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_item.test_coverage"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e44cb6beab60ffcc.json","parameterValues":[]}