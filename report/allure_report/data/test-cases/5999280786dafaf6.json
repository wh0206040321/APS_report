{"uid":"5999280786dafaf6","name":"test_setting_layoutlist_deletesuccess","fullName":"Tests.test_item.test_setting.TestSettingPage#test_setting_layoutlist_deletesuccess","historyId":"a8cedfcac6641e3d93058b991c60e10d","time":{"start":1752735814081,"stop":1752735825411,"duration":11330},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff636af6f65+78965]\n\tGetHandleVerifier [0x0x7ff636af6fc0+79056]\n\t(No symbol) [0x0x7ff636889dda]\n\t(No symbol) [0x0x7ff6368e02ea]\n\t(No symbol) [0x0x7ff6368e059c]\n\t(No symbol) [0x0x7ff636933f37]\n\t(No symbol) [0x0x7ff6369086af]\n\t(No symbol) [0x0x7ff636930dbe]\n\t(No symbol) [0x0x7ff636908443]\n\t(No symbol) [0x0x7ff6368d1311]\n\t(No symbol) [0x0x7ff6368d20a3]\n\tGetHandleVerifier [0x0x7ff636dae26d+2926461]\n\tGetHandleVerifier [0x0x7ff636da8993+2903715]\n\tGetHandleVerifier [0x0x7ff636dc6aed+3026941]\n\tGetHandleVerifier [0x0x7ff636b116fe+187406]\n\tGetHandleVerifier [0x0x7ff636b196ef+220159]\n\tGetHandleVerifier [0x0x7ff636affaf4+114692]\n\tGetHandleVerifier [0x0x7ff636affca9+115129]\n\tGetHandleVerifier [0x0x7ff636ae64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\n\tRtlUserThreadStart [0x0x7ffcb055cc91+33]","statusTrace":"self = <test_item.test_setting.TestSettingPage object at 0x0000025311D30550>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e9c356dc529697e5f5bedb0432aa00d8\")>\n\n    @allure.story(\"布局删除成功\")\n    # @pytest.mark.run(order=1)\n    def test_setting_layoutlist_deletesuccess(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"修改布局\"\n        sleep(1)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n>       target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n\nTests\\test_item\\test_setting.py:2276: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\setting_page.py:27: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:24: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e9c356dc529697e5f5bedb0432aa00d8\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000025311CF5120>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff636af6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff636af6fc0+79056]\nE       \t(No symbol) [0x0x7ff636889dda]\nE       \t(No symbol) [0x0x7ff6368e02ea]\nE       \t(No symbol) [0x0x7ff6368e059c]\nE       \t(No symbol) [0x0x7ff636933f37]\nE       \t(No symbol) [0x0x7ff6369086af]\nE       \t(No symbol) [0x0x7ff636930dbe]\nE       \t(No symbol) [0x0x7ff636908443]\nE       \t(No symbol) [0x0x7ff6368d1311]\nE       \t(No symbol) [0x0x7ff6368d20a3]\nE       \tGetHandleVerifier [0x0x7ff636dae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff636da8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff636dc6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff636b116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff636b196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff636affaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff636affca9+115129]\nE       \tGetHandleVerifier [0x0x7ff636ae64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffcb055cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_setting","time":{"start":1752735805862,"stop":1752735814081,"duration":8219},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff636af6f65+78965]\n\tGetHandleVerifier [0x0x7ff636af6fc0+79056]\n\t(No symbol) [0x0x7ff636889dda]\n\t(No symbol) [0x0x7ff6368e02ea]\n\t(No symbol) [0x0x7ff6368e059c]\n\t(No symbol) [0x0x7ff636933f37]\n\t(No symbol) [0x0x7ff6369086af]\n\t(No symbol) [0x0x7ff636930dbe]\n\t(No symbol) [0x0x7ff636908443]\n\t(No symbol) [0x0x7ff6368d1311]\n\t(No symbol) [0x0x7ff6368d20a3]\n\tGetHandleVerifier [0x0x7ff636dae26d+2926461]\n\tGetHandleVerifier [0x0x7ff636da8993+2903715]\n\tGetHandleVerifier [0x0x7ff636dc6aed+3026941]\n\tGetHandleVerifier [0x0x7ff636b116fe+187406]\n\tGetHandleVerifier [0x0x7ff636b196ef+220159]\n\tGetHandleVerifier [0x0x7ff636affaf4+114692]\n\tGetHandleVerifier [0x0x7ff636affca9+115129]\n\tGetHandleVerifier [0x0x7ff636ae64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\n\tRtlUserThreadStart [0x0x7ffcb055cc91+33]","statusTrace":"self = <test_item.test_setting.TestSettingPage object at 0x0000025311D30550>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e9c356dc529697e5f5bedb0432aa00d8\")>\n\n    @allure.story(\"布局删除成功\")\n    # @pytest.mark.run(order=1)\n    def test_setting_layoutlist_deletesuccess(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"修改布局\"\n        sleep(1)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n>       target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n\nTests\\test_item\\test_setting.py:2276: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\setting_page.py:27: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:24: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e9c356dc529697e5f5bedb0432aa00d8\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000025311CF5120>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff636af6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff636af6fc0+79056]\nE       \t(No symbol) [0x0x7ff636889dda]\nE       \t(No symbol) [0x0x7ff6368e02ea]\nE       \t(No symbol) [0x0x7ff6368e059c]\nE       \t(No symbol) [0x0x7ff636933f37]\nE       \t(No symbol) [0x0x7ff6369086af]\nE       \t(No symbol) [0x0x7ff636930dbe]\nE       \t(No symbol) [0x0x7ff636908443]\nE       \t(No symbol) [0x0x7ff6368d1311]\nE       \t(No symbol) [0x0x7ff6368d20a3]\nE       \tGetHandleVerifier [0x0x7ff636dae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff636da8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff636dc6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff636b116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff636b196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff636affaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff636affca9+115129]\nE       \tGetHandleVerifier [0x0x7ff636ae64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffcb055cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"b0b6edce29ca0efc","name":"test_find_element_timeout","source":"b0b6edce29ca0efc.png","type":"image/png","size":116978},{"uid":"492e0226e1730870","name":"log","source":"492e0226e1730870.txt","type":"text/plain","size":1293}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_setting::0","time":{"start":1752735825462,"stop":1752735827591,"duration":2129},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"标准应用设置测试用例"},{"name":"story","value":"布局删除成功"},{"name":"parentSuite","value":"Tests.test_item"},{"name":"suite","value":"test_setting"},{"name":"subSuite","value":"TestSettingPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"21188-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_item.test_setting"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c5ff17f24c468a23","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff71ab56f65+78965]\n\tGetHandleVerifier [0x0x7ff71ab56fc0+79056]\n\t(No symbol) [0x0x7ff71a8e9dda]\n\t(No symbol) [0x0x7ff71a9402ea]\n\t(No symbol) [0x0x7ff71a94059c]\n\t(No symbol) [0x0x7ff71a993f37]\n\t(No symbol) [0x0x7ff71a9686af]\n\t(No symbol) [0x0x7ff71a990dbe]\n\t(No symbol) [0x0x7ff71a968443]\n\t(No symbol) [0x0x7ff71a931311]\n\t(No symbol) [0x0x7ff71a9320a3]\n\tGetHandleVerifier [0x0x7ff71ae0e26d+2926461]\n\tGetHandleVerifier [0x0x7ff71ae08993+2903715]\n\tGetHandleVerifier [0x0x7ff71ae26aed+3026941]\n\tGetHandleVerifier [0x0x7ff71ab716fe+187406]\n\tGetHandleVerifier [0x0x7ff71ab796ef+220159]\n\tGetHandleVerifier [0x0x7ff71ab5faf4+114692]\n\tGetHandleVerifier [0x0x7ff71ab5fca9+115129]\n\tGetHandleVerifier [0x0x7ff71ab464d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\n\tRtlUserThreadStart [0x0x7ffcb055cc91+33]","time":{"start":1752675416760,"stop":1752675428112,"duration":11352}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"5999280786dafaf6.json","parameterValues":[]}