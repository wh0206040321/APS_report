{"uid":"8bbb58550620772f","name":"test_personal_expand1","fullName":"Tests.test_item.test_personal.TestPersonalPage#test_personal_expand1","historyId":"05bebf5c588b4a779854f80f77f98543","time":{"start":1752675925491,"stop":1752675928545,"duration":3054},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//ul[@role=\"menubar\"]\"}\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff71ab56f65+78965]\n\tGetHandleVerifier [0x0x7ff71ab56fc0+79056]\n\t(No symbol) [0x0x7ff71a8e9dda]\n\t(No symbol) [0x0x7ff71a9402ea]\n\t(No symbol) [0x0x7ff71a94059c]\n\t(No symbol) [0x0x7ff71a993f37]\n\t(No symbol) [0x0x7ff71a9686af]\n\t(No symbol) [0x0x7ff71a990dbe]\n\t(No symbol) [0x0x7ff71a968443]\n\t(No symbol) [0x0x7ff71a931311]\n\t(No symbol) [0x0x7ff71a9320a3]\n\tGetHandleVerifier [0x0x7ff71ae0e26d+2926461]\n\tGetHandleVerifier [0x0x7ff71ae08993+2903715]\n\tGetHandleVerifier [0x0x7ff71ae26aed+3026941]\n\tGetHandleVerifier [0x0x7ff71ab716fe+187406]\n\tGetHandleVerifier [0x0x7ff71ab796ef+220159]\n\tGetHandleVerifier [0x0x7ff71ab5faf4+114692]\n\tGetHandleVerifier [0x0x7ff71ab5fca9+115129]\n\tGetHandleVerifier [0x0x7ff71ab464d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\n\tRtlUserThreadStart [0x0x7ffcb055cc91+33]","statusTrace":"self = <test_item.test_personal.TestPersonalPage object at 0x000001B950DC6C50>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3eaef5eef4ffa6d7dc0b1b118b5006dd\")>\n\n    @allure.story(\"设置菜单展开方式为悬浮\")\n    # @pytest.mark.run(order=1)\n    def test_personal_expand1(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        # 获取设置前宽度\n>       before_width = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]').size['width']\n\nTests\\test_item\\test_personal.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B953051030>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff71ab464d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffcb055cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//ul[@role=\"menubar\"]\"}\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff71ab56f65+78965]\nE       \tGetHandleVerifier [0x0x7ff71ab56fc0+79056]\nE       \t(No symbol) [0x0x7ff71a8e9dda]\nE       \t(No symbol) [0x0x7ff71a9402ea]\nE       \t(No symbol) [0x0x7ff71a94059c]\nE       \t(No symbol) [0x0x7ff71a993f37]\nE       \t(No symbol) [0x0x7ff71a9686af]\nE       \t(No symbol) [0x0x7ff71a990dbe]\nE       \t(No symbol) [0x0x7ff71a968443]\nE       \t(No symbol) [0x0x7ff71a931311]\nE       \t(No symbol) [0x0x7ff71a9320a3]\nE       \tGetHandleVerifier [0x0x7ff71ae0e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff71ae08993+2903715]\nE       \tGetHandleVerifier [0x0x7ff71ae26aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff71ab716fe+187406]\nE       \tGetHandleVerifier [0x0x7ff71ab796ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71ab5faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71ab5fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff71ab464d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffcb055cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_to_personal","time":{"start":1752675919162,"stop":1752675925490,"duration":6328},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//ul[@role=\"menubar\"]\"}\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff71ab56f65+78965]\n\tGetHandleVerifier [0x0x7ff71ab56fc0+79056]\n\t(No symbol) [0x0x7ff71a8e9dda]\n\t(No symbol) [0x0x7ff71a9402ea]\n\t(No symbol) [0x0x7ff71a94059c]\n\t(No symbol) [0x0x7ff71a993f37]\n\t(No symbol) [0x0x7ff71a9686af]\n\t(No symbol) [0x0x7ff71a990dbe]\n\t(No symbol) [0x0x7ff71a968443]\n\t(No symbol) [0x0x7ff71a931311]\n\t(No symbol) [0x0x7ff71a9320a3]\n\tGetHandleVerifier [0x0x7ff71ae0e26d+2926461]\n\tGetHandleVerifier [0x0x7ff71ae08993+2903715]\n\tGetHandleVerifier [0x0x7ff71ae26aed+3026941]\n\tGetHandleVerifier [0x0x7ff71ab716fe+187406]\n\tGetHandleVerifier [0x0x7ff71ab796ef+220159]\n\tGetHandleVerifier [0x0x7ff71ab5faf4+114692]\n\tGetHandleVerifier [0x0x7ff71ab5fca9+115129]\n\tGetHandleVerifier [0x0x7ff71ab464d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\n\tRtlUserThreadStart [0x0x7ffcb055cc91+33]","statusTrace":"self = <test_item.test_personal.TestPersonalPage object at 0x000001B950DC6C50>\nlogin_to_personal = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3eaef5eef4ffa6d7dc0b1b118b5006dd\")>\n\n    @allure.story(\"设置菜单展开方式为悬浮\")\n    # @pytest.mark.run(order=1)\n    def test_personal_expand1(self, login_to_personal):\n        driver = login_to_personal  # WebDriver 实例\n        personal = PersonalPage(driver)  # 用 driver 初始化 PersonalPage\n        # 获取设置前宽度\n>       before_width = driver.find_element(By.XPATH, '//ul[@role=\"menubar\"]').size['width']\n\nTests\\test_item\\test_personal.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B953051030>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff71ab464d8+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffcb055cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//ul[@role=\"menubar\"]\"}\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff71ab56f65+78965]\nE       \tGetHandleVerifier [0x0x7ff71ab56fc0+79056]\nE       \t(No symbol) [0x0x7ff71a8e9dda]\nE       \t(No symbol) [0x0x7ff71a9402ea]\nE       \t(No symbol) [0x0x7ff71a94059c]\nE       \t(No symbol) [0x0x7ff71a993f37]\nE       \t(No symbol) [0x0x7ff71a9686af]\nE       \t(No symbol) [0x0x7ff71a990dbe]\nE       \t(No symbol) [0x0x7ff71a968443]\nE       \t(No symbol) [0x0x7ff71a931311]\nE       \t(No symbol) [0x0x7ff71a9320a3]\nE       \tGetHandleVerifier [0x0x7ff71ae0e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff71ae08993+2903715]\nE       \tGetHandleVerifier [0x0x7ff71ae26aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff71ab716fe+187406]\nE       \tGetHandleVerifier [0x0x7ff71ab796ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71ab5faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71ab5fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff71ab464d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffcb055cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException","steps":[],"attachments":[{"uid":"7522e5686301a436","name":"test_personal_expand1_failure","source":"7522e5686301a436.png","type":"image/png","size":197249},{"uid":"4e2b0a1c071e7996","name":"test_personal_expand1_source","source":"4e2b0a1c071e7996.html","type":"text/html","size":846826},{"uid":"a30c2a59a07fe21f","name":"log","source":"a30c2a59a07fe21f.txt","type":"text/plain","size":450}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"login_to_personal::0","time":{"start":1752675928843,"stop":1752675930998,"duration":2155},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"个人设置测试用例"},{"name":"story","value":"设置菜单展开方式为悬浮"},{"name":"parentSuite","value":"Tests.test_item"},{"name":"suite","value":"test_personal"},{"name":"subSuite","value":"TestPersonalPage"},{"name":"host","value":"WIN-20240820MJV"},{"name":"thread","value":"30052-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_item.test_personal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"8bbb58550620772f.json","parameterValues":[]}