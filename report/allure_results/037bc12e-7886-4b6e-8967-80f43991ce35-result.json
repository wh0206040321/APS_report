{"name": "test_setting_layout_deletefail", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff636af6f65+78965]\n\tGetHandleVerifier [0x0x7ff636af6fc0+79056]\n\t(No symbol) [0x0x7ff636889dda]\n\t(No symbol) [0x0x7ff6368e02ea]\n\t(No symbol) [0x0x7ff6368e059c]\n\t(No symbol) [0x0x7ff636933f37]\n\t(No symbol) [0x0x7ff6369086af]\n\t(No symbol) [0x0x7ff636930dbe]\n\t(No symbol) [0x0x7ff636908443]\n\t(No symbol) [0x0x7ff6368d1311]\n\t(No symbol) [0x0x7ff6368d20a3]\n\tGetHandleVerifier [0x0x7ff636dae26d+2926461]\n\tGetHandleVerifier [0x0x7ff636da8993+2903715]\n\tGetHandleVerifier [0x0x7ff636dc6aed+3026941]\n\tGetHandleVerifier [0x0x7ff636b116fe+187406]\n\tGetHandleVerifier [0x0x7ff636b196ef+220159]\n\tGetHandleVerifier [0x0x7ff636affaf4+114692]\n\tGetHandleVerifier [0x0x7ff636affca9+115129]\n\tGetHandleVerifier [0x0x7ff636ae64d8+10728]\n\tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\n\tRtlUserThreadStart [0x0x7ffcb055cc91+33]", "trace": "self = <test_item.test_setting.TestSettingPage object at 0x0000025311D17AF0>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cab5606cb1dd5f94437cb96efba10032\")>\n\n    @allure.story(\"默认布局不允许删除\")\n    # @pytest.mark.run(order=1)\n    def test_setting_layout_deletefail(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"默认\"\n        sleep(1)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n        # 获取目标 div 元素，这里的目标是具有特定文本的 div\n>       target_div = setting.get_find_element_xpath(\n            f'//div[@id=\"container\"]/div[.//text()=\"{layout}\"]'\n        )\n\nTests\\test_item\\test_setting.py:2323: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\setting_page.py:27: in get_find_element_xpath\n    return self.find_element(By.XPATH, xpath)\nPages\\base_page.py:24: in find_element\n    return WebDriverWait(self.driver, wait_time).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cab5606cb1dd5f94437cb96efba10032\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x0000025311EE7520>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff636af6f65+78965]\nE       \tGetHandleVerifier [0x0x7ff636af6fc0+79056]\nE       \t(No symbol) [0x0x7ff636889dda]\nE       \t(No symbol) [0x0x7ff6368e02ea]\nE       \t(No symbol) [0x0x7ff6368e059c]\nE       \t(No symbol) [0x0x7ff636933f37]\nE       \t(No symbol) [0x0x7ff6369086af]\nE       \t(No symbol) [0x0x7ff636930dbe]\nE       \t(No symbol) [0x0x7ff636908443]\nE       \t(No symbol) [0x0x7ff6368d1311]\nE       \t(No symbol) [0x0x7ff6368d20a3]\nE       \tGetHandleVerifier [0x0x7ff636dae26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff636da8993+2903715]\nE       \tGetHandleVerifier [0x0x7ff636dc6aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff636b116fe+187406]\nE       \tGetHandleVerifier [0x0x7ff636b196ef+220159]\nE       \tGetHandleVerifier [0x0x7ff636affaf4+114692]\nE       \tGetHandleVerifier [0x0x7ff636affca9+115129]\nE       \tGetHandleVerifier [0x0x7ff636ae64d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffcb055cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "test_find_element_timeout", "source": "c73673c2-d2d8-40f1-a0f4-24b01e9f15d9-attachment.png", "type": "image/png"}, {"name": "log", "source": "6820f49d-c4fd-41f0-8c85-6e622a16809a-attachment.txt", "type": "text/plain"}], "start": 1752735838005, "stop": 1752735849284, "uuid": "3205754d-4ba1-4c6b-9868-a2d7c9843d9f", "historyId": "4debfcc61063566d007a3ed9230aa178", "testCaseId": "4debfcc61063566d007a3ed9230aa178", "fullName": "Tests.test_item.test_setting.TestSettingPage#test_setting_layout_deletefail", "labels": [{"name": "feature", "value": "标准应用设置测试用例"}, {"name": "story", "value": "默认布局不允许删除"}, {"name": "parentSuite", "value": "Tests.test_item"}, {"name": "suite", "value": "test_setting"}, {"name": "subSuite", "value": "TestSettingPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "21188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_item.test_setting"}]}