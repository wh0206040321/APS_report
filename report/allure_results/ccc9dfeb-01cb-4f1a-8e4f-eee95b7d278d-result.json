{"name": "test_setting_layoutlist_defaultfail", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //span[./span[text()=\"默认\"]]/following-sibling::i[2]", "trace": "self = <Pages.setting_page.SettingPage object at 0x000001B951CA1FF0>, by_or_element = 'xpath', value = '//span[./span[text()=\"默认\"]]/following-sibling::i[2]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n>               element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n\nPages\\base_page.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bd7846d9ab646277d6ccf9882eb4d9a2\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001B950BECEE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff71ab56f65+78965]\nE       \tGetHandleVerifier [0x0x7ff71ab56fc0+79056]\nE       \t(No symbol) [0x0x7ff71a8e9dda]\nE       \t(No symbol) [0x0x7ff71a9402ea]\nE       \t(No symbol) [0x0x7ff71a94059c]\nE       \t(No symbol) [0x0x7ff71a993f37]\nE       \t(No symbol) [0x0x7ff71a9686af]\nE       \t(No symbol) [0x0x7ff71a990dbe]\nE       \t(No symbol) [0x0x7ff71a968443]\nE       \t(No symbol) [0x0x7ff71a931311]\nE       \t(No symbol) [0x0x7ff71a9320a3]\nE       \tGetHandleVerifier [0x0x7ff71ae0e26d+2926461]\nE       \tGetHandleVerifier [0x0x7ff71ae08993+2903715]\nE       \tGetHandleVerifier [0x0x7ff71ae26aed+3026941]\nE       \tGetHandleVerifier [0x0x7ff71ab716fe+187406]\nE       \tGetHandleVerifier [0x0x7ff71ab796ef+220159]\nE       \tGetHandleVerifier [0x0x7ff71ab5faf4+114692]\nE       \tGetHandleVerifier [0x0x7ff71ab5fca9+115129]\nE       \tGetHandleVerifier [0x0x7ff71ab464d8+10728]\nE       \tBaseThreadInitThunk [0x0x7ffcaf5c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffcb055cc91+33]\n\nmyenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_item.test_setting.TestSettingPage object at 0x000001B950E55180>\nlogin_to_setting = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bd7846d9ab646277d6ccf9882eb4d9a2\")>\n\n    @allure.story(\"默认布局不允许修改\")\n    # @pytest.mark.run(order=1)\n    def test_setting_layoutlist_defaultfail(self, login_to_setting):\n        driver = login_to_setting  # WebDriver 实例\n        setting = SettingPage(driver)  # 用 driver 初始化 SettingPage\n        layout = \"默认\"\n        sleep(2)\n        setting.click_button('//i[@id=\"tabsDrawerIcon\"]')\n        sleep(1)\n>       setting.click_button(f'//span[./span[text()=\"{layout}\"]]/following-sibling::i[2]')\n\nTests\\test_item\\test_setting.py:2234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\setting_page.py:22: in click_button\n    self.click(By.XPATH, xpath)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages.setting_page.SettingPage object at 0x000001B951CA1FF0>, by_or_element = 'xpath', value = '//span[./span[text()=\"默认\"]]/following-sibling::i[2]', wait_time = 10\n\n    def click(self, by_or_element, value=None, wait_time=10):\n        if value is not None:\n            by = by_or_element\n            logging.info(f\"点击元素：By = {by}, Value = {value}\")\n            try:\n                element = WebDriverWait(self.driver, wait_time).until(\n                    EC.element_to_be_clickable((by, value))\n                )\n            except TimeoutException:\n                logging.warning(f\"❌ 点击超时：元素 {by} = {value} 未在 {wait_time} 秒内变为可点击\")\n                self.safe_screenshot(\"click_timeout\", test_name=\"test\")\n>               raise TimeoutException(f\"点击失败，找不到元素：{by} = {value}\")\nE               selenium.common.exceptions.TimeoutException: Message: 点击失败，找不到元素：xpath = //span[./span[text()=\"默认\"]]/following-sibling::i[2]\n\nPages\\base_page.py:48: TimeoutException"}, "attachments": [{"name": "test_click_timeout", "source": "28ed3707-f5d0-4aed-842e-b713d7bdf0d4-attachment.png", "type": "image/png"}, {"name": "log", "source": "07fe31ae-4340-421e-b2af-adf013c20da0-attachment.txt", "type": "text/plain"}], "start": 1752675393084, "stop": 1752675406412, "uuid": "2137cacd-7881-4e66-96ad-e557a0d4a2e0", "historyId": "885edd54b571d64cc8c1af6e77bbebd0", "testCaseId": "885edd54b571d64cc8c1af6e77bbebd0", "fullName": "Tests.test_item.test_setting.TestSettingPage#test_setting_layoutlist_defaultfail", "labels": [{"name": "story", "value": "默认布局不允许修改"}, {"name": "feature", "value": "标准应用设置测试用例"}, {"name": "parentSuite", "value": "Tests.test_item"}, {"name": "suite", "value": "test_setting"}, {"name": "subSuite", "value": "TestSettingPage"}, {"name": "host", "value": "WIN-20240820MJV"}, {"name": "thread", "value": "30052-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_item.test_setting"}]}